<stylesheet xmlns="http://www.w3.org/1999/XSL/Transform" xmlns:hl7="urn:hl7-org:v3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="20">
   <include href="../hl7_include.xsl"/>

   <!-- CDA author -->
   <xsl:template name="template_2.16.840.1.113883.10.12.102_20050907000000">
      <author xmlns="urn:hl7-org:v3" typeCode="AUT" contextControlCode="OP">
         <functionCode/>
         <time/>
         <assignedAuthor classCode="ASSIGNED">
            <id/>
            <code/>
            <addr/>
            <telecom/>
            <xsl:choose>
               <xsl:when test="'TODO-X'">
                  <assignedPerson>
                     <!-- Template :: CDA Person -->
                     <xsl:call-template name="template_2.16.840.1.113883.10.12.152_20050907000000"/>
                  </assignedPerson>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <assignedAuthoringDevice>
                     <!-- Template :: CDA Device -->
                     <xsl:call-template name="template_2.16.840.1.113883.10.12.315_20050907000000"/>
                  </assignedAuthoringDevice>
               </xsl:when>
            </xsl:choose>
            <representedOrganization>
               <!-- Template :: CDA Organization -->
               <xsl:call-template name="template_2.16.840.1.113883.10.12.151_20050907000000"/>
            </representedOrganization>
         </assignedAuthor>
      </author>
   </xsl:template>

   <!-- CDA custodian -->
   <xsl:template name="template_2.16.840.1.113883.10.12.104_20050907000000">
      <custodian xmlns="urn:hl7-org:v3" typeCode="CST">
         <assignedCustodian classCode="ASSIGNED">
            <representedCustodianOrganization classCode="ORG" determinerCode="INSTANCE">
               <id/>
               <name/>
               <telecom/>
               <addr/>
            </representedCustodianOrganization>
         </assignedCustodian>
      </custodian>
   </xsl:template>

   <!-- CDA authenticator -->
   <xsl:template name="template_2.16.840.1.113883.10.12.107_20050907000000">
      <authenticator xmlns="urn:hl7-org:v3" typeCode="AUTHEN">
         <time/>
         <signatureCode/>
         <assignedEntity>
            <!-- Template :: CDA AssignedEntity -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.153_20050907000000"/>
         </assignedEntity>
      </authenticator>
   </xsl:template>

   <!-- CDA Organization -->
   <xsl:template name="template_2.16.840.1.113883.10.12.151_20050907000000">
      <xsl:attribute name="classCode">ORG</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <name xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <standardIndustryClassCode xmlns="urn:hl7-org:v3"/>
      <asOrganizationPartOf xmlns="urn:hl7-org:v3" classCode="PART">
         <id/>
         <code/>
         <statusCode/>
         <effectiveTime/>
         <wholeOrganization classCode="ORG" determinerCode="INSTANCE">
            <id/>
            <name/>
            <telecom/>
            <addr/>
            <standardIndustryClassCode/>
         </wholeOrganization>
      </asOrganizationPartOf>
   </xsl:template>

   <!-- CDA Person -->
   <xsl:template name="template_2.16.840.1.113883.10.12.152_20050907000000">
      <xsl:attribute name="classCode">PSN</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <name xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- CDA AssignedEntity -->
   <xsl:template name="template_2.16.840.1.113883.10.12.153_20050907000000">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <assignedPerson xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA Person -->
         <xsl:call-template name="template_2.16.840.1.113883.10.12.152_20050907000000"/>
      </assignedPerson>
      <representedOrganization xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA Organization -->
         <xsl:call-template name="template_2.16.840.1.113883.10.12.151_20050907000000"/>
      </representedOrganization>
   </xsl:template>

   <!-- CDA Device -->
   <xsl:template name="template_2.16.840.1.113883.10.12.315_20050907000000">
      <xsl:attribute name="classCode">DEV</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <code xmlns="urn:hl7-org:v3"/>
      <manufacturerModelName xmlns="urn:hl7-org:v3"/>
      <softwareName xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- Naam persoon -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000">
      <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
         <name xmlns="urn:hl7-org:v3" use="{naamgebruik/(@code, @value)[1]}">
            <xsl:if test="initialen | roepnaam | voornamen | initialen | voornamen | initialen | voornamen | roepnaam | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen">
               <!-- Item(s) :: initialen roepnaam voornamen initialen voornamen initialen voornamen roepnaam initialen voornamen initialen voornamen initialen voornamen initialen voornamen initialen voornamen-->
               <xsl:for-each select="initialen | roepnaam | voornamen | initialen | voornamen | initialen | voornamen | roepnaam | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen">
                  <xsl:call-template name="makeENXPValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">given</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels">
               <!-- Item(s) :: voorvoegsels voorvoegsels_partner voorvoegsels voorvoegsels voorvoegsels voorvoegsels_partner voorvoegsels voorvoegsels voorvoegsels voorvoegsels-->
               <xsl:for-each select="voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels">
                  <xsl:call-template name="makeENXPValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">prefix</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam">
               <!-- Item(s) :: achternaam achternaam_partner achternaam achternaam achternaam achternaam_partner achternaam achternaam achternaam achternaam-->
               <xsl:for-each select="achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam">
                  <xsl:call-template name="makeENXPValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">family</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <suffix qualifier=""/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <delimiter/>
            </xsl:if>
            <validTime/>
         </name>
      </xsl:for-each>
   </xsl:template>

   <!-- Adres -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.2_20141106000000">
      <xsl:for-each select="adres | adresgegevens | adresgegevens">
         <addr xmlns="urn:hl7-org:v3" use="{adres_soort | adres_soort/(@code, @value)[1]}">
            <xsl:if test="straat | straat">
               <!-- Item(s) :: straat straat-->
               <xsl:for-each select="straat | straat">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">streetName</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="huisnummer | huisnummer">
               <!-- Item(s) :: huisnummer huisnummer-->
               <xsl:for-each select="huisnummer | huisnummer">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="huisnummerletter | huisnummertoevoeging | huisnummerletter | huisnummertoevoeging">
               <!-- Item(s) :: huisnummerletter huisnummertoevoeging huisnummerletter huisnummertoevoeging-->
               <xsl:if test="huisnummerletter | huisnummertoevoeging | huisnummerletter | huisnummertoevoeging">
                  <buildingNumberSuffix>
                     <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging | huisnummerletter | huisnummertoevoeging, ' ')"/>
                  </buildingNumberSuffix>
               </xsl:if>
            </xsl:if>
            <xsl:if test="aanduiding_bij_nummer | aanduiding_bij_nummer">
               <!-- Item(s) :: aanduiding_bij_nummer aanduiding_bij_nummer-->
               <xsl:for-each select="aanduiding_bij_nummer | aanduiding_bij_nummer">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="postcode | postcode">
               <!-- Item(s) :: postcode postcode-->
               <xsl:for-each select="postcode | postcode">
                  <xsl:call-template name="makeSCValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">postalCode</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="gemeente | gemeente">
               <!-- Item(s) :: gemeente gemeente-->
               <xsl:for-each select="gemeente | gemeente">
                  <xsl:call-template name="makeSCValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">county</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="woonplaats | woonplaats">
               <!-- Item(s) :: woonplaats woonplaats-->
               <xsl:for-each select="woonplaats | woonplaats">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">city</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="land | land">
               <!-- Item(s) :: land land-->
               <xsl:for-each select="land | land">
                  <xsl:call-template name="makeSCValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">country</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <delimiter/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <unitID/>
            </xsl:if>
            <useablePeriod/>
         </addr>
      </xsl:for-each>
   </xsl:template>

   <!-- Accept Acknowledgement -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.0_20140715000000">
      <MCCI_IN000002 xmlns="urn:hl7-org:v3">
         <id root="" extension=""/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <acknowledgement typeCode="">
            <acknowledgementDetail typeCode="">
               <code/>
               <text/>
               <location/>
            </acknowledgementDetail>
            <targetMessage>
               <id/>
            </targetMessage>
         </acknowledgement>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
      </MCCI_IN000002>
   </xsl:template>

   <!-- TransmissionWrapper Initiating -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.100_20140715000000">
      <id xmlns="urn:hl7-org:v3"/>
      <creationTime xmlns="urn:hl7-org:v3"/>
      <versionCode xmlns="urn:hl7-org:v3" code="NICTIZEd2005-Okt"/>
      <interactionId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.1.6"/>
      <profileId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
      <processingCode xmlns="urn:hl7-org:v3" code="P"/>
      <processingModeCode xmlns="urn:hl7-org:v3" code="T"/>
      <acceptAckCode xmlns="urn:hl7-org:v3"/>
      <receiver xmlns="urn:hl7-org:v3" typeCode="RCV">
         <telecom/>
         <device determinerCode="INSTANCE" classCode="DEV">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
            <softwareName/>
            <agencyFor classCode="AGNT">
               <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                  <id/>
                  <name/>
                  <telecom/>
                  <NotificationParty>
                     <xsl:attribute name="classCode">CON</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <contactParty>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <Organization>
                                 <!-- Template :: Organization [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                              </Organization>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <Person>
                                 <!-- Template :: Person [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                              </Person>
                           </xsl:when>
                        </xsl:choose>
                     </contactParty>
                  </NotificationParty>
               </representedOrganization>
            </agencyFor>
         </device>
      </receiver>
      <respondTo xmlns="urn:hl7-org:v3" typeCode="RSP">
         <telecom/>
         <entityRsp classCode="DEV" determinerCode="INSTANCE">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
         </entityRsp>
      </respondTo>
      <sender xmlns="urn:hl7-org:v3" typeCode="SND">
         <telecom/>
         <device determinerCode="INSTANCE" classCode="DEV">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
            <softwareName/>
            <agencyFor classCode="AGNT">
               <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                  <id/>
                  <name/>
                  <telecom/>
                  <NotificationParty>
                     <xsl:attribute name="classCode">CON</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <contactParty>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <Organization>
                                 <!-- Template :: Organization [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                              </Organization>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <Person>
                                 <!-- Template :: Person [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                              </Person>
                           </xsl:when>
                        </xsl:choose>
                     </contactParty>
                  </NotificationParty>
               </representedOrganization>
            </agencyFor>
         </device>
      </sender>
   </xsl:template>

   <!-- AORTA Application ID -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1008_20140715000000">
      <id xmlns="urn:hl7-org:v3" extension="" root="2.16.840.1.113883.2.4.6.6"/>
   </xsl:template>

   <!-- UZI-nummer personen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1009_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007.3.1"/>
   </xsl:template>

   <!-- Generic Transmission Checks -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.101_20140715000000"/>

   <!-- UZI-nummer systemen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1010_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007.3.2"/>
   </xsl:template>

   <!-- UZI-register abonneenummer (URA) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1011_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007.3.3"/>
   </xsl:template>

   <!-- Burgerservicenummer (BSN) Id -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1012_20140715000000">
      <id xmlns="urn:hl7-org:v3" extension="" root="2.16.840.1.113883.2.4.6.3"/>
   </xsl:template>

   <!-- QueryParam PatientId -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1014_20140715000000">
      <patientId xmlns="urn:hl7-org:v3">
         <value root="2.16.840.1.113883.2.4.6.3"/>
      </patientId>
   </xsl:template>

   <!-- Batch Inzage Auteur -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1015_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.7.3"/>
   </xsl:template>

   <!-- Nictiz Klantenloket PKIO -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1016_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1003.1.3.5.4.1"/>
   </xsl:template>

   <!-- AGB -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1017_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.6.1"/>
   </xsl:template>

   <!-- SBV-Z systemen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1018_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007.4"/>
   </xsl:template>

   <!-- SBV-Z Organization ID -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1019_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007" extension="4"/>
   </xsl:template>

   <!-- Generic ControlActProcess Checks -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.102_20140715000000"/>

   <!-- GBO/GBP -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1020_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.25"/>
   </xsl:template>

   <!-- GBK Organization ID -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1021_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11" extension="7"/>
   </xsl:template>

   <!-- E_Organization [universal] -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.1023_20170530103308">
      <Organization xmlns="urn:hl7-org:v3">
         <xsl:choose>
            <xsl:when test="'TODO-X-Include in choice'">
               <id root="2.16.528.1.1007.3.3"/>
            </xsl:when>
            <xsl:when test="'TODO-X-Include in choice'">
               <id root="2.16.528.1.1007" extension="4"/>
            </xsl:when>
            <xsl:when test="'TODO-X-Include in choice'">
               <id root="2.16.840.1.113883.2.4.3.11.25"/>
            </xsl:when>
            <xsl:when test="'TODO-X-Include in choice'">
               <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
            </xsl:when>
         </xsl:choose>
         <id/>
         <code/>
         <telecom/>
         <name/>
         <addr>
            <city/>
         </addr>
      </Organization>
   </xsl:template>

   <!-- TransmissionWrapper Device -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.110_20140715000000">
      <device xmlns="urn:hl7-org:v3" determinerCode="INSTANCE" classCode="DEV">
         <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
         <name/>
         <telecom/>
         <softwareName/>
         <agencyFor classCode="AGNT">
            <representedOrganization classCode="ORG" determinerCode="INSTANCE">
               <id/>
               <name/>
               <telecom/>
               <NotificationParty>
                  <xsl:attribute name="classCode">CON</xsl:attribute>
                  <id/>
                  <code/>
                  <addr/>
                  <telecom/>
                  <contactParty>
                     <xsl:choose>
                        <xsl:when test="'TODO-X'">
                           <Organization>
                              <!-- Template :: Organization [contact] -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                           </Organization>
                        </xsl:when>
                        <xsl:when test="'TODO-X'">
                           <Person>
                              <!-- Template :: Person [contact] -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                           </Person>
                        </xsl:when>
                     </xsl:choose>
                  </contactParty>
               </NotificationParty>
            </representedOrganization>
         </agencyFor>
      </device>
   </xsl:template>

   <!-- TransmissionWrapper AttentionLine -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.120_20140715000000">
      <attentionLine xmlns="urn:hl7-org:v3">
         <keyWordText/>
         <value xsi:type="ANY"/>
      </attentionLine>
   </xsl:template>

   <!-- ControlAct Initiating -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.130_20120801000000">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <AssignedPerson>
               <!-- Template :: Assigned Person [universal] -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
            </AssignedPerson>
         </overseer>
         <reason typeCode="RSON" contextConductionInd="">
            <justifyingDetectedIssueEvent>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifyingDetectedIssueEvent>
         </reason>
         <subject/>
      </ControlActProcess>
   </xsl:template>

   <!-- ControlAct Query by Parameter -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.133_20120801000000">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <assignedEntity>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1007.3.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1003.1.3.5.4.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.6.1"/>
               </xsl:if>
               <code/>
               <telecom/>
               <assignedPrincipalChoiceList>
                  <assignedPerson>
                     <name/>
                  </assignedPerson>
               </assignedPrincipalChoiceList>
               <Organization>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007.3.3"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007" extension="4"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11.25"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                     </xsl:when>
                  </xsl:choose>
                  <id/>
                  <code/>
                  <telecom/>
                  <name/>
                  <addr>
                     <city/>
                  </addr>
               </Organization>
               <templateId/>
            </assignedEntity>
         </overseer>
         <queryByParameter>
            <queryId/>
            <statusCode/>
            <modifyCode/>
            <responseModalityCode/>
            <responsePriorityCode/>
            <initialQuantity/>
            <initialQuantityCode/>
            <executionAndDeliveryTime/>
            <patientId>
               <value root="2.16.840.1.113883.2.4.6.3"/>
            </patientId>
         </queryByParameter>
      </ControlActProcess>
   </xsl:template>

   <!-- TransmissionWrapper Accept Ack -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.200_20140715000000">
      <id xmlns="urn:hl7-org:v3" root="" extension=""/>
      <creationTime xmlns="urn:hl7-org:v3"/>
      <versionCode xmlns="urn:hl7-org:v3" code="NICTIZEd2005-Okt"/>
      <interactionId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.1.6"/>
      <profileId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
      <processingCode xmlns="urn:hl7-org:v3" code="P"/>
      <processingModeCode xmlns="urn:hl7-org:v3" code="T"/>
      <acceptAckCode xmlns="urn:hl7-org:v3" code="NE"/>
      <acknowledgement xmlns="urn:hl7-org:v3" typeCode="">
         <acknowledgementDetail typeCode="">
            <code/>
            <text/>
            <location/>
         </acknowledgementDetail>
         <targetMessage>
            <id/>
         </targetMessage>
      </acknowledgement>
      <receiver xmlns="urn:hl7-org:v3" typeCode="RCV">
         <telecom/>
         <device determinerCode="INSTANCE" classCode="DEV">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
            <softwareName/>
            <agencyFor classCode="AGNT">
               <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                  <id/>
                  <name/>
                  <telecom/>
                  <NotificationParty>
                     <xsl:attribute name="classCode">CON</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <contactParty>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <Organization>
                                 <!-- Template :: Organization [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                              </Organization>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <Person>
                                 <!-- Template :: Person [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                              </Person>
                           </xsl:when>
                        </xsl:choose>
                     </contactParty>
                  </NotificationParty>
               </representedOrganization>
            </agencyFor>
         </device>
      </receiver>
      <sender xmlns="urn:hl7-org:v3" typeCode="SND">
         <telecom/>
         <device determinerCode="INSTANCE" classCode="DEV">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
            <softwareName/>
            <agencyFor classCode="AGNT">
               <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                  <id/>
                  <name/>
                  <telecom/>
                  <NotificationParty>
                     <xsl:attribute name="classCode">CON</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <contactParty>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <Organization>
                                 <!-- Template :: Organization [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                              </Organization>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <Person>
                                 <!-- Template :: Person [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                              </Person>
                           </xsl:when>
                        </xsl:choose>
                     </contactParty>
                  </NotificationParty>
               </representedOrganization>
            </agencyFor>
         </device>
      </sender>
   </xsl:template>

   <!-- TransmissionWrapper Application Ack -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.300_20140715000000">
      <id xmlns="urn:hl7-org:v3"/>
      <creationTime xmlns="urn:hl7-org:v3"/>
      <versionCode xmlns="urn:hl7-org:v3" code="NICTIZEd2005-Okt"/>
      <interactionId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.1.6"/>
      <profileId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
      <processingCode xmlns="urn:hl7-org:v3" code="P"/>
      <processingModeCode xmlns="urn:hl7-org:v3" code="T"/>
      <acceptAckCode xmlns="urn:hl7-org:v3" code="NE"/>
      <acknowledgement xmlns="urn:hl7-org:v3" typeCode="">
         <acknowledgementDetail typeCode="">
            <code/>
            <text/>
            <location/>
         </acknowledgementDetail>
         <targetMessage>
            <id/>
         </targetMessage>
      </acknowledgement>
      <receiver xmlns="urn:hl7-org:v3" typeCode="RCV">
         <telecom/>
         <device determinerCode="INSTANCE" classCode="DEV">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
            <softwareName/>
            <agencyFor classCode="AGNT">
               <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                  <id/>
                  <name/>
                  <telecom/>
                  <NotificationParty>
                     <xsl:attribute name="classCode">CON</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <contactParty>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <Organization>
                                 <!-- Template :: Organization [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                              </Organization>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <Person>
                                 <!-- Template :: Person [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                              </Person>
                           </xsl:when>
                        </xsl:choose>
                     </contactParty>
                  </NotificationParty>
               </representedOrganization>
            </agencyFor>
         </device>
      </receiver>
      <respondTo xmlns="urn:hl7-org:v3" typeCode="RSP">
         <telecom/>
         <entityRsp classCode="" determinerCode="">
            <id/>
            <name/>
            <telecom/>
         </entityRsp>
      </respondTo>
      <sender xmlns="urn:hl7-org:v3" typeCode="SND">
         <telecom/>
         <device determinerCode="INSTANCE" classCode="DEV">
            <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
            <name/>
            <telecom/>
            <softwareName/>
            <agencyFor classCode="AGNT">
               <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                  <id/>
                  <name/>
                  <telecom/>
                  <NotificationParty>
                     <xsl:attribute name="classCode">CON</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <contactParty>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <Organization>
                                 <!-- Template :: Organization [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                              </Organization>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <Person>
                                 <!-- Template :: Person [contact] -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                              </Person>
                           </xsl:when>
                        </xsl:choose>
                     </contactParty>
                  </NotificationParty>
               </representedOrganization>
            </agencyFor>
         </device>
      </sender>
   </xsl:template>

   <!-- ControlAct Query Response -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.330_20120801000000">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <subject typeCode="SUBJ" contextConductionInd="false"/>
         <reasonOf typeCode="RSON" contextConductionInd="">
            <justifiedDetectedIssue>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifiedDetectedIssue>
         </reasonOf>
         <queryAck>
            <queryId/>
            <statusCode/>
            <queryResponseCode/>
            <resultTotalQuantity/>
            <resultCurrentQuantity/>
            <resultRemainingQuantity/>
         </queryAck>
      </ControlActProcess>
   </xsl:template>

   <!-- ControlAct AuthorOrPerformer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.500_20120801000000">
      <authorOrPerformer xmlns="urn:hl7-org:v3" typeCode="">
         <participant>
            <xsl:choose>
               <xsl:when test="'TODO-X'">
                  <AssignedDevice>
                     <!-- Template :: Assigned Device [universal] -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                  </AssignedDevice>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <AssignedPerson>
                     <!-- Template :: Assigned Person [universal] -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                  </AssignedPerson>
               </xsl:when>
            </xsl:choose>
         </participant>
      </authorOrPerformer>
   </xsl:template>

   <!-- ControlAct Overseer Person (MCAI / MFMI) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.502_20120801000000">
      <overseer xmlns="urn:hl7-org:v3" typeCode="RESP">
         <AssignedPerson>
            <!-- Template :: Assigned Person [universal] -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
         </AssignedPerson>
      </overseer>
   </xsl:template>

   <!-- ControlAct Overseer Person (Query) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.503_20120801000000">
      <overseer xmlns="urn:hl7-org:v3" typeCode="RESP">
         <assignedEntity>
            <xsl:if test="'TODO-X-Include in choice'">
               <id root="2.16.528.1.1007.3.1"/>
            </xsl:if>
            <xsl:if test="'TODO-X-Include in choice'">
               <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
            </xsl:if>
            <xsl:if test="'TODO-X-Include in choice'">
               <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
            </xsl:if>
            <xsl:if test="'TODO-X-Include in choice'">
               <id root="2.16.528.1.1003.1.3.5.4.1"/>
            </xsl:if>
            <xsl:if test="'TODO-X-Include in choice'">
               <id root="2.16.840.1.113883.2.4.6.1"/>
            </xsl:if>
            <code/>
            <telecom/>
            <assignedPrincipalChoiceList>
               <assignedPerson>
                  <name/>
               </assignedPerson>
            </assignedPrincipalChoiceList>
            <Organization>
               <xsl:choose>
                  <xsl:when test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007.3.3"/>
                  </xsl:when>
                  <xsl:when test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007" extension="4"/>
                  </xsl:when>
                  <xsl:when test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11.25"/>
                  </xsl:when>
                  <xsl:when test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                  </xsl:when>
               </xsl:choose>
               <id/>
               <code/>
               <telecom/>
               <name/>
               <addr>
                  <city/>
               </addr>
            </Organization>
            <templateId/>
         </assignedEntity>
      </overseer>
   </xsl:template>

   <!-- QueryByParameter Stub -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.505_20120901000000">
      <queryByParameter xmlns="urn:hl7-org:v3">
         <queryId/>
         <statusCode/>
         <modifyCode/>
         <responseModalityCode/>
         <responsePriorityCode/>
         <initialQuantity/>
         <initialQuantityCode/>
         <executionAndDeliveryTime/>
         <patientId>
            <value root="2.16.840.1.113883.2.4.6.3"/>
         </patientId>
      </queryByParameter>
   </xsl:template>

   <!-- Query Ack -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.506_20120901000000">
      <queryAck xmlns="urn:hl7-org:v3">
         <queryId/>
         <statusCode/>
         <queryResponseCode/>
         <resultTotalQuantity/>
         <resultCurrentQuantity/>
         <resultRemainingQuantity/>
      </queryAck>
   </xsl:template>

   <!-- DetectedIssueEvent -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000">
      <xsl:attribute name="classCode">ALRT</xsl:attribute>
      <xsl:attribute name="moodCode">EVN</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <text xmlns="urn:hl7-org:v3"/>
      <value xmlns="urn:hl7-org:v3"/>
      <triggerFor xmlns="urn:hl7-org:v3" typeCode="TRIG" contextConductionInd="" negationInd="">
         <actOrderRequired classCode="ACT" moodCode="RQO">
            <code/>
            <effectiveTime/>
            <subject typeCode="">
               <participant classCode="">
                  <code/>
               </participant>
            </subject>
         </actOrderRequired>
      </triggerFor>
      <targetOf xmlns="urn:hl7-org:v3" typeCode="" contextConductionInd="false">
         <source classCode="" moodCode="">
            <code/>
            <text/>
         </source>
      </targetOf>
   </xsl:template>

   <!-- Assigned Device [universal] -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000">
      <templateId xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- Assigned Person [universal] -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000">
      <code xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <assignedPrincipalChoiceList xmlns="urn:hl7-org:v3">
         <assignedPerson>
            <name/>
         </assignedPerson>
      </assignedPrincipalChoiceList>
      <templateId xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- ControlAct AuthorOrPerformer Device -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.515_20120801000000">
      <authorOrPerformer xmlns="urn:hl7-org:v3" typeCode="">
         <participant>
            <AssignedDevice>
               <!-- Template :: Assigned Device [universal] -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
            </AssignedDevice>
         </participant>
      </authorOrPerformer>
   </xsl:template>

   <!-- Notification Party [contact] -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.516_20120901000000">
      <xsl:attribute name="classCode">CON</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <contactParty xmlns="urn:hl7-org:v3">
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <Organization>
                  <!-- Template :: Organization [contact] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
               </Organization>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <Person>
                  <!-- Template :: Person [contact] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
               </Person>
            </xsl:when>
         </xsl:choose>
      </contactParty>
   </xsl:template>

   <!-- Organization [contact] -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000">
      <xsl:attribute name="classCode">ORG</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <name xmlns="urn:hl7-org:v3"/>
      <contact xmlns="urn:hl7-org:v3" classCode="CON">
         <id/>
         <code/>
         <addr/>
         <telecom/>
         <contactPerson classCode="PSN" determinerCode="INSTANCE">
            <name/>
            <templateId/>
            <!-- Template :: Person [contact] -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
         </contactPerson>
         <templateId/>
      </contact>
      <templateId xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- Person [contact] -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000">
      <xsl:attribute name="classCode">PSN</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <name xmlns="urn:hl7-org:v3"/>
      <administrativeGenderCode xmlns="urn:hl7-org:v3"/>
      <birthTime xmlns="urn:hl7-org:v3"/>
      <languageCommunication xmlns="urn:hl7-org:v3">
         <languageCode/>
         <modeCode/>
         <proficiencyLevelCode/>
         <preferenceInd/>
         <templateId/>
      </languageCommunication>
      <templateId xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- Medicatievoorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.1_20130521000000">
      <PORX_IN932000NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <AssignedPerson>
                  <!-- Template :: Assigned Person [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
               </AssignedPerson>
            </overseer>
            <reason typeCode="RSON" contextConductionInd="">
               <justifyingDetectedIssueEvent>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifyingDetectedIssueEvent>
            </reason>
            <subject>
               <xsl:for-each select="voorschrift">
                  <prescription classCode="SBADM" moodCode="RQO">
                     <!-- Item(s) :: identificatie-->
                     <xsl:for-each select="identificatie">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: status-->
                     <xsl:for-each select="status">
                        <xsl:call-template name="makeCSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">statusCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <subject typeCode="SBJ">
                        <xsl:for-each select="geboortegegevens | persoonsidentificatie | patientgegevens">
                           <Patient>
                              <!-- Template :: PatientNL -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                           </Patient>
                        </xsl:for-each>
                     </subject>
                     <author typeCode="AUT">
                        <time/>
                        <AssignedPerson>
                           <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                           <xsl:if test="'TODO-X'">
                              <id root="2.16.528.1.1007.3.1"/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id root="2.16.840.1.113883.2.4.6.1"/>
                           </xsl:if>
                           <code/>
                           <addr/>
                           <assignee>
                              <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                                 <name/>
                              </assigneePerson>
                           </assignee>
                           <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                              <id/>
                              <code/>
                              <name/>
                              <addr/>
                           </representedOrganization>
                        </AssignedPerson>
                     </author>
                     <directTarget typeCode="DIR">
                        <prescribedMedication typeCode="THER">
                           <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                              <MedicationKind classCode="MMAT" determinerCode="KIND">
                                 <xsl:choose>
                                    <xsl:when test="product_code | product_code | product_code">
                                       <!-- Item(s) :: product_code product_code product_code-->
                                       <xsl:for-each select="product_code | product_code | product_code">
                                          <xsl:call-template name="makeCEValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">code</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="'TODO-X'">
                                       <code nullFlavor="OTH">
                                          <originalText/>
                                       </code>
                                    </xsl:when>
                                 </xsl:choose>
                                 <!-- Item(s) :: omschrijving omschrijving-->
                                 <xsl:for-each select="omschrijving | omschrijving">
                                    <xsl:call-template name="makeEDValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">desc</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                                    <activeIngredient classCode="ACTI">
                                       <!-- Template :: Active Ingredient -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                                    </activeIngredient>
                                 </xsl:for-each>
                                 <xsl:for-each select="sterkte">
                                    <otherIngredient classCode="INGR">
                                       <!-- Template :: Other Ingredient -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                                    </otherIngredient>
                                 </xsl:for-each>
                              </MedicationKind>
                           </xsl:for-each>
                           <productOf typeCode="PRD">
                              <medicationDispenseRequest classCode="SPLY" moodCode="RQO">
                                 <id/>
                                 <statusCode nullFlavor="NA"/>
                                 <repeatNumber/>
                                 <quantity>
                                    <translation/>
                                    <translation/>
                                 </quantity>
                                 <destination>
                                    <serviceDeliveryLocation>
                                       <code/>
                                       <!-- Item(s) :: afleverlocatie-->
                                       <xsl:for-each select="afleverlocatie">
                                          <xsl:call-template name="makeADValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">addr</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </serviceDeliveryLocation>
                                 </destination>
                                 <performer typeCode="PRF">
                                    <!-- Template :: Beoogde verstrekker -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9017_20130521000000"/>
                                 </performer>
                              </medicationDispenseRequest>
                           </productOf>
                           <therapeuticAgentOf typeCode="TPA">
                              <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
                                 <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
                                    <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
                                    <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                                       <xsl:call-template name="makeSTValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">text</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <statusCode code="active"/>
                                    <xsl:choose>
                                       <xsl:when test="'TODO-X'">
                                          <effectiveTime>
                                             <xsl:for-each select="gebruiksperiodeduur">
                                                <comp>
                                                   <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                                   <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                      <xsl:call-template name="makeTSValue">
                                                         <xsl:with-param name="xsiType" select="''"/>
                                                         <xsl:with-param name="elemName">low</xsl:with-param>
                                                      </xsl:call-template>
                                                   </xsl:for-each>
                                                   <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                                   <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                      <xsl:call-template name="makePQValue">
                                                         <xsl:with-param name="xsiType" select="''"/>
                                                         <xsl:with-param name="elemName">width</xsl:with-param>
                                                      </xsl:call-template>
                                                   </xsl:for-each>
                                                   <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                                   <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                      <xsl:call-template name="makeTSValue">
                                                         <xsl:with-param name="xsiType" select="''"/>
                                                         <xsl:with-param name="elemName">high</xsl:with-param>
                                                      </xsl:call-template>
                                                   </xsl:for-each>
                                                </comp>
                                             </xsl:for-each>
                                             <comp>
                                                <xsl:attribute name="operator"/>
                                                <phase>
                                                   <center/>
                                                   <low/>
                                                   <width value="" unit="d"/>
                                                </phase>
                                                <period value="" unit=""/>
                                             </comp>
                                             <comp operator="">
                                                <comp operator="">
                                                   <comp>
                                                      <xsl:attribute name="operator"/>
                                                      <phase>
                                                         <center/>
                                                         <low/>
                                                         <width value="" unit="d"/>
                                                      </phase>
                                                      <period value="" unit=""/>
                                                   </comp>
                                                </comp>
                                                <comp>
                                                   <xsl:attribute name="operator"/>
                                                   <phase>
                                                      <center/>
                                                      <low/>
                                                      <width value="" unit="d"/>
                                                   </phase>
                                                   <period value="" unit=""/>
                                                </comp>
                                             </comp>
                                          </effectiveTime>
                                       </xsl:when>
                                       <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                          <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                             <effectiveTime>
                                                <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                                <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">low</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                                <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">width</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                                <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">high</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </effectiveTime>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                          <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                                          <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                             <xsl:call-template name="makePIVL_TSValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="'TODO-X'">
                                          <effectiveTime value=""/>
                                       </xsl:when>
                                    </xsl:choose>
                                    <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
                                    <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                                       <xsl:call-template name="makeCEValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">routeCode</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <xsl:choose>
                                       <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                          <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                             <xsl:call-template name="makeIVL_PQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                          <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                             <xsl:call-template name="makeIVL_PQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                          <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                             <xsl:call-template name="makeIVL_PQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                    </xsl:choose>
                                    <doseCheckQuantity>
                                       <numerator xsi:type="">
                                          <xsl:attribute name="value"/>
                                          <xsl:attribute name="unit"/>
                                          <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                          <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                          <low>
                                             <xsl:attribute name="value"/>
                                             <xsl:attribute name="unit"/>
                                             <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                             <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                          </low>
                                          <high>
                                             <xsl:attribute name="value"/>
                                             <xsl:attribute name="unit"/>
                                             <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                             <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                          </high>
                                       </numerator>
                                       <denominator xsi:type="PQ" value="" unit=""/>
                                    </doseCheckQuantity>
                                    <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
                                    <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                                       <xsl:call-template name="makeRTO_QTY_QTYValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                                       <support2 typeCode="SPRT">
                                          <!-- Template :: Medication Administration Instruction -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                                       </support2>
                                    </xsl:for-each>
                                    <xsl:for-each select="preconditie | preconditie | preconditie">
                                       <precondition typeCode="PRCN">
                                          <!-- Template :: Observation Event Criterion -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                                       </precondition>
                                    </xsl:for-each>
                                 </medicationAdministrationRequest>
                              </xsl:for-each>
                           </therapeuticAgentOf>
                        </prescribedMedication>
                     </directTarget>
                     <reason typeCode="RSON">
                        <diagnosisEvent classCode="OBS" moodCode="EVN">
                           <code code="DX" codeSystem="2.16.840.1.113883.5.4"/>
                           <value/>
                        </diagnosisEvent>
                     </reason>
                  </prescription>
               </xsl:for-each>
            </subject>
         </ControlActProcess>
      </PORX_IN932000NL>
   </xsl:template>

   <!-- Medicatieverstrekkingenlijstqueryresponse -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.10_20130521000000">
      <QURX_IN990113NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <acknowledgement typeCode="">
            <acknowledgementDetail typeCode="">
               <code/>
               <text/>
               <location/>
            </acknowledgementDetail>
            <targetMessage>
               <id/>
            </targetMessage>
         </acknowledgement>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="" determinerCode="">
               <id/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <AssignedDevice>
                     <!-- Template :: Assigned Device [universal] -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                  </AssignedDevice>
               </participant>
            </authorOrPerformer>
            <subject typeCode="SUBJ" contextConductionInd="false">
               <MedicationDispenseList classCode="LIST" moodCode="EVN">
                  <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
                  <subject typeCode="SBJ">
                     <xsl:for-each select="persoonsidentificatie | geboortegegevens | persoonsidentificatie | geboortegegevens | patientgegevens">
                        <Patient>
                           <!-- Template :: PatientNL in verstrekking -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000"/>
                        </Patient>
                     </xsl:for-each>
                  </subject>
                  <component typeCode="COMP">
                     <xsl:for-each select="datum | verantwoordelijke | identificatie | verantwoordelijke | verbruiksperiode | hoeveelheid | status | status | identificatie">
                        <medicationDispenseEvent>
                           <!-- Template :: Medication Dispense Event -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000"/>
                        </medicationDispenseEvent>
                     </xsl:for-each>
                  </component>
               </MedicationDispenseList>
            </subject>
            <reasonOf typeCode="RSON" contextConductionInd="">
               <justifiedDetectedIssue>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifiedDetectedIssue>
            </reasonOf>
            <queryAck>
               <queryId/>
               <statusCode/>
               <queryResponseCode/>
               <resultTotalQuantity/>
               <resultCurrentQuantity/>
               <resultRemainingQuantity/>
            </queryAck>
         </ControlActProcess>
      </QURX_IN990113NL>
   </xsl:template>

   <!-- therapeuticAgentOf - Medication Administration Request -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.100_20130521000000">
      <therapeuticAgentOf xmlns="urn:hl7-org:v3" typeCode="TPA">
         <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
            <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
               <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
               <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">text</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <statusCode code="active"/>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <effectiveTime>
                        <xsl:for-each select="gebruiksperiodeduur">
                           <comp>
                              <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                              <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                 <xsl:call-template name="makeTSValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">low</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                              <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                 <xsl:call-template name="makePQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">width</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                              <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                 <xsl:call-template name="makeTSValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">high</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </comp>
                        </xsl:for-each>
                        <comp>
                           <xsl:attribute name="operator"/>
                           <phase>
                              <center/>
                              <low/>
                              <width value="" unit="d"/>
                           </phase>
                           <period value="" unit=""/>
                        </comp>
                        <comp operator="">
                           <comp operator="">
                              <comp>
                                 <xsl:attribute name="operator"/>
                                 <phase>
                                    <center/>
                                    <low/>
                                    <width value="" unit="d"/>
                                 </phase>
                                 <period value="" unit=""/>
                              </comp>
                           </comp>
                           <comp>
                              <xsl:attribute name="operator"/>
                              <phase>
                                 <center/>
                                 <low/>
                                 <width value="" unit="d"/>
                              </phase>
                              <period value="" unit=""/>
                           </comp>
                        </comp>
                     </effectiveTime>
                  </xsl:when>
                  <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                     <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                        <effectiveTime>
                           <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                           <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                              <xsl:call-template name="makeTSValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">low</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                           <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                              <xsl:call-template name="makePQValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">width</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                           <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                              <xsl:call-template name="makeTSValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">high</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </effectiveTime>
                     </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                     <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                     <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                        <xsl:call-template name="makePIVL_TSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <effectiveTime value=""/>
                  </xsl:when>
               </xsl:choose>
               <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
               <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                  <xsl:call-template name="makeCEValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">routeCode</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:choose>
                  <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                     <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                     <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                        <xsl:call-template name="makeIVL_PQValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                     <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                     <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                        <xsl:call-template name="makeIVL_PQValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                     <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                     <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                        <xsl:call-template name="makeIVL_PQValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:when>
               </xsl:choose>
               <doseCheckQuantity>
                  <numerator xsi:type="">
                     <xsl:attribute name="value"/>
                     <xsl:attribute name="unit"/>
                     <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                     <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                     <low>
                        <xsl:attribute name="value"/>
                        <xsl:attribute name="unit"/>
                        <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                        <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                     </low>
                     <high>
                        <xsl:attribute name="value"/>
                        <xsl:attribute name="unit"/>
                        <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                        <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                     </high>
                  </numerator>
                  <denominator xsi:type="PQ" value="" unit=""/>
               </doseCheckQuantity>
               <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
               <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                  <xsl:call-template name="makeRTO_QTY_QTYValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                  <support2 typeCode="SPRT">
                     <!-- Template :: Medication Administration Instruction -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                  </support2>
               </xsl:for-each>
               <xsl:for-each select="preconditie | preconditie | preconditie">
                  <precondition typeCode="PRCN">
                     <!-- Template :: Observation Event Criterion -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                  </precondition>
               </xsl:for-each>
            </medicationAdministrationRequest>
         </xsl:for-each>
      </therapeuticAgentOf>
   </xsl:template>

   <!-- Medication Administration Instruction -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000">
      <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
         <medicationAdministrationInstruction xmlns="urn:hl7-org:v3" classCode="INFRM" typeCode="RQO">
            <!-- Item(s) :: code code code code code-->
            <xsl:for-each select="code | code | code | code | code">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">code</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </medicationAdministrationInstruction>
      </xsl:for-each>
   </xsl:template>

   <!-- Medication Dispense Request -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.103_20130521000000">
      <medicationDispenseRequest xmlns="urn:hl7-org:v3" classCode="SPLY" moodCode="RQO">
         <id/>
         <statusCode nullFlavor="NA"/>
         <repeatNumber/>
         <quantity>
            <translation/>
            <translation/>
         </quantity>
         <destination>
            <serviceDeliveryLocation>
               <code/>
               <!-- Item(s) :: afleverlocatie-->
               <xsl:for-each select="afleverlocatie">
                  <xsl:call-template name="makeADValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">addr</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </serviceDeliveryLocation>
         </destination>
         <performer typeCode="PRF">
            <!-- Template :: Beoogde verstrekker -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9017_20130521000000"/>
         </performer>
      </medicationDispenseRequest>
   </xsl:template>

   <!-- Medication Combined Order -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.104_20130521000000">
      <xsl:for-each select="voorschrift">
         <prescription xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: status-->
            <xsl:for-each select="status">
               <xsl:call-template name="makeCSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">statusCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <subject typeCode="SBJ">
               <xsl:for-each select="geboortegegevens | persoonsidentificatie | patientgegevens">
                  <Patient>
                     <!-- Template :: PatientNL -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                  </Patient>
               </xsl:for-each>
            </subject>
            <author typeCode="AUT">
               <time/>
               <AssignedPerson>
                  <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                  <xsl:if test="'TODO-X'">
                     <id root="2.16.528.1.1007.3.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <id root="2.16.840.1.113883.2.4.6.1"/>
                  </xsl:if>
                  <code/>
                  <addr/>
                  <assignee>
                     <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                        <name/>
                     </assigneePerson>
                  </assignee>
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <code/>
                     <name/>
                     <addr/>
                  </representedOrganization>
               </AssignedPerson>
            </author>
            <directTarget typeCode="DIR">
               <prescribedMedication typeCode="THER">
                  <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                     <MedicationKind classCode="MMAT" determinerCode="KIND">
                        <xsl:choose>
                           <xsl:when test="product_code | product_code | product_code">
                              <!-- Item(s) :: product_code product_code product_code-->
                              <xsl:for-each select="product_code | product_code | product_code">
                                 <xsl:call-template name="makeCEValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">code</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <code nullFlavor="OTH">
                                 <originalText/>
                              </code>
                           </xsl:when>
                        </xsl:choose>
                        <!-- Item(s) :: omschrijving omschrijving-->
                        <xsl:for-each select="omschrijving | omschrijving">
                           <xsl:call-template name="makeEDValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">desc</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                           <activeIngredient classCode="ACTI">
                              <!-- Template :: Active Ingredient -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                           </activeIngredient>
                        </xsl:for-each>
                        <xsl:for-each select="sterkte">
                           <otherIngredient classCode="INGR">
                              <!-- Template :: Other Ingredient -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                           </otherIngredient>
                        </xsl:for-each>
                     </MedicationKind>
                  </xsl:for-each>
                  <productOf typeCode="PRD">
                     <medicationDispenseRequest classCode="SPLY" moodCode="RQO">
                        <id/>
                        <statusCode nullFlavor="NA"/>
                        <repeatNumber/>
                        <quantity>
                           <translation/>
                           <translation/>
                        </quantity>
                        <destination>
                           <serviceDeliveryLocation>
                              <code/>
                              <!-- Item(s) :: afleverlocatie-->
                              <xsl:for-each select="afleverlocatie">
                                 <xsl:call-template name="makeADValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">addr</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </serviceDeliveryLocation>
                        </destination>
                        <performer typeCode="PRF">
                           <!-- Template :: Beoogde verstrekker -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9017_20130521000000"/>
                        </performer>
                     </medicationDispenseRequest>
                  </productOf>
                  <therapeuticAgentOf typeCode="TPA">
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
                        <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
                           <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
                           <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">text</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <statusCode code="active"/>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <effectiveTime>
                                    <xsl:for-each select="gebruiksperiodeduur">
                                       <comp>
                                          <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                          <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                             <xsl:call-template name="makeTSValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                          <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                          <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">width</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                          <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                          <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                             <xsl:call-template name="makeTSValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </comp>
                                    </xsl:for-each>
                                    <comp>
                                       <xsl:attribute name="operator"/>
                                       <phase>
                                          <center/>
                                          <low/>
                                          <width value="" unit="d"/>
                                       </phase>
                                       <period value="" unit=""/>
                                    </comp>
                                    <comp operator="">
                                       <comp operator="">
                                          <comp>
                                             <xsl:attribute name="operator"/>
                                             <phase>
                                                <center/>
                                                <low/>
                                                <width value="" unit="d"/>
                                             </phase>
                                             <period value="" unit=""/>
                                          </comp>
                                       </comp>
                                       <comp>
                                          <xsl:attribute name="operator"/>
                                          <phase>
                                             <center/>
                                             <low/>
                                             <width value="" unit="d"/>
                                          </phase>
                                          <period value="" unit=""/>
                                       </comp>
                                    </comp>
                                 </effectiveTime>
                              </xsl:when>
                              <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                 <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                    <effectiveTime>
                                       <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                       <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                          <xsl:call-template name="makeTSValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">low</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                       <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                       <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">width</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                       <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                       <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                          <xsl:call-template name="makeTSValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">high</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </effectiveTime>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                 <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                                 <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                    <xsl:call-template name="makePIVL_TSValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <effectiveTime value=""/>
                              </xsl:when>
                           </xsl:choose>
                           <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
                           <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                              <xsl:call-template name="makeCEValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">routeCode</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <xsl:choose>
                              <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                 <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                 <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                    <xsl:call-template name="makeIVL_PQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                 <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                 <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                    <xsl:call-template name="makeIVL_PQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                 <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                 <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                    <xsl:call-template name="makeIVL_PQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                           </xsl:choose>
                           <doseCheckQuantity>
                              <numerator xsi:type="">
                                 <xsl:attribute name="value"/>
                                 <xsl:attribute name="unit"/>
                                 <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                 <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                 <low>
                                    <xsl:attribute name="value"/>
                                    <xsl:attribute name="unit"/>
                                    <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                    <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                 </low>
                                 <high>
                                    <xsl:attribute name="value"/>
                                    <xsl:attribute name="unit"/>
                                    <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                    <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                 </high>
                              </numerator>
                              <denominator xsi:type="PQ" value="" unit=""/>
                           </doseCheckQuantity>
                           <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
                           <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                              <xsl:call-template name="makeRTO_QTY_QTYValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                              <support2 typeCode="SPRT">
                                 <!-- Template :: Medication Administration Instruction -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                              </support2>
                           </xsl:for-each>
                           <xsl:for-each select="preconditie | preconditie | preconditie">
                              <precondition typeCode="PRCN">
                                 <!-- Template :: Observation Event Criterion -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                              </precondition>
                           </xsl:for-each>
                        </medicationAdministrationRequest>
                     </xsl:for-each>
                  </therapeuticAgentOf>
               </prescribedMedication>
            </directTarget>
            <reason typeCode="RSON">
               <diagnosisEvent classCode="OBS" moodCode="EVN">
                  <code code="DX" codeSystem="2.16.840.1.113883.5.4"/>
                  <value/>
               </diagnosisEvent>
            </reason>
         </prescription>
      </xsl:for-each>
   </xsl:template>

   <!-- substanceAdministration -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20131221000000">
      <xsl:for-each select="gebruik_indicator | medicatiegebruik">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN" negationInd="">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.105"/>
            <id/>
            <!-- Item(s) :: omschrijving-->
            <xsl:for-each select="omschrijving">
               <xsl:call-template name="makeSTValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">text</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <statusCode/>
            <xsl:choose>
               <xsl:when test="'TODO-X'">
                  <effectiveTime>
                     <xsl:for-each select="gebruiksperiodeduur">
                        <comp>
                           <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                           <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                              <xsl:call-template name="makeTSValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">low</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                           <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                              <xsl:call-template name="makePQValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">width</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                           <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                              <xsl:call-template name="makeTSValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">high</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </comp>
                     </xsl:for-each>
                     <comp>
                        <xsl:attribute name="operator"/>
                        <phase>
                           <center/>
                           <low/>
                           <width value="" unit="d"/>
                        </phase>
                        <period value="" unit=""/>
                     </comp>
                     <comp operator="">
                        <comp operator="">
                           <comp>
                              <xsl:attribute name="operator"/>
                              <phase>
                                 <center/>
                                 <low/>
                                 <width value="" unit="d"/>
                              </phase>
                              <period value="" unit=""/>
                           </comp>
                        </comp>
                        <comp>
                           <xsl:attribute name="operator"/>
                           <phase>
                              <center/>
                              <low/>
                              <width value="" unit="d"/>
                           </phase>
                           <period value="" unit=""/>
                        </comp>
                     </comp>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                  <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                     <effectiveTime>
                        <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                        <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">low</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                        <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                           <xsl:call-template name="makePQValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">width</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                        <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">high</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                  <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                  <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                     <xsl:call-template name="makePIVL_TSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime value=""/>
               </xsl:when>
            </xsl:choose>
            <xsl:choose>
               <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                  <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                  <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                     <xsl:call-template name="makeIVL_PQValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                  <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                  <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                     <xsl:call-template name="makeIVL_PQValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                  <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                  <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                     <xsl:call-template name="makeIVL_PQValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
            </xsl:choose>
            <hl7nl:doseCheckQuantity xmlns:hl7nl="urn:hl7-nl:v3">
               <numerator xsi:type="">
                  <xsl:attribute name="value"/>
                  <xsl:attribute name="unit"/>
                  <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                  <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                  <low>
                     <xsl:attribute name="value"/>
                     <xsl:attribute name="unit"/>
                     <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                     <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                  </low>
                  <high>
                     <xsl:attribute name="value"/>
                     <xsl:attribute name="unit"/>
                     <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                     <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                  </high>
               </numerator>
               <denominator xsi:type="PQ" value="" unit=""/>
            </hl7nl:doseCheckQuantity>
            <!-- Item(s) :: toedieningsweg-->
            <xsl:for-each select="toedieningsweg">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">routeCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <consumable typeCode="CSM">
               <!-- Template :: Medication Information -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.116_20131221000000"/>
            </consumable>
            <xsl:choose>
               <xsl:when test="auteur_is_zorgverlener">
                  <xsl:for-each select="auteur_is_zorgverlener">
                     <author>
                        <xsl:attribute name="typeCode">AUT</xsl:attribute>
                        <xsl:attribute name="contextControlCode">OP</xsl:attribute>
                        <functionCode/>
                        <time/>
                        <assignedAuthor classCode="ASSIGNED">
                           <id/>
                           <code/>
                           <addr/>
                           <telecom/>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <assignedPerson>
                                    <!-- Template :: CDA Person -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
                                 </assignedPerson>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <assignedAuthoringDevice>
                                    <!-- Template :: CDA Device -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9012_20131221000000"/>
                                 </assignedAuthoringDevice>
                              </xsl:when>
                           </xsl:choose>
                           <representedOrganization>
                              <!-- Template :: MP CDA Organization -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000"/>
                           </representedOrganization>
                        </assignedAuthor>
                     </author>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="auteur_is_patient">
                  <xsl:for-each select="auteur_is_patient">
                     <participant typeCode="AUT">
                        <time/>
                        <participantRole classCode="PAT"/>
                     </participant>
                  </xsl:for-each>
               </xsl:when>
            </xsl:choose>
            <xsl:choose>
               <xsl:when test="informant_is_zorgverlener">
                  <xsl:for-each select="informant_is_zorgverlener">
                     <informant typeCode="INF" contextControlCode="OP">
                        <assignedEntity>
                           <!-- Template :: CDA AssignedEntity -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9013_20151127000000"/>
                        </assignedEntity>
                     </informant>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="informant_is_patient">
                  <xsl:for-each select="informant_is_patient">
                     <participant typeCode="INF">
                        <time/>
                        <participantRole classCode="PAT"/>
                     </participant>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="persoon">
                  <xsl:for-each select="persoon">
                     <informant typeCode="INF" contextControlCode="OP">
                        <relatedEntity>
                           <!-- Template :: CDA RelatedEntity -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9014_20131221000000"/>
                        </relatedEntity>
                     </informant>
                  </xsl:for-each>
               </xsl:when>
            </xsl:choose>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Substance Administration Component -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.120_20131221000000"/>
            </entryRelationship>
            <xsl:for-each select="aanvullende_instructie">
               <entryRelationship typeCode="SPRT" inversionInd="true">
                  <!-- Template :: Medication Administration Instruction CDA -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.113_20131221000000"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="gerelateerd_voorschrift">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: Related Prescription -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.115_20131221000000"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="REFR">
               <!-- Template :: Bijwerking medicatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9059_20151125000000"/>
            </entryRelationship>
            <entryRelationship typeCode="REFR">
               <!-- Template :: Behandeleffect medicatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9060_20151125000000"/>
            </entryRelationship>
            <xsl:for-each select="reden_afwijkend_gebruik">
               <entryRelationship typeCode="RSON">
                  <!-- Template :: Reason for change in Medication -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9036_20150501000000"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="preconditie">
               <precondition typeCode="PRCN">
                  <!-- Template :: Observation Event Criterion CDA -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.114_20131221000000"/>
               </precondition>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- substanceAdministration -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20130521000000">
      <medicationAdministrationEvent xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN" negationInd="">
         <text/>
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <effectiveTime>
                  <xsl:for-each select="gebruiksperiodeduur">
                     <comp>
                        <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                        <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">low</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                        <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                           <xsl:call-template name="makePQValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">width</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                        <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">high</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </comp>
                  </xsl:for-each>
                  <comp>
                     <xsl:attribute name="operator"/>
                     <phase>
                        <center/>
                        <low/>
                        <width value="" unit="d"/>
                     </phase>
                     <period value="" unit=""/>
                  </comp>
                  <comp operator="">
                     <comp operator="">
                        <comp>
                           <xsl:attribute name="operator"/>
                           <phase>
                              <center/>
                              <low/>
                              <width value="" unit="d"/>
                           </phase>
                           <period value="" unit=""/>
                        </comp>
                     </comp>
                     <comp>
                        <xsl:attribute name="operator"/>
                        <phase>
                           <center/>
                           <low/>
                           <width value="" unit="d"/>
                        </phase>
                        <period value="" unit=""/>
                     </comp>
                  </comp>
               </effectiveTime>
            </xsl:when>
            <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
               <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                  <effectiveTime>
                     <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                     <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">low</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                     <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                        <xsl:call-template name="makePQValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">width</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                     <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">high</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </effectiveTime>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
               <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
               <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                  <xsl:call-template name="makePIVL_TSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <effectiveTime value=""/>
            </xsl:when>
         </xsl:choose>
         <routeCode displayName=""/>
         <doseQuantity/>
         <doseCheckQuantity/>
         <author typeCode="AUT">
            <time/>
            <xsl:choose>
               <xsl:when test="'TODO-X'">
                  <patient classCode="PAT"/>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <assignedPerson>
                     <id root="2.16.528.1.1007.3.1"/>
                     <code/>
                  </assignedPerson>
               </xsl:when>
            </xsl:choose>
         </author>
         <consumable typeCode="CSM">
            <prescribedMedication typeCode="THER">
               <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                  <MedicationKind classCode="MMAT" determinerCode="KIND">
                     <xsl:choose>
                        <xsl:when test="product_code | product_code | product_code">
                           <!-- Item(s) :: product_code product_code product_code-->
                           <xsl:for-each select="product_code | product_code | product_code">
                              <xsl:call-template name="makeCEValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">code</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="'TODO-X'">
                           <code nullFlavor="OTH">
                              <originalText/>
                           </code>
                        </xsl:when>
                     </xsl:choose>
                     <!-- Item(s) :: omschrijving omschrijving-->
                     <xsl:for-each select="omschrijving | omschrijving">
                        <xsl:call-template name="makeEDValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">desc</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                        <activeIngredient classCode="ACTI">
                           <!-- Template :: Active Ingredient -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                        </activeIngredient>
                     </xsl:for-each>
                     <xsl:for-each select="sterkte">
                        <otherIngredient classCode="INGR">
                           <!-- Template :: Other Ingredient -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                        </otherIngredient>
                     </xsl:for-each>
                  </MedicationKind>
               </xsl:for-each>
            </prescribedMedication>
         </consumable>
         <informant typeCode="INF">
            <xsl:choose>
               <xsl:when test="'TODO-X'">
                  <patient classCode="PAT"/>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <assignedPerson>
                     <id root="2.16.528.1.1007.3.1"/>
                     <code/>
                  </assignedPerson>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <responsibleParty>
                     <xsl:attribute name="classCode">AGNT</xsl:attribute>
                     <id/>
                     <code/>
                     <addr/>
                     <telecom/>
                     <statusCode/>
                     <effectiveTime/>
                     <xsl:choose>
                        <xsl:when test="'TODO-X'">
                           <agentOrganization classCode="ORG" determinerCode="INSTANCE">
                              <id/>
                              <code/>
                              <name/>
                              <addr/>
                           </agentOrganization>
                        </xsl:when>
                        <xsl:when test="geslacht | geboortedatum | geboortedatum">
                           <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                              <agentPerson>
                                 <!-- Template :: PersonNL -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                              </agentPerson>
                           </xsl:for-each>
                        </xsl:when>
                     </xsl:choose>
                     <xsl:choose>
                        <xsl:when test="'TODO-X'">
                           <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                              <id/>
                              <code/>
                              <name/>
                              <addr/>
                           </representedOrganization>
                        </xsl:when>
                        <xsl:when test="geslacht | geboortedatum | geboortedatum">
                           <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                              <representedPerson>
                                 <!-- Template :: PersonNL -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                              </representedPerson>
                           </xsl:for-each>
                        </xsl:when>
                     </xsl:choose>
                  </responsibleParty>
               </xsl:when>
            </xsl:choose>
         </informant>
         <subject typeCode="SBJ">
            <xsl:for-each select="geboortegegevens | persoonsidentificatie">
               <patient>
                  <!-- Template :: PatientNL -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
               </patient>
            </xsl:for-each>
         </subject>
         <inFulfillmentOf typeCode="FLFS">
            <prescription classCode="SBADM" moodCode="RQO">
               <id/>
            </prescription>
         </inFulfillmentOf>
         <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
            <support2 typeCode="SPRT">
               <!-- Template :: Medication Administration Instruction -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
            </support2>
         </xsl:for-each>
         <precondition typeCode="PRCN">
            <!-- Template :: Observation Event Criterion -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
         </precondition>
      </medicationAdministrationEvent>
   </xsl:template>

   <!-- Medication Kind -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.106_20130521000000">
      <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
         <MedicationKind xmlns="urn:hl7-org:v3" classCode="MMAT" determinerCode="KIND">
            <xsl:choose>
               <xsl:when test="product_code | product_code | product_code">
                  <!-- Item(s) :: product_code product_code product_code-->
                  <xsl:for-each select="product_code | product_code | product_code">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">code</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <code nullFlavor="OTH">
                     <originalText/>
                  </code>
               </xsl:when>
            </xsl:choose>
            <!-- Item(s) :: omschrijving omschrijving-->
            <xsl:for-each select="omschrijving | omschrijving">
               <xsl:call-template name="makeEDValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">desc</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
               <activeIngredient classCode="ACTI">
                  <!-- Template :: Active Ingredient -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
               </activeIngredient>
            </xsl:for-each>
            <xsl:for-each select="sterkte">
               <otherIngredient classCode="INGR">
                  <!-- Template :: Other Ingredient -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
               </otherIngredient>
            </xsl:for-each>
         </MedicationKind>
      </xsl:for-each>
   </xsl:template>

   <!-- Active Ingredient -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000">
      <!-- Item(s) :: sterkte sterkte sterkte-->
      <xsl:for-each select="sterkte | sterkte | sterkte">
         <xsl:call-template name="makeRTO_QTY_QTYValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">quantity</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <activeIngredientMaterialKind xmlns="urn:hl7-org:v3">
         <!-- Template :: Ingredient Material Kind -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.108_20130521000000"/>
      </activeIngredientMaterialKind>
   </xsl:template>

   <!-- Ingredient Material Kind -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.108_20130521000000">
      <xsl:attribute name="classCode">MAT</xsl:attribute>
      <xsl:attribute name="determinerCode">KIND</xsl:attribute>
   </xsl:template>

   <!-- Other Ingredient -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000">
      <!-- Item(s) :: sterkte-->
      <xsl:for-each select="sterkte">
         <xsl:call-template name="makeRTO_QTY_QTYValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">quantity</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <ingredientMaterialKind xmlns="urn:hl7-org:v3">
         <!-- Template :: Ingredient Material Kind -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.108_20130521000000"/>
      </ingredientMaterialKind>
   </xsl:template>

   <!-- Potentiëlecontraindicatiesquery -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.11_20130819000000">
      <REPC_IN000023NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <assignedEntity>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007.3.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1003.1.3.5.4.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.6.1"/>
                  </xsl:if>
                  <code/>
                  <telecom/>
                  <assignedPrincipalChoiceList>
                     <assignedPerson>
                        <name/>
                     </assignedPerson>
                  </assignedPrincipalChoiceList>
                  <Organization>
                     <xsl:choose>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007.3.3"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007" extension="4"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11.25"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                        </xsl:when>
                     </xsl:choose>
                     <id/>
                     <code/>
                     <telecom/>
                     <name/>
                     <addr>
                        <city/>
                     </addr>
                  </Organization>
                  <templateId/>
               </assignedEntity>
            </overseer>
            <queryByParameter>
               <queryId/>
               <statusCode/>
               <modifyCode/>
               <responseModalityCode/>
               <responsePriorityCode/>
               <initialQuantity/>
               <initialQuantityCode/>
               <executionAndDeliveryTime/>
               <patientID>
                  <value root="2.16.840.1.113883.2.4.6.3"/>
               </patientID>
               <effectiveTimeInterval>
                  <value/>
               </effectiveTimeInterval>
               <authorOrPerformerRole>
                  <value/>
               </authorOrPerformerRole>
            </queryByParameter>
         </ControlActProcess>
      </REPC_IN000023NL>
   </xsl:template>

   <!-- Medication Dispense Event -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000">
      <xsl:attribute name="classCode">SPLY</xsl:attribute>
      <xsl:attribute name="moodCode">EVN</xsl:attribute>
      <!-- Item(s) :: identificatie identificatie-->
      <xsl:for-each select="identificatie | identificatie">
         <xsl:call-template name="makeIIValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">id</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: status status-->
      <xsl:for-each select="status | status">
         <xsl:call-template name="makeCSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">statusCode</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: datum-->
      <xsl:for-each select="datum">
         <xsl:call-template name="makeIVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: hoeveelheid-->
      <xsl:for-each select="hoeveelheid">
         <xsl:call-template name="makePQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">quantity</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: verbruiksperiode-->
      <xsl:for-each select="verbruiksperiode">
         <xsl:call-template name="makeIVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">expectedUseTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <performer xmlns="urn:hl7-org:v3" typeCode="PRF">
         <!-- Template :: Performer -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9004_20130521000000"/>
      </performer>
      <product xmlns="urn:hl7-org:v3" typeCode="PRD">
         <xsl:for-each select="geneesmiddel">
            <dispensedMedication classCode="DST">
               <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                  <MedicationKind classCode="MMAT" determinerCode="KIND">
                     <xsl:choose>
                        <xsl:when test="product_code | product_code | product_code">
                           <!-- Item(s) :: product_code product_code product_code-->
                           <xsl:for-each select="product_code | product_code | product_code">
                              <xsl:call-template name="makeCEValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">code</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="'TODO-X'">
                           <code nullFlavor="OTH">
                              <originalText/>
                           </code>
                        </xsl:when>
                     </xsl:choose>
                     <!-- Item(s) :: omschrijving omschrijving-->
                     <xsl:for-each select="omschrijving | omschrijving">
                        <xsl:call-template name="makeEDValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">desc</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                        <activeIngredient classCode="ACTI">
                           <!-- Template :: Active Ingredient -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                        </activeIngredient>
                     </xsl:for-each>
                     <xsl:for-each select="sterkte">
                        <otherIngredient classCode="INGR">
                           <!-- Template :: Other Ingredient -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                        </otherIngredient>
                     </xsl:for-each>
                  </MedicationKind>
               </xsl:for-each>
               <directTargetOf typeCode="DIR">
                  <xsl:for-each select="gerelateerd_voorschrift | gerelateerd_voorschrift">
                     <prescription classCode="SBADM" moodCode="RQO">
                        <!-- Item(s) :: identificatie identificatie-->
                        <xsl:for-each select="identificatie | identificatie">
                           <xsl:call-template name="makeIIValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">id</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <statusCode/>
                        <subject typeCode="SBJ">
                           <xsl:for-each select="patientgegevens | patientgegevens | persoonsidentificatie | geboortegegevens | persoonsidentificatie | geboortegegevens">
                              <Patient>
                                 <!-- Template :: PatientNL in verstrekking -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000"/>
                              </Patient>
                           </xsl:for-each>
                        </subject>
                        <author typeCode="AUT">
                           <time/>
                           <xsl:for-each select="voorschrijver | voorschrijver">
                              <AssignedPerson>
                                 <!-- Item(s) :: identificatie identificatie-->
                                 <xsl:for-each select="identificatie | identificatie">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </AssignedPerson>
                           </xsl:for-each>
                        </author>
                     </prescription>
                  </xsl:for-each>
               </directTargetOf>
               <therapeuticAgentOf typeCode="TPA">
                  <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
                     <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
                        <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
                        <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">text</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <statusCode code="active"/>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <xsl:for-each select="gebruiksperiodeduur">
                                    <comp>
                                       <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                       <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                          <xsl:call-template name="makeTSValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">low</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                       <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                       <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">width</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                       <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                       <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                          <xsl:call-template name="makeTSValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">high</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </comp>
                                 </xsl:for-each>
                                 <comp>
                                    <xsl:attribute name="operator"/>
                                    <phase>
                                       <center/>
                                       <low/>
                                       <width value="" unit="d"/>
                                    </phase>
                                    <period value="" unit=""/>
                                 </comp>
                                 <comp operator="">
                                    <comp operator="">
                                       <comp>
                                          <xsl:attribute name="operator"/>
                                          <phase>
                                             <center/>
                                             <low/>
                                             <width value="" unit="d"/>
                                          </phase>
                                          <period value="" unit=""/>
                                       </comp>
                                    </comp>
                                    <comp>
                                       <xsl:attribute name="operator"/>
                                       <phase>
                                          <center/>
                                          <low/>
                                          <width value="" unit="d"/>
                                       </phase>
                                       <period value="" unit=""/>
                                    </comp>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                              <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                 <effectiveTime>
                                    <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                    <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                       <xsl:call-template name="makeTSValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">low</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                    <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                       <xsl:call-template name="makePQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">width</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                    <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                       <xsl:call-template name="makeTSValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">high</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                              <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                              <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                 <xsl:call-template name="makePIVL_TSValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime value=""/>
                           </xsl:when>
                        </xsl:choose>
                        <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
                        <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                           <xsl:call-template name="makeCEValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">routeCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:choose>
                           <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                              <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                              <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                              <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                              <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                              <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                              <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <doseCheckQuantity>
                           <numerator xsi:type="">
                              <xsl:attribute name="value"/>
                              <xsl:attribute name="unit"/>
                              <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                              <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                              <low>
                                 <xsl:attribute name="value"/>
                                 <xsl:attribute name="unit"/>
                                 <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                 <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                              </low>
                              <high>
                                 <xsl:attribute name="value"/>
                                 <xsl:attribute name="unit"/>
                                 <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                 <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                              </high>
                           </numerator>
                           <denominator xsi:type="PQ" value="" unit=""/>
                        </doseCheckQuantity>
                        <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
                        <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                           <xsl:call-template name="makeRTO_QTY_QTYValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                           <support2 typeCode="SPRT">
                              <!-- Template :: Medication Administration Instruction -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                           </support2>
                        </xsl:for-each>
                        <xsl:for-each select="preconditie | preconditie | preconditie">
                           <precondition typeCode="PRCN">
                              <!-- Template :: Observation Event Criterion -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                           </precondition>
                        </xsl:for-each>
                     </medicationAdministrationRequest>
                  </xsl:for-each>
               </therapeuticAgentOf>
            </dispensedMedication>
         </xsl:for-each>
      </product>
      <xsl:for-each select="verantwoordelijke | verantwoordelijke">
         <responsibleParty xmlns="urn:hl7-org:v3" typeCode="RESP">
            <xsl:for-each select="zorgverlener | zorgverlener">
               <assignedCareProvider classCode="ASSIGNED">
                  <!-- Item(s) :: identificatie identificatie-->
                  <xsl:for-each select="identificatie | identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: zorgverlenerrol zorgverlenerrol-->
                  <xsl:for-each select="zorgverlenerrol | zorgverlenerrol">
                     <xsl:call-template name="makeCVValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">code</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="zorginstelling | zorginstelling">
                     <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <!-- Item(s) :: identificatie identificatie-->
                        <xsl:for-each select="identificatie | identificatie">
                           <xsl:call-template name="makeIIValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">id</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: naam naam-->
                        <xsl:for-each select="naam | naam">
                           <xsl:call-template name="makeONValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">name</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: vestigingsplaats vestigingsplaats-->
                        <xsl:for-each select="vestigingsplaats | vestigingsplaats">
                           <xsl:call-template name="makeADValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">addr</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </representedOrganization>
                  </xsl:for-each>
               </assignedCareProvider>
            </xsl:for-each>
         </responsibleParty>
      </xsl:for-each>
   </xsl:template>

   <!-- Medical Condition -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.111_20130525000000">
      <Condition xmlns="urn:hl7-org:v3" classCode="COND" determinerCode="EVN" negationInd="false">
         <id root="" extension=""/>
         <code/>
         <text/>
         <statusCode/>
         <effectiveTime/>
         <uncertaintyCode code="N" codeSystem="2.16.840.1.113883.5.1053"/>
         <value>
            <translation/>
         </value>
         <subject typeCode="SBJ">
            <xsl:for-each select="geboortegegevens | persoonsidentificatie">
               <patient>
                  <!-- Template :: PatientNL -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
               </patient>
            </xsl:for-each>
         </subject>
         <causativeAgent>
            <!-- Template :: Causative Agent -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.112_20130525000000"/>
         </causativeAgent>
         <author typeCode="AUT">
            <time/>
            <xsl:if test="'TODO-X'">
               <assignedPerson>
                  <id/>
                  <id root="2.16.528.1.1007.3.1"/>
                  <id root="2.16.840.1.113883.2.4.6.1"/>
                  <code/>
                  <addr/>
                  <telecom/>
                  <effectiveTime/>
                  <certificateText/>
                  <assignee>
                     <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                        <name/>
                     </assigneePerson>
                  </assignee>
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id root="2.16.528.1.1007.3.3"/>
                     <code/>
                     <name/>
                     <addr/>
                  </representedOrganization>
               </assignedPerson>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <patient classCode="PAT"/>
            </xsl:if>
         </author>
         <informant typeCode="INF">
            <xsl:if test="'TODO-X'">
               <assignedPerson>
                  <id/>
                  <id root="2.16.528.1.1007.3.1"/>
                  <id root="2.16.840.1.113883.2.4.6.1"/>
                  <code/>
                  <addr/>
                  <telecom/>
                  <effectiveTime/>
                  <certificateText/>
                  <assignee>
                     <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                        <name/>
                     </assigneePerson>
                  </assignee>
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id root="2.16.528.1.1007.3.3"/>
                     <code/>
                     <name/>
                     <addr/>
                  </representedOrganization>
               </assignedPerson>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <patient classCode="PAT"/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <responsibleParty>
                  <xsl:attribute name="classCode">AGNT</xsl:attribute>
                  <id/>
                  <code/>
                  <addr/>
                  <telecom/>
                  <statusCode/>
                  <effectiveTime/>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <agentOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id/>
                           <code/>
                           <name/>
                           <addr/>
                        </agentOrganization>
                     </xsl:when>
                     <xsl:when test="geslacht | geboortedatum | geboortedatum">
                        <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                           <agentPerson>
                              <!-- Template :: PersonNL -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                           </agentPerson>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id/>
                           <code/>
                           <name/>
                           <addr/>
                        </representedOrganization>
                     </xsl:when>
                     <xsl:when test="geslacht | geboortedatum | geboortedatum">
                        <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                           <representedPerson>
                              <!-- Template :: PersonNL -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                           </representedPerson>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
               </responsibleParty>
            </xsl:if>
         </informant>
         <subjectOf2 typeCode="SUBJ">
            <annotation classCode="ACT" moodCode="EVN">
               <text/>
               <statusCode code="completed"/>
               <author typeCode="AUT">
                  <time/>
                  <assignedPerson>
                     <id/>
                  </assignedPerson>
               </author>
            </annotation>
         </subjectOf2>
         <predecessor typeCode="SUCC">
            <conditionReference classCode="COND" moodCode="EVN">
               <id root="" extension=""/>
            </conditionReference>
         </predecessor>
      </Condition>
   </xsl:template>

   <!-- Causative Agent -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.112_20130525000000">
      <xsl:attribute name="typeCode">CAGNT</xsl:attribute>
      <administerableMaterial xmlns="urn:hl7-org:v3" classCode="ADMM">
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <administerableMedicationKind classCode="MMAT" determinerCode="KIND">
                  <xsl:choose>
                     <xsl:when test="product_code | product_code | product_code">
                        <!-- Item(s) :: product_code product_code product_code-->
                        <xsl:for-each select="product_code | product_code | product_code">
                           <xsl:call-template name="makeCEValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">code</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <code nullFlavor="OTH">
                           <originalText/>
                        </code>
                     </xsl:when>
                  </xsl:choose>
               </administerableMedicationKind>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <administerableMaterialKind classCode="MAT" determinerCode="KIND">
                  <code/>
               </administerableMaterialKind>
            </xsl:when>
         </xsl:choose>
      </administerableMaterial>
   </xsl:template>

   <!-- Medication Administration Instruction CDA -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.113_20131221000000">
      <act xmlns="urn:hl7-org:v3" classCode="INFRM" moodCode="RQO">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.113"/>
         <xsl:choose>
            <xsl:when test="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
               <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
               <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                  <xsl:call-template name="makeCEValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">code</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <code>
                  <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
                  <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                     <xsl:call-template name="makeSTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">originalText</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </code>
            </xsl:when>
         </xsl:choose>
      </act>
   </xsl:template>

   <!-- Observation Event Criterion CDA -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.114_20131221000000">
      <criterion xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN.CRT">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.114"/>
         <xsl:choose>
            <xsl:when test="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
               <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
               <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                  <xsl:call-template name="makeCEValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">code</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <code>
                  <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
                  <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                     <xsl:call-template name="makeSTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">originalText</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </code>
            </xsl:when>
         </xsl:choose>
      </criterion>
   </xsl:template>

   <!-- Related Prescription -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.115_20131221000000">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="INT">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.115"/>
         <id/>
         <consumable>
            <manufacturedProduct>
               <manufacturedMaterial nullFlavor="NA"/>
            </manufacturedProduct>
         </consumable>
         <author>
            <xsl:attribute name="typeCode">AUT</xsl:attribute>
            <xsl:attribute name="contextControlCode">OP</xsl:attribute>
            <functionCode/>
            <time/>
            <assignedAuthor classCode="ASSIGNED">
               <id/>
               <code/>
               <addr/>
               <telecom/>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <assignedPerson>
                        <!-- Template :: CDA Person -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
                     </assignedPerson>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <assignedAuthoringDevice>
                        <!-- Template :: CDA Device -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9012_20131221000000"/>
                     </assignedAuthoringDevice>
                  </xsl:when>
               </xsl:choose>
               <representedOrganization>
                  <!-- Template :: MP CDA Organization -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000"/>
               </representedOrganization>
            </assignedAuthor>
         </author>
      </substanceAdministration>
   </xsl:template>

   <!-- Medication Information -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.116_20131221000000">
      <manufacturedProduct xmlns="urn:hl7-org:v3" classCode="MANU">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.116"/>
         <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
            <xsl:choose>
               <xsl:when test="product_code | product_code | product_code">
                  <!-- Item(s) :: product_code product_code product_code-->
                  <xsl:for-each select="product_code | product_code | product_code">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">code</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <code nullFlavor="OTH">
                     <originalText/>
                  </code>
               </xsl:when>
            </xsl:choose>
            <name/>
            <pharm:desc xmlns:pharm="urn:ihe:pharm:medication"/>
            <pharm:formCode xmlns:pharm="urn:ihe:pharm:medication"/>
            <lotNumberText/>
         </manufacturedMaterial>
      </manufacturedProduct>
   </xsl:template>

   <!-- Active Ingredient CDA -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.117_20131221000000">
      <pharm:activeIngredient xmlns:pharm="urn:ihe:pharm:medication" classCode="ACTI">
         <pharm:quantity/>
         <pharm:activeIngredientMaterialKind>
            <!-- Template :: Ingredient Material Kind CDA -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.118_20130521000000"/>
         </pharm:activeIngredientMaterialKind>
      </pharm:activeIngredient>
   </xsl:template>

   <!-- Ingredient Material Kind CDA -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.118_20130521000000">
      <pharm:activeIngredientMaterialKind xmlns:pharm="urn:ihe:pharm:medication" classCode="MAT" determinerCode="KIND">
         <pharm:code>
            <pharm:translation/>
         </pharm:code>
      </pharm:activeIngredientMaterialKind>
   </xsl:template>

   <!-- Other Ingredient CDA -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.119_20130521000000">
      <pharm:otherIngredient xmlns:pharm="urn:ihe:pharm:medication" classCode="INGR">
         <pharm:quantity/>
         <pharm:ingredientMaterialKind>
            <!-- Template :: Ingredient Material Kind CDA -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.118_20130521000000"/>
         </pharm:ingredientMaterialKind>
      </pharm:otherIngredient>
   </xsl:template>

   <!-- Potentiëlecontraindicatieslijst -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.12_20130819000000">
      <REPC_IN000024NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <acknowledgement typeCode="">
            <acknowledgementDetail typeCode="">
               <code/>
               <text/>
               <location/>
            </acknowledgementDetail>
            <targetMessage>
               <id/>
            </targetMessage>
         </acknowledgement>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="" determinerCode="">
               <id/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <AssignedDevice>
                     <!-- Template :: Assigned Device [universal] -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                  </AssignedDevice>
               </participant>
            </authorOrPerformer>
            <subject typeCode="SUBJ" contextConductionInd="false">
               <Condition classCode="COND" determinerCode="EVN" negationInd="false">
                  <id root="" extension=""/>
                  <code/>
                  <text/>
                  <statusCode/>
                  <effectiveTime/>
                  <uncertaintyCode code="N" codeSystem="2.16.840.1.113883.5.1053"/>
                  <value>
                     <translation/>
                  </value>
                  <subject typeCode="SBJ">
                     <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                        <patient>
                           <!-- Template :: PatientNL -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                        </patient>
                     </xsl:for-each>
                  </subject>
                  <causativeAgent>
                     <!-- Template :: Causative Agent -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.112_20130525000000"/>
                  </causativeAgent>
                  <author typeCode="AUT">
                     <time/>
                     <xsl:if test="'TODO-X'">
                        <assignedPerson>
                           <id/>
                           <id root="2.16.528.1.1007.3.1"/>
                           <id root="2.16.840.1.113883.2.4.6.1"/>
                           <code/>
                           <addr/>
                           <telecom/>
                           <effectiveTime/>
                           <certificateText/>
                           <assignee>
                              <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                                 <name/>
                              </assigneePerson>
                           </assignee>
                           <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                              <id root="2.16.528.1.1007.3.3"/>
                              <code/>
                              <name/>
                              <addr/>
                           </representedOrganization>
                        </assignedPerson>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <patient classCode="PAT"/>
                     </xsl:if>
                  </author>
                  <informant typeCode="INF">
                     <xsl:if test="'TODO-X'">
                        <assignedPerson>
                           <id/>
                           <id root="2.16.528.1.1007.3.1"/>
                           <id root="2.16.840.1.113883.2.4.6.1"/>
                           <code/>
                           <addr/>
                           <telecom/>
                           <effectiveTime/>
                           <certificateText/>
                           <assignee>
                              <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                                 <name/>
                              </assigneePerson>
                           </assignee>
                           <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                              <id root="2.16.528.1.1007.3.3"/>
                              <code/>
                              <name/>
                              <addr/>
                           </representedOrganization>
                        </assignedPerson>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <patient classCode="PAT"/>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <responsibleParty>
                           <xsl:attribute name="classCode">AGNT</xsl:attribute>
                           <id/>
                           <code/>
                           <addr/>
                           <telecom/>
                           <statusCode/>
                           <effectiveTime/>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <agentOrganization classCode="ORG" determinerCode="INSTANCE">
                                    <id/>
                                    <code/>
                                    <name/>
                                    <addr/>
                                 </agentOrganization>
                              </xsl:when>
                              <xsl:when test="geslacht | geboortedatum | geboortedatum">
                                 <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                                    <agentPerson>
                                       <!-- Template :: PersonNL -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                                    </agentPerson>
                                 </xsl:for-each>
                              </xsl:when>
                           </xsl:choose>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                                    <id/>
                                    <code/>
                                    <name/>
                                    <addr/>
                                 </representedOrganization>
                              </xsl:when>
                              <xsl:when test="geslacht | geboortedatum | geboortedatum">
                                 <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                                    <representedPerson>
                                       <!-- Template :: PersonNL -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                                    </representedPerson>
                                 </xsl:for-each>
                              </xsl:when>
                           </xsl:choose>
                        </responsibleParty>
                     </xsl:if>
                  </informant>
                  <subjectOf2 typeCode="SUBJ">
                     <annotation classCode="ACT" moodCode="EVN">
                        <text/>
                        <statusCode code="completed"/>
                        <author typeCode="AUT">
                           <time/>
                           <assignedPerson>
                              <id/>
                           </assignedPerson>
                        </author>
                     </annotation>
                  </subjectOf2>
                  <predecessor typeCode="SUCC">
                     <conditionReference classCode="COND" moodCode="EVN">
                        <id root="" extension=""/>
                     </conditionReference>
                  </predecessor>
               </Condition>
            </subject>
            <reasonOf typeCode="RSON" contextConductionInd="">
               <justifiedDetectedIssue>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifiedDetectedIssue>
            </reasonOf>
            <queryAck>
               <queryId/>
               <statusCode/>
               <queryResponseCode/>
               <resultTotalQuantity/>
               <resultCurrentQuantity/>
               <resultRemainingQuantity/>
            </queryAck>
         </ControlActProcess>
      </REPC_IN000024NL>
   </xsl:template>

   <!-- Substance Administration Component -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.120_20131221000000">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.120"/>
         <id/>
         <text/>
         <statusCode/>
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <effectiveTime>
                  <xsl:for-each select="gebruiksperiodeduur">
                     <comp>
                        <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                        <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">low</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                        <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                           <xsl:call-template name="makePQValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">width</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                        <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">high</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </comp>
                  </xsl:for-each>
                  <comp>
                     <xsl:attribute name="operator"/>
                     <phase>
                        <center/>
                        <low/>
                        <width value="" unit="d"/>
                     </phase>
                     <period value="" unit=""/>
                  </comp>
                  <comp operator="">
                     <comp operator="">
                        <comp>
                           <xsl:attribute name="operator"/>
                           <phase>
                              <center/>
                              <low/>
                              <width value="" unit="d"/>
                           </phase>
                           <period value="" unit=""/>
                        </comp>
                     </comp>
                     <comp>
                        <xsl:attribute name="operator"/>
                        <phase>
                           <center/>
                           <low/>
                           <width value="" unit="d"/>
                        </phase>
                        <period value="" unit=""/>
                     </comp>
                  </comp>
               </effectiveTime>
            </xsl:when>
            <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
               <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                  <effectiveTime>
                     <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                     <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">low</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                     <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                        <xsl:call-template name="makePQValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">width</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                     <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">high</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </effectiveTime>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
               <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
               <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                  <xsl:call-template name="makePIVL_TSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <effectiveTime value=""/>
            </xsl:when>
         </xsl:choose>
         <routeCode displayName=""/>
         <doseQuantity/>
         <doseCheckQuantity/>
         <consumable typeCode="CSM">
            <manufacturedProduct classCode="MANU">
               <manufacturedMaterial nullFlavor="NA"/>
            </manufacturedProduct>
         </consumable>
      </substanceAdministration>
   </xsl:template>

   <!-- Refusal Reason Medication -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.121_20140523000000">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.121"/>
         <id/>
         <code>
            <originalText/>
         </code>
         <statusCode code="completed"/>
      </observation>
   </xsl:template>

   <!-- Ingredient quantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.122_20130521000000">
      <numerator xmlns="urn:hl7-org:v3" xsi:type="PQ" value="" unit=""/>
      <denominator xmlns="urn:hl7-org:v3" xsi:type="PQ" value="" unit=""/>
   </xsl:template>

   <!-- Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.13_20131123000000">
      <PORX_IN040010NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <AssignedPerson>
                  <!-- Template :: Assigned Person [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
               </AssignedPerson>
            </overseer>
            <reason typeCode="RSON" contextConductionInd="">
               <justifyingDetectedIssueEvent>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifyingDetectedIssueEvent>
            </reason>
            <subject>
               <MedicationStatementList classCode="LIST" moodCode="EVN">
                  <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
                  <subject typeCode="SBJ">
                     <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                        <patient>
                           <!-- Template :: PatientNL -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                        </patient>
                     </xsl:for-each>
                  </subject>
                  <xsl:for-each select="gebruik_indicator | medicatiegebruik">
                     <component typeCode="COMP">
                        <!-- Template :: substanceAdministration -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20131221000000"/>
                     </component>
                  </xsl:for-each>
               </MedicationStatementList>
            </subject>
         </ControlActProcess>
      </PORX_IN040010NL>
   </xsl:template>

   <!-- Medicatiegebruiklijstquery -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.14_20131221000000">
      <PORX_IN040050NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <assignedEntity>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007.3.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1003.1.3.5.4.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.6.1"/>
                  </xsl:if>
                  <code/>
                  <telecom/>
                  <assignedPrincipalChoiceList>
                     <assignedPerson>
                        <name/>
                     </assignedPerson>
                  </assignedPrincipalChoiceList>
                  <Organization>
                     <xsl:choose>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007.3.3"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007" extension="4"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11.25"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                        </xsl:when>
                     </xsl:choose>
                     <id/>
                     <code/>
                     <telecom/>
                     <name/>
                     <addr>
                        <city/>
                     </addr>
                  </Organization>
                  <templateId/>
               </assignedEntity>
            </overseer>
            <queryByParameter>
               <queryId/>
               <statusCode/>
               <responseModalityCode/>
               <responsePriorityCode/>
               <executionAndDeliveryTime/>
               <patientId>
                  <value root="2.16.840.1.113883.2.4.6.3"/>
               </patientId>
               <effectiveTimeInterval>
                  <value/>
                  <low/>
                  <high/>
               </effectiveTimeInterval>
            </queryByParameter>
         </ControlActProcess>
      </PORX_IN040050NL>
   </xsl:template>

   <!-- Medicatiegebruiklijstqueryresponse -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.15_20131221000000">
      <PORX_IN040052NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <acknowledgement typeCode="">
            <acknowledgementDetail typeCode="">
               <code/>
               <text/>
               <location/>
            </acknowledgementDetail>
            <targetMessage>
               <id/>
            </targetMessage>
         </acknowledgement>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="" determinerCode="">
               <id/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <subject typeCode="SUBJ" contextConductionInd="false">
               <MedicationStatementList classCode="LIST" moodCode="EVN">
                  <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
                  <subject typeCode="SBJ">
                     <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                        <patient>
                           <!-- Template :: PatientNL -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                        </patient>
                     </xsl:for-each>
                  </subject>
                  <xsl:for-each select="gebruik_indicator | medicatiegebruik">
                     <component typeCode="COMP">
                        <!-- Template :: substanceAdministration -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20131221000000"/>
                     </component>
                  </xsl:for-each>
               </MedicationStatementList>
            </subject>
            <reasonOf typeCode="RSON" contextConductionInd="">
               <justifiedDetectedIssue>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifiedDetectedIssue>
            </reasonOf>
            <queryAck>
               <queryId/>
               <statusCode/>
               <queryResponseCode/>
               <resultTotalQuantity/>
               <resultCurrentQuantity/>
               <resultRemainingQuantity/>
            </queryAck>
         </ControlActProcess>
      </PORX_IN040052NL>
   </xsl:template>

   <!-- Medicatieverstrekking -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.2_20130521000000">
      <PORX_IN924000NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <AssignedPerson>
                  <!-- Template :: Assigned Person [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
               </AssignedPerson>
            </overseer>
            <reason typeCode="RSON" contextConductionInd="">
               <justifyingDetectedIssueEvent>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifyingDetectedIssueEvent>
            </reason>
            <subject>
               <medicationDispenseEvent>
                  <xsl:attribute name="classCode">SPLY</xsl:attribute>
                  <xsl:attribute name="moodCode">EVN</xsl:attribute>
                  <!-- Item(s) :: identificatie identificatie-->
                  <xsl:for-each select="identificatie | identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: status status-->
                  <xsl:for-each select="status | status">
                     <xsl:call-template name="makeCSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">statusCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: datum-->
                  <xsl:for-each select="datum">
                     <xsl:call-template name="makeIVL_TSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: hoeveelheid-->
                  <xsl:for-each select="hoeveelheid">
                     <xsl:call-template name="makePQValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">quantity</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: verbruiksperiode-->
                  <xsl:for-each select="verbruiksperiode">
                     <xsl:call-template name="makeIVL_TSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">expectedUseTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <performer typeCode="PRF">
                     <!-- Template :: Performer -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9004_20130521000000"/>
                  </performer>
                  <product typeCode="PRD">
                     <xsl:for-each select="geneesmiddel">
                        <dispensedMedication classCode="DST">
                           <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                              <MedicationKind classCode="MMAT" determinerCode="KIND">
                                 <xsl:choose>
                                    <xsl:when test="product_code | product_code | product_code">
                                       <!-- Item(s) :: product_code product_code product_code-->
                                       <xsl:for-each select="product_code | product_code | product_code">
                                          <xsl:call-template name="makeCEValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">code</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="'TODO-X'">
                                       <code nullFlavor="OTH">
                                          <originalText/>
                                       </code>
                                    </xsl:when>
                                 </xsl:choose>
                                 <!-- Item(s) :: omschrijving omschrijving-->
                                 <xsl:for-each select="omschrijving | omschrijving">
                                    <xsl:call-template name="makeEDValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">desc</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                                    <activeIngredient classCode="ACTI">
                                       <!-- Template :: Active Ingredient -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                                    </activeIngredient>
                                 </xsl:for-each>
                                 <xsl:for-each select="sterkte">
                                    <otherIngredient classCode="INGR">
                                       <!-- Template :: Other Ingredient -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                                    </otherIngredient>
                                 </xsl:for-each>
                              </MedicationKind>
                           </xsl:for-each>
                           <directTargetOf typeCode="DIR">
                              <xsl:for-each select="gerelateerd_voorschrift | gerelateerd_voorschrift">
                                 <prescription classCode="SBADM" moodCode="RQO">
                                    <!-- Item(s) :: identificatie identificatie-->
                                    <xsl:for-each select="identificatie | identificatie">
                                       <xsl:call-template name="makeIIValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <statusCode/>
                                    <subject typeCode="SBJ">
                                       <xsl:for-each select="patientgegevens | patientgegevens | persoonsidentificatie | geboortegegevens | persoonsidentificatie | geboortegegevens">
                                          <Patient>
                                             <!-- Template :: PatientNL in verstrekking -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000"/>
                                          </Patient>
                                       </xsl:for-each>
                                    </subject>
                                    <author typeCode="AUT">
                                       <time/>
                                       <xsl:for-each select="voorschrijver | voorschrijver">
                                          <AssignedPerson>
                                             <!-- Item(s) :: identificatie identificatie-->
                                             <xsl:for-each select="identificatie | identificatie">
                                                <xsl:call-template name="makeIIValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">id</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                          </AssignedPerson>
                                       </xsl:for-each>
                                    </author>
                                 </prescription>
                              </xsl:for-each>
                           </directTargetOf>
                           <therapeuticAgentOf typeCode="TPA">
                              <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
                                 <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
                                    <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
                                    <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                                       <xsl:call-template name="makeSTValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">text</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <statusCode code="active"/>
                                    <xsl:choose>
                                       <xsl:when test="'TODO-X'">
                                          <effectiveTime>
                                             <xsl:for-each select="gebruiksperiodeduur">
                                                <comp>
                                                   <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                                   <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                      <xsl:call-template name="makeTSValue">
                                                         <xsl:with-param name="xsiType" select="''"/>
                                                         <xsl:with-param name="elemName">low</xsl:with-param>
                                                      </xsl:call-template>
                                                   </xsl:for-each>
                                                   <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                                   <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                      <xsl:call-template name="makePQValue">
                                                         <xsl:with-param name="xsiType" select="''"/>
                                                         <xsl:with-param name="elemName">width</xsl:with-param>
                                                      </xsl:call-template>
                                                   </xsl:for-each>
                                                   <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                                   <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                      <xsl:call-template name="makeTSValue">
                                                         <xsl:with-param name="xsiType" select="''"/>
                                                         <xsl:with-param name="elemName">high</xsl:with-param>
                                                      </xsl:call-template>
                                                   </xsl:for-each>
                                                </comp>
                                             </xsl:for-each>
                                             <comp>
                                                <xsl:attribute name="operator"/>
                                                <phase>
                                                   <center/>
                                                   <low/>
                                                   <width value="" unit="d"/>
                                                </phase>
                                                <period value="" unit=""/>
                                             </comp>
                                             <comp operator="">
                                                <comp operator="">
                                                   <comp>
                                                      <xsl:attribute name="operator"/>
                                                      <phase>
                                                         <center/>
                                                         <low/>
                                                         <width value="" unit="d"/>
                                                      </phase>
                                                      <period value="" unit=""/>
                                                   </comp>
                                                </comp>
                                                <comp>
                                                   <xsl:attribute name="operator"/>
                                                   <phase>
                                                      <center/>
                                                      <low/>
                                                      <width value="" unit="d"/>
                                                   </phase>
                                                   <period value="" unit=""/>
                                                </comp>
                                             </comp>
                                          </effectiveTime>
                                       </xsl:when>
                                       <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                          <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                             <effectiveTime>
                                                <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                                <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">low</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                                <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">width</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                                <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">high</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </effectiveTime>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                          <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                                          <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                             <xsl:call-template name="makePIVL_TSValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="'TODO-X'">
                                          <effectiveTime value=""/>
                                       </xsl:when>
                                    </xsl:choose>
                                    <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
                                    <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                                       <xsl:call-template name="makeCEValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">routeCode</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <xsl:choose>
                                       <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                          <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                             <xsl:call-template name="makeIVL_PQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                          <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                             <xsl:call-template name="makeIVL_PQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                       <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                          <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                             <xsl:call-template name="makeIVL_PQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:when>
                                    </xsl:choose>
                                    <doseCheckQuantity>
                                       <numerator xsi:type="">
                                          <xsl:attribute name="value"/>
                                          <xsl:attribute name="unit"/>
                                          <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                          <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                          <low>
                                             <xsl:attribute name="value"/>
                                             <xsl:attribute name="unit"/>
                                             <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                             <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                          </low>
                                          <high>
                                             <xsl:attribute name="value"/>
                                             <xsl:attribute name="unit"/>
                                             <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                             <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                          </high>
                                       </numerator>
                                       <denominator xsi:type="PQ" value="" unit=""/>
                                    </doseCheckQuantity>
                                    <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
                                    <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                                       <xsl:call-template name="makeRTO_QTY_QTYValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                                       <support2 typeCode="SPRT">
                                          <!-- Template :: Medication Administration Instruction -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                                       </support2>
                                    </xsl:for-each>
                                    <xsl:for-each select="preconditie | preconditie | preconditie">
                                       <precondition typeCode="PRCN">
                                          <!-- Template :: Observation Event Criterion -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                                       </precondition>
                                    </xsl:for-each>
                                 </medicationAdministrationRequest>
                              </xsl:for-each>
                           </therapeuticAgentOf>
                        </dispensedMedication>
                     </xsl:for-each>
                  </product>
                  <xsl:for-each select="verantwoordelijke | verantwoordelijke">
                     <responsibleParty typeCode="RESP">
                        <xsl:for-each select="zorgverlener | zorgverlener">
                           <assignedCareProvider classCode="ASSIGNED">
                              <!-- Item(s) :: identificatie identificatie-->
                              <xsl:for-each select="identificatie | identificatie">
                                 <xsl:call-template name="makeIIValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">id</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <!-- Item(s) :: zorgverlenerrol zorgverlenerrol-->
                              <xsl:for-each select="zorgverlenerrol | zorgverlenerrol">
                                 <xsl:call-template name="makeCVValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">code</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <xsl:for-each select="zorginstelling | zorginstelling">
                                 <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                                    <!-- Item(s) :: identificatie identificatie-->
                                    <xsl:for-each select="identificatie | identificatie">
                                       <xsl:call-template name="makeIIValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <!-- Item(s) :: naam naam-->
                                    <xsl:for-each select="naam | naam">
                                       <xsl:call-template name="makeONValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">name</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                    <!-- Item(s) :: vestigingsplaats vestigingsplaats-->
                                    <xsl:for-each select="vestigingsplaats | vestigingsplaats">
                                       <xsl:call-template name="makeADValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">addr</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </representedOrganization>
                              </xsl:for-each>
                           </assignedCareProvider>
                        </xsl:for-each>
                     </responsibleParty>
                  </xsl:for-each>
               </medicationDispenseEvent>
            </subject>
         </ControlActProcess>
      </PORX_IN924000NL>
   </xsl:template>

   <!-- Voorschriftquery -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.3_20130521000000">
      <QURX_MT990001NL xmlns="urn:hl7-org:v3">
         <ControlActProcess>
            <queryByParameter>
               <administrationRequestEffectiveTimeInterval>
                  <value/>
               </administrationRequestEffectiveTimeInterval>
               <medicationCombinedOrderID>
                  <value/>
               </medicationCombinedOrderID>
               <patientID>
                  <value/>
               </patientID>
            </queryByParameter>
         </ControlActProcess>
      </QURX_MT990001NL>
   </xsl:template>

   <!-- Verstrekkingsquery -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.4_20130521000000">
      <QURX_IN990011NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <assignedEntity>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007.3.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1003.1.3.5.4.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.6.1"/>
                  </xsl:if>
                  <code/>
                  <telecom/>
                  <assignedPrincipalChoiceList>
                     <assignedPerson>
                        <name/>
                     </assignedPerson>
                  </assignedPrincipalChoiceList>
                  <Organization>
                     <xsl:choose>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007.3.3"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007" extension="4"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11.25"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                        </xsl:when>
                     </xsl:choose>
                     <id/>
                     <code/>
                     <telecom/>
                     <name/>
                     <addr>
                        <city/>
                     </addr>
                  </Organization>
                  <templateId/>
               </assignedEntity>
            </overseer>
            <queryByParameter>
               <queryId/>
               <statusCode/>
               <responseModalityCode/>
               <responsePriorityCode/>
               <executionAndDeliveryTime/>
               <administrationRequestEffectiveTimeInterval>
                  <value/>
               </administrationRequestEffectiveTimeInterval>
               <dispenseEventEffectiveTimeInterval>
                  <value>
                     <xsl:if test="'TODO-X'">
                        <low value=""/>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <high value=""/>
                     </xsl:if>
                  </value>
               </dispenseEventEffectiveTimeInterval>
               <mostRecentDispenseForEachRxIndicator>
                  <value/>
               </mostRecentDispenseForEachRxIndicator>
               <patientID>
                  <value root="2.16.840.1.113883.2.4.6.3"/>
               </patientID>
            </queryByParameter>
         </ControlActProcess>
      </QURX_IN990011NL>
   </xsl:template>

   <!-- Medicatievoorschriftenlijst -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.5_20130521000000">
      <PORX_IN932100NL xmlns="urn:hl7-org:v3">
         <ControlActProcess>
            <subject>
               <MedicationPrescriptionList classCode="LIST" moodCode="EVN">
                  <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
                  <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                     <subject typeCode="SBJ">
                        <!-- Template :: PatientNL -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                     </subject>
                  </xsl:for-each>
                  <xsl:for-each select="voorschrift">
                     <component typeCode="COMP">
                        <!-- Template :: Medication Combined Order -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.104_20130521000000"/>
                     </component>
                  </xsl:for-each>
               </MedicationPrescriptionList>
            </subject>
         </ControlActProcess>
      </PORX_IN932100NL>
   </xsl:template>

   <!-- Verstrekkingsquery response -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.6_20130521000000">
      <QURX_IN990013NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <acknowledgement typeCode="">
            <acknowledgementDetail typeCode="">
               <code/>
               <text/>
               <location/>
            </acknowledgementDetail>
            <targetMessage>
               <id/>
            </targetMessage>
         </acknowledgement>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="" determinerCode="">
               <id/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <AssignedDevice>
                     <!-- Template :: Assigned Device [universal] -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                  </AssignedDevice>
               </participant>
            </authorOrPerformer>
            <subject>
               <xsl:for-each select="datum | verantwoordelijke | identificatie | verantwoordelijke | verbruiksperiode | hoeveelheid | status | status | identificatie">
                  <MedicationDispenseEvent typeCode="COMP">
                     <!-- Template :: Medication Dispense Event -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000"/>
                  </MedicationDispenseEvent>
               </xsl:for-each>
            </subject>
            <reasonOf typeCode="RSON" contextConductionInd="">
               <justifiedDetectedIssue>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifiedDetectedIssue>
            </reasonOf>
            <queryAck>
               <queryId/>
               <statusCode/>
               <queryResponseCode/>
               <resultTotalQuantity/>
               <resultCurrentQuantity/>
               <resultRemainingQuantity/>
            </queryAck>
         </ControlActProcess>
      </QURX_IN990013NL>
   </xsl:template>

   <!-- Medicatievoorschriftenlijstquery -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.7_20130521000000">
      <QURX_IN990101NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <assignedEntity>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007.3.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1003.1.3.5.4.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.6.1"/>
                  </xsl:if>
                  <code/>
                  <telecom/>
                  <assignedPrincipalChoiceList>
                     <assignedPerson>
                        <name/>
                     </assignedPerson>
                  </assignedPrincipalChoiceList>
                  <Organization>
                     <xsl:choose>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007.3.3"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007" extension="4"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11.25"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                        </xsl:when>
                     </xsl:choose>
                     <id/>
                     <code/>
                     <telecom/>
                     <name/>
                     <addr>
                        <city/>
                     </addr>
                  </Organization>
                  <templateId/>
               </assignedEntity>
            </overseer>
            <queryByParameter>
               <queryId/>
               <statusCode/>
               <responseModalityCode/>
               <responsePriorityCode/>
               <executionAndDeliveryTime/>
               <administrationRequestEffectiveTimeInterval>
                  <value>
                     <xsl:if test="'TODO-X'">
                        <low/>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <high/>
                     </xsl:if>
                  </value>
               </administrationRequestEffectiveTimeInterval>
               <medicationCombinedOrderID>
                  <value/>
               </medicationCombinedOrderID>
               <patientID>
                  <value root="2.16.840.1.113883.2.4.6.3"/>
               </patientID>
            </queryByParameter>
         </ControlActProcess>
      </QURX_IN990101NL>
   </xsl:template>

   <!-- Medicatievoorschriftenlijstqueryresponse -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.8_20131221000000">
      <QURX_IN990103NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <acknowledgement typeCode="">
            <acknowledgementDetail typeCode="">
               <code/>
               <text/>
               <location/>
            </acknowledgementDetail>
            <targetMessage>
               <id/>
            </targetMessage>
         </acknowledgement>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="" determinerCode="">
               <id/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <AssignedDevice>
                     <!-- Template :: Assigned Device [universal] -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                  </AssignedDevice>
               </participant>
            </authorOrPerformer>
            <subject typeCode="SUBJ" contextConductionInd="false">
               <MedicationPrescriptionList classCode="LIST" moodCode="EVN">
                  <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
                  <subject typeCode="SBJ">
                     <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                        <Patient>
                           <!-- Template :: PatientNL -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                        </Patient>
                     </xsl:for-each>
                  </subject>
                  <xsl:for-each select="voorschrift">
                     <component typeCode="COMP">
                        <!-- Template :: Medication Combined Order -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.104_20130521000000"/>
                     </component>
                  </xsl:for-each>
               </MedicationPrescriptionList>
            </subject>
            <reasonOf typeCode="RSON" contextConductionInd="">
               <justifiedDetectedIssue>
                  <!-- Template :: DetectedIssueEvent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
               </justifiedDetectedIssue>
            </reasonOf>
            <queryAck>
               <queryId/>
               <statusCode/>
               <queryResponseCode/>
               <resultTotalQuantity/>
               <resultCurrentQuantity/>
               <resultRemainingQuantity/>
            </queryAck>
         </ControlActProcess>
      </QURX_IN990103NL>
   </xsl:template>

   <!-- PatientNL -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000">
      <!-- Item(s) :: persoonsidentificatie-->
      <xsl:for-each select="persoonsidentificatie">
         <xsl:call-template name="makeII.NL.BSNValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">id</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <telecom xmlns="urn:hl7-org:v3"/>
      <statusCode xmlns="urn:hl7-org:v3" code="active"/>
      <effectiveTime xmlns="urn:hl7-org:v3"/>
      <confidentialityCode xmlns="urn:hl7-org:v3"/>
      <veryImportantPersonCode xmlns="urn:hl7-org:v3"/>
      <xsl:for-each select="geslacht | geboortedatum | geboortedatum | geboortegegevens">
         <Person xmlns="urn:hl7-org:v3" classCode="PSN" determinerCode="INSTANCE">
            <!-- Template :: PersonNL -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
         </Person>
      </xsl:for-each>
      <Organization xmlns="urn:hl7-org:v3">
         <id/>
      </Organization>
   </xsl:template>

   <!-- AdresOfficieel -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.801_20130521000000">
      <addr xmlns="urn:hl7-org:v3">
         <streetName/>
         <houseNumber/>
         <additionalLocator/>
         <postalCode/>
         <city/>
         <county/>
         <useablePeriod>
            <!-- Template ::  -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.808_20130521000000"/>
         </useablePeriod>
      </addr>
   </xsl:template>

   <!-- AdresVestigingVertrekNederland -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.802_20130521000000">
      <addr xmlns="urn:hl7-org:v3">
         <country code="6030" codeSystem="2.16.840.1.113883.2.4.4.16.34"/>
         <useablePeriod>
            <low/>
            <high/>
            <!-- Template ::  -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.803_20130521000000"/>
         </useablePeriod>
      </addr>
   </xsl:template>

   <!-- Periode-M-Start-O-Eind-O -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.803_20130521000000"/>

   <!-- AdresZoalsBekendBijInstelling -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.804_20130521000000">
      <!-- Item(s) :: adresgegevens soort_adres-->
      <xsl:for-each select="soort_adres">
         <xsl:call-template name="makeADValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">addr</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- PersonNL -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000">
      <!-- Item(s) :: geslacht-->
      <xsl:for-each select="geslacht">
         <xsl:call-template name="makeCVValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: geboortedatum geboortedatum-->
      <xsl:for-each select="geboortedatum | geboortedatum">
         <xsl:call-template name="makeTSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">birthTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <deceasedInd xmlns="urn:hl7-org:v3"/>
      <deceasedTime xmlns="urn:hl7-org:v3"/>
      <multipleBirthInd xmlns="urn:hl7-org:v3"/>
      <multipleBirthOrderNumber xmlns="urn:hl7-org:v3"/>
      <maritalStatusCode xmlns="urn:hl7-org:v3"/>
      <educationLevelCode xmlns="urn:hl7-org:v3"/>
      <asEmployee xmlns="urn:hl7-org:v3">
         <code/>
      </asEmployee>
      <birthPlace xmlns="urn:hl7-org:v3">
         <addr>
            <county/>
            <country/>
         </addr>
      </birthPlace>
      <playedPatientOfOtherProvider xmlns="urn:hl7-org:v3" classCode="PAT">
         <subjectOf classCode="SBJ">
            <patientCareProvision classCode="PCPR" moodCode="EVN">
               <code code="GENRL" codeSystem="2.16.840.1.113883.5.4"/>
               <responsibleParty typeCode="RESP">
                  <healthCareProvider classCode="PROV">
                     <id/>
                     <healthCareChoice>
                        <healthCareProviderPerson classCode="PSN" determinerCode="INSTANCE">
                           <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                              <name use="{naamgebruik/(@code, @value)[1]}">
                                 <xsl:if test="initialen | roepnaam | voornamen | initialen | voornamen | initialen | voornamen | roepnaam | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen">
                                    <!-- Item(s) :: initialen roepnaam voornamen initialen voornamen initialen voornamen roepnaam initialen voornamen initialen voornamen initialen voornamen initialen voornamen initialen voornamen-->
                                    <xsl:for-each select="initialen | roepnaam | voornamen | initialen | voornamen | initialen | voornamen | roepnaam | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen">
                                       <xsl:call-template name="makeENXPValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">given</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels">
                                    <!-- Item(s) :: voorvoegsels voorvoegsels_partner voorvoegsels voorvoegsels voorvoegsels voorvoegsels_partner voorvoegsels voorvoegsels voorvoegsels voorvoegsels-->
                                    <xsl:for-each select="voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels">
                                       <xsl:call-template name="makeENXPValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">prefix</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam">
                                    <!-- Item(s) :: achternaam achternaam_partner achternaam achternaam achternaam achternaam_partner achternaam achternaam achternaam achternaam-->
                                    <xsl:for-each select="achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam">
                                       <xsl:call-template name="makeENXPValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">family</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="'TODO-X'">
                                    <suffix qualifier=""/>
                                 </xsl:if>
                                 <xsl:if test="'TODO-X'">
                                    <delimiter/>
                                 </xsl:if>
                                 <validTime/>
                              </name>
                           </xsl:for-each>
                        </healthCareProviderPerson>
                     </healthCareChoice>
                  </healthCareProvider>
               </responsibleParty>
            </patientCareProvision>
         </subjectOf>
      </playedPatientOfOtherProvider>
   </xsl:template>

   <!-- NaamOfficieel -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.806_20130521000000">
      <!-- Item(s) :: naamgegevens naamgegevens naamgegevens achternaam soort_naam-->
      <xsl:for-each select="soort_naam">
         <xsl:call-template name="makePNValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">name</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- NaamZoalsBekendBijInstelling -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.807_20130521000000">
      <name xmlns="urn:hl7-org:v3" use="L">
         <xsl:if test="'TODO-X'">
            <given/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <prefix/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <family/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <delimiter/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <suffix/>
         </xsl:if>
         <validTime>
            <!-- Template ::  -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.808_20130521000000"/>
         </validTime>
      </name>
   </xsl:template>

   <!-- Periode-O-Start-O-Eind-O -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.808_20130521000000">
      <low xmlns="urn:hl7-org:v3"/>
      <high xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- AssignedPartyNL -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.809_20130521000000">
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <representedOrganization xmlns="urn:hl7-org:v3" classCode="ORG" determinerCode="INSTANCE">
         <id root="2.16.528.1.1007.3.3"/>
         <code/>
         <name/>
         <addr/>
      </representedOrganization>
   </xsl:template>

   <!-- AssignedPerson -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.810_20130521000000">
      <id xmlns="urn:hl7-org:v3"/>
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007.3.1"/>
      <id xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.6.1"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <effectiveTime xmlns="urn:hl7-org:v3"/>
      <certificateText xmlns="urn:hl7-org:v3"/>
      <assignee xmlns="urn:hl7-org:v3">
         <assigneePerson classCode="PSN" determinerCode="INSTANCE">
            <name/>
         </assigneePerson>
      </assignee>
      <representedOrganization xmlns="urn:hl7-org:v3" classCode="ORG" determinerCode="INSTANCE">
         <id root="2.16.528.1.1007.3.3"/>
         <code/>
         <name/>
         <addr/>
      </representedOrganization>
   </xsl:template>

   <!-- AssignedPersonIdentified -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.811_20130521000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.528.1.1007.3.1"/>
      <code xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- PatientNLIdentified -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.812_20130521000000">
      <id xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.6.3"/>
   </xsl:template>

   <!-- ResponsiblePartyNL -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.813_20130525000000">
      <xsl:attribute name="classCode">AGNT</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <statusCode xmlns="urn:hl7-org:v3"/>
      <effectiveTime xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- PersonNL_verstrlst -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.814_20130521000000">
      <!-- Item(s) :: geslacht geslacht-->
      <xsl:for-each select="geslacht | geslacht">
         <xsl:call-template name="makeCVValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: geboortedatum-->
      <xsl:for-each select="geboortedatum">
         <xsl:call-template name="makeTSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">birthTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- NaamZoalsBekendBijInstelling_verstrlst -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.815_20130521000000">
      <!-- Item(s) :: naamgegevens naamgegevens achternaam soort_naam-->
      <xsl:for-each select="soort_naam">
         <xsl:call-template name="makePNValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">name</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- PatientNL in verstrekking -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000">
      <!-- Item(s) :: persoonsidentificatie persoonsidentificatie-->
      <xsl:for-each select="persoonsidentificatie | persoonsidentificatie">
         <xsl:call-template name="makeII.NL.BSNValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">id</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <statusCode xmlns="urn:hl7-org:v3" code="active"/>
      <xsl:for-each select="geboortegegevens | geboortegegevens | geslacht | geboortedatum | geslacht">
         <Person xmlns="urn:hl7-org:v3" classCode="PSN" determinerCode="INSTANCE">
            <!-- Template ::  -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.814_20130521000000"/>
         </Person>
      </xsl:for-each>
   </xsl:template>

   <!-- Medicatieverstrekkingenlijstquery -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9_20130521000000">
      <QURX_IN990111NL xmlns="urn:hl7-org:v3">
         <id/>
         <creationTime/>
         <versionCode code="NICTIZEd2005-Okt"/>
         <interactionId root="2.16.840.1.113883.1.6"/>
         <profileId root="2.16.840.1.113883.2.4.3.11.1" extension="810"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode/>
         <attentionLine>
            <keyWordText/>
            <value xsi:type="ANY"/>
         </attentionLine>
         <receiver typeCode="RCV">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </receiver>
         <respondTo typeCode="RSP">
            <telecom/>
            <entityRsp classCode="DEV" determinerCode="INSTANCE">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
            </entityRsp>
         </respondTo>
         <sender typeCode="SND">
            <telecom/>
            <device determinerCode="INSTANCE" classCode="DEV">
               <id extension="" root="2.16.840.1.113883.2.4.6.6"/>
               <name/>
               <telecom/>
               <softwareName/>
               <agencyFor classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id/>
                     <name/>
                     <telecom/>
                     <NotificationParty>
                        <xsl:attribute name="classCode">CON</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <contactParty>
                           <xsl:choose>
                              <xsl:when test="'TODO-X'">
                                 <Organization>
                                    <!-- Template :: Organization [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.517_20120901000000"/>
                                 </Organization>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <Person>
                                    <!-- Template :: Person [contact] -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.518_20120901000000"/>
                                 </Person>
                              </xsl:when>
                           </xsl:choose>
                        </contactParty>
                     </NotificationParty>
                  </representedOrganization>
               </agencyFor>
            </device>
         </sender>
         <ControlActProcess moodCode="EVN">
            <code/>
            <effectiveTime/>
            <authorOrPerformer typeCode="">
               <participant>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <AssignedDevice>
                           <!-- Template :: Assigned Device [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                        </AssignedDevice>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <AssignedPerson>
                           <!-- Template :: Assigned Person [universal] -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                        </AssignedPerson>
                     </xsl:when>
                  </xsl:choose>
               </participant>
            </authorOrPerformer>
            <overseer typeCode="RESP">
               <assignedEntity>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1007.3.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.528.1.1003.1.3.5.4.1"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X-Include in choice'">
                     <id root="2.16.840.1.113883.2.4.6.1"/>
                  </xsl:if>
                  <code/>
                  <telecom/>
                  <assignedPrincipalChoiceList>
                     <assignedPerson>
                        <name/>
                     </assignedPerson>
                  </assignedPrincipalChoiceList>
                  <Organization>
                     <xsl:choose>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007.3.3"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.528.1.1007" extension="4"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11.25"/>
                        </xsl:when>
                        <xsl:when test="'TODO-X-Include in choice'">
                           <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                        </xsl:when>
                     </xsl:choose>
                     <id/>
                     <code/>
                     <telecom/>
                     <name/>
                     <addr>
                        <city/>
                     </addr>
                  </Organization>
                  <templateId/>
               </assignedEntity>
            </overseer>
            <queryByParameter>
               <queryId/>
               <statusCode/>
               <responseModalityCode/>
               <responsePriorityCode/>
               <executionAndDeliveryTime/>
               <administrationRequestEffectiveTimeInterval>
                  <value/>
               </administrationRequestEffectiveTimeInterval>
               <dispenseEventEffectiveTimeInterval>
                  <value>
                     <xsl:if test="'TODO-X'">
                        <low value=""/>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <high value=""/>
                     </xsl:if>
                  </value>
               </dispenseEventEffectiveTimeInterval>
               <mostRecentDispenseForEachRxIndicator>
                  <value/>
               </mostRecentDispenseForEachRxIndicator>
               <patientID>
                  <value root="2.16.840.1.113883.2.4.6.3"/>
               </patientID>
            </queryByParameter>
         </ControlActProcess>
      </QURX_IN990111NL>
   </xsl:template>

   <!-- NHG Tabel 25 B-codes -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9000_20160626175534"/>

   <!-- NHG Tabel 25 B-codes -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9000_20130521000000">
      <!-- Item(s) :: code code-->
      <xsl:for-each select="code | code">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- Observation Event Criterion -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000">
      <observationEventCriterion xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN.CRT">
         <xsl:choose>
            <xsl:when test="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
               <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
               <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                  <xsl:call-template name="makeCEValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">code</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <code>
                  <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
                  <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                     <xsl:call-template name="makeSTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">originalText</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </code>
            </xsl:when>
         </xsl:choose>
      </observationEventCriterion>
   </xsl:template>

   <!-- Medication Storage Instruction -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9002_20130521000000">
      <medicationStorageInstruction xmlns="urn:hl7-org:v3" classCode="INFRM" moodCode="RQO">
         <xsl:choose>
            <xsl:when test="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
               <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
               <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                  <xsl:call-template name="makeCEValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">code</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <code>
                  <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
                  <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                     <xsl:call-template name="makeSTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">originalText</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </code>
            </xsl:when>
         </xsl:choose>
      </medicationStorageInstruction>
   </xsl:template>

   <!-- Destination -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9003_20130521000000">
      <serviceDeliveryLocation xmlns="urn:hl7-org:v3" classCode="SDLOC">
         <code/>
         <addr/>
      </serviceDeliveryLocation>
   </xsl:template>

   <!-- Performer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9004_20130521000000">
      <assignedPerson xmlns="urn:hl7-org:v3" classCode="ASSIGNED">
         <id nullFlavor="MSK"/>
      </assignedPerson>
   </xsl:template>

   <!-- Medication Code -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9005_20130521000000"/>

   <!-- Usable Period and Frequency -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9006_20130521000000"/>

   <!-- CDA Author (Body) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9007_20151125000000">
      <xsl:attribute name="typeCode">AUT</xsl:attribute>
      <xsl:attribute name="contextControlCode">OP</xsl:attribute>
      <functionCode xmlns="urn:hl7-org:v3"/>
      <time xmlns="urn:hl7-org:v3"/>
      <assignedAuthor xmlns="urn:hl7-org:v3" classCode="ASSIGNED">
         <id/>
         <code/>
         <addr/>
         <telecom/>
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <assignedPerson>
                  <!-- Template :: CDA Person -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
               </assignedPerson>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <assignedAuthoringDevice>
                  <!-- Template :: CDA Device -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9012_20131221000000"/>
               </assignedAuthoringDevice>
            </xsl:when>
         </xsl:choose>
         <representedOrganization>
            <!-- Template :: MP CDA Organization -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000"/>
         </representedOrganization>
      </assignedAuthor>
   </xsl:template>

   <!-- CDA Author (Body) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9007_20131221000000">
      <xsl:attribute name="typeCode">AUT</xsl:attribute>
      <xsl:attribute name="contextControlCode">OP</xsl:attribute>
      <functionCode xmlns="urn:hl7-org:v3"/>
      <time xmlns="urn:hl7-org:v3"/>
      <assignedAuthor xmlns="urn:hl7-org:v3" classCode="ASSIGNED">
         <id/>
         <code/>
         <addr/>
         <telecom/>
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <assignedPerson>
                  <!-- Template :: CDA Person -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
               </assignedPerson>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <assignedAuthoringDevice>
                  <!-- Template :: CDA Device -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9012_20131221000000"/>
               </assignedAuthoringDevice>
            </xsl:when>
         </xsl:choose>
         <representedOrganization>
            <!-- Template :: MP CDA Organization -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000"/>
         </representedOrganization>
      </assignedAuthor>
   </xsl:template>

   <!-- CDA Informant (Body) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9008_20131221000000">
      <xsl:attribute name="typeCode">INF</xsl:attribute>
      <xsl:attribute name="contextControlCode">OP</xsl:attribute>
   </xsl:template>

   <!-- CDA Person -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000">
      <xsl:attribute name="classCode">PSN</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
   </xsl:template>

   <!-- MP CDA Organization -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000">
      <xsl:attribute name="classCode">ORG</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <name xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <standardIndustryClassCode xmlns="urn:hl7-org:v3"/>
      <asOrganizationPartOf xmlns="urn:hl7-org:v3" classCode="PART">
         <id/>
         <code/>
         <statusCode/>
         <effectiveTime/>
      </asOrganizationPartOf>
   </xsl:template>

   <!-- CDA Device -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9012_20131221000000">
      <xsl:attribute name="classCode">DEV</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <code xmlns="urn:hl7-org:v3"/>
      <manufacturerModelName xmlns="urn:hl7-org:v3"/>
      <softwareName xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- CDA AssignedEntity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9013_20151127000000">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <assignedPerson xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA Person -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
      </assignedPerson>
      <representedOrganization xmlns="urn:hl7-org:v3">
         <!-- Template :: MP CDA Organization -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000"/>
      </representedOrganization>
   </xsl:template>

   <!-- CDA AssignedEntity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9013_20131221000000">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <assignedPerson xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA Person -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
      </assignedPerson>
      <representedOrganization xmlns="urn:hl7-org:v3">
         <!-- Template :: MP CDA Organization -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9011_20131221000000"/>
      </representedOrganization>
   </xsl:template>

   <!-- CDA RelatedEntity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9014_20131221000000">
      <xsl:attribute name="classCode"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <telecom xmlns="urn:hl7-org:v3"/>
      <effectiveTime xmlns="urn:hl7-org:v3"/>
      <relatedPerson xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA Person -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9010_20131221000000"/>
      </relatedPerson>
   </xsl:template>

   <!-- CDA PlayingEntity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9015_20131221000000">
      <xsl:attribute name="classCode">ENT</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <code xmlns="urn:hl7-org:v3"/>
      <quantity xmlns="urn:hl7-org:v3"/>
      <name xmlns="urn:hl7-org:v3"/>
      <desc xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- Medication or Material Code Ext -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9016_20130521000000">
      <pharm:code xmlns:pharm="urn:ihe:pharm:medication">
         <pharm:translation/>
      </pharm:code>
   </xsl:template>

   <!-- Beoogde verstrekker -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9017_20130521000000">
      <assignedPerson xmlns="urn:hl7-org:v3" classCode="ASSIGNED">
         <id/>
         <representedOrganization classCode="ORG" determinerCode="INSTANCE">
            <id/>
            <name/>
            <addr/>
         </representedOrganization>
      </assignedPerson>
   </xsl:template>

   <!-- Material Code -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9018_20130521000000"/>

   <!-- Usable Period -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9019_20160701155004">
      <low xmlns="urn:hl7-org:v3"/>
      <width xmlns="urn:hl7-org:v3" value="" unit=""/>
      <high xmlns="urn:hl7-org:v3" value=""/>
   </xsl:template>

   <!-- Usable Period -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9019_20130521000000">
      <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
      <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
         <xsl:call-template name="makeTSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">low</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
      <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
         <xsl:call-template name="makePQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">width</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
      <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
         <xsl:call-template name="makeTSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">high</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- Frequency -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9020_20150305134139">
      <xsl:attribute name="operator"/>
      <phase xmlns="urn:hl7-org:v3">
         <center/>
         <low/>
         <width value="" unit="d"/>
      </phase>
      <period xmlns="urn:hl7-org:v3" value="" unit=""/>
   </xsl:template>

   <!-- Quantity unit and translation(s) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9021_20150305000000">
      <xsl:attribute name="unit"/>
      <translation xmlns="urn:hl7-org:v3" value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
   </xsl:template>

   <!-- Aanvullende gebruiksinstructie NHG Tabel 25 B-codes -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9022_20130521000000">
      <!-- Item(s) :: code code code code code-->
      <xsl:for-each select="code | code | code | code | code">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- ControlAct Query Response MP MedicatieVerstrekkingenLijst -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9025_20150318000000">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <AssignedDevice>
                  <!-- Template :: Assigned Device [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
               </AssignedDevice>
            </participant>
         </authorOrPerformer>
         <subject typeCode="SUBJ" contextConductionInd="false">
            <MedicationDispenseList classCode="LIST" moodCode="EVN">
               <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
               <subject typeCode="SBJ">
                  <xsl:for-each select="persoonsidentificatie | geboortegegevens | persoonsidentificatie | geboortegegevens | patientgegevens">
                     <Patient>
                        <!-- Template :: PatientNL in verstrekking -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000"/>
                     </Patient>
                  </xsl:for-each>
               </subject>
               <component typeCode="COMP">
                  <xsl:for-each select="datum | verantwoordelijke | identificatie | verantwoordelijke | verbruiksperiode | hoeveelheid | status | status | identificatie">
                     <medicationDispenseEvent>
                        <!-- Template :: Medication Dispense Event -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000"/>
                     </medicationDispenseEvent>
                  </xsl:for-each>
               </component>
            </MedicationDispenseList>
         </subject>
         <reasonOf typeCode="RSON" contextConductionInd="">
            <justifiedDetectedIssue>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifiedDetectedIssue>
         </reasonOf>
         <queryAck>
            <queryId/>
            <statusCode/>
            <queryResponseCode/>
            <resultTotalQuantity/>
            <resultCurrentQuantity/>
            <resultRemainingQuantity/>
         </queryAck>
      </ControlActProcess>
   </xsl:template>

   <!-- MedicationDispenseListResponse Payload -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9026_20150318000000">
      <MedicationDispenseList xmlns="urn:hl7-org:v3" classCode="LIST" moodCode="EVN">
         <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
         <subject typeCode="SBJ">
            <xsl:for-each select="persoonsidentificatie | geboortegegevens | persoonsidentificatie | geboortegegevens | patientgegevens">
               <Patient>
                  <!-- Template :: PatientNL in verstrekking -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000"/>
               </Patient>
            </xsl:for-each>
         </subject>
         <component typeCode="COMP">
            <xsl:for-each select="datum | verantwoordelijke | identificatie | verantwoordelijke | verbruiksperiode | hoeveelheid | status | status | identificatie">
               <medicationDispenseEvent>
                  <!-- Template :: Medication Dispense Event -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000"/>
               </medicationDispenseEvent>
            </xsl:for-each>
         </component>
      </MedicationDispenseList>
   </xsl:template>

   <!-- ControlAct Initiating MP Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9027_20150330115014">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <AssignedPerson>
               <!-- Template :: Assigned Person [universal] -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
            </AssignedPerson>
         </overseer>
         <reason typeCode="RSON" contextConductionInd="">
            <justifyingDetectedIssueEvent>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifyingDetectedIssueEvent>
         </reason>
         <subject>
            <MedicationStatementList classCode="LIST" moodCode="EVN">
               <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
               <subject typeCode="SBJ">
                  <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                     <patient>
                        <!-- Template :: PatientNL -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                     </patient>
                  </xsl:for-each>
               </subject>
               <xsl:for-each select="gebruik_indicator | medicatiegebruik">
                  <component typeCode="COMP">
                     <!-- Template :: substanceAdministration -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20131221000000"/>
                  </component>
               </xsl:for-each>
            </MedicationStatementList>
         </subject>
      </ControlActProcess>
   </xsl:template>

   <!-- ControlAct Query by Parameter MP Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9028_20150330154637">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <assignedEntity>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1007.3.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1003.1.3.5.4.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.6.1"/>
               </xsl:if>
               <code/>
               <telecom/>
               <assignedPrincipalChoiceList>
                  <assignedPerson>
                     <name/>
                  </assignedPerson>
               </assignedPrincipalChoiceList>
               <Organization>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007.3.3"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007" extension="4"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11.25"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                     </xsl:when>
                  </xsl:choose>
                  <id/>
                  <code/>
                  <telecom/>
                  <name/>
                  <addr>
                     <city/>
                  </addr>
               </Organization>
               <templateId/>
            </assignedEntity>
         </overseer>
         <queryByParameter>
            <queryId/>
            <statusCode/>
            <responseModalityCode/>
            <responsePriorityCode/>
            <executionAndDeliveryTime/>
            <patientId>
               <value root="2.16.840.1.113883.2.4.6.3"/>
            </patientId>
            <effectiveTimeInterval>
               <value/>
               <low/>
               <high/>
            </effectiveTimeInterval>
         </queryByParameter>
      </ControlActProcess>
   </xsl:template>

   <!-- QueryByParameter MP Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9029_20150330155321">
      <queryByParameter xmlns="urn:hl7-org:v3">
         <queryId/>
         <statusCode/>
         <responseModalityCode/>
         <responsePriorityCode/>
         <executionAndDeliveryTime/>
         <patientId>
            <value root="2.16.840.1.113883.2.4.6.3"/>
         </patientId>
         <effectiveTimeInterval>
            <value/>
            <low/>
            <high/>
         </effectiveTimeInterval>
      </queryByParameter>
   </xsl:template>

   <!-- ControlAct Query Response MP Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9030_20150330172536">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <subject typeCode="SUBJ" contextConductionInd="false">
            <MedicationStatementList classCode="LIST" moodCode="EVN">
               <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
               <subject typeCode="SBJ">
                  <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                     <patient>
                        <!-- Template :: PatientNL -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                     </patient>
                  </xsl:for-each>
               </subject>
               <xsl:for-each select="gebruik_indicator | medicatiegebruik">
                  <component typeCode="COMP">
                     <!-- Template :: substanceAdministration -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20131221000000"/>
                  </component>
               </xsl:for-each>
            </MedicationStatementList>
         </subject>
         <reasonOf typeCode="RSON" contextConductionInd="">
            <justifiedDetectedIssue>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifiedDetectedIssue>
         </reasonOf>
         <queryAck>
            <queryId/>
            <statusCode/>
            <queryResponseCode/>
            <resultTotalQuantity/>
            <resultCurrentQuantity/>
            <resultRemainingQuantity/>
         </queryAck>
      </ControlActProcess>
   </xsl:template>

   <!-- QueryParam PatientID -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9031_20150415154638">
      <patientID xmlns="urn:hl7-org:v3">
         <value root="2.16.840.1.113883.2.4.6.3"/>
      </patientID>
   </xsl:template>

   <!-- QueryByParameter MP MedicatieVerstrekkingen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9032_20150415154909">
      <queryByParameter xmlns="urn:hl7-org:v3">
         <queryId/>
         <statusCode/>
         <responseModalityCode/>
         <responsePriorityCode/>
         <executionAndDeliveryTime/>
         <administrationRequestEffectiveTimeInterval>
            <value/>
         </administrationRequestEffectiveTimeInterval>
         <dispenseEventEffectiveTimeInterval>
            <value>
               <xsl:if test="'TODO-X'">
                  <low value=""/>
               </xsl:if>
               <xsl:if test="'TODO-X'">
                  <high value=""/>
               </xsl:if>
            </value>
         </dispenseEventEffectiveTimeInterval>
         <mostRecentDispenseForEachRxIndicator>
            <value/>
         </mostRecentDispenseForEachRxIndicator>
         <patientID>
            <value root="2.16.840.1.113883.2.4.6.3"/>
         </patientID>
      </queryByParameter>
   </xsl:template>

   <!-- ControlAct Query by Parameter MP MedicatieVerstrekking -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9033_20150415160544">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <assignedEntity>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1007.3.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1003.1.3.5.4.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.6.1"/>
               </xsl:if>
               <code/>
               <telecom/>
               <assignedPrincipalChoiceList>
                  <assignedPerson>
                     <name/>
                  </assignedPerson>
               </assignedPrincipalChoiceList>
               <Organization>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007.3.3"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007" extension="4"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11.25"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                     </xsl:when>
                  </xsl:choose>
                  <id/>
                  <code/>
                  <telecom/>
                  <name/>
                  <addr>
                     <city/>
                  </addr>
               </Organization>
               <templateId/>
            </assignedEntity>
         </overseer>
         <queryByParameter>
            <queryId/>
            <statusCode/>
            <responseModalityCode/>
            <responsePriorityCode/>
            <executionAndDeliveryTime/>
            <administrationRequestEffectiveTimeInterval>
               <value/>
            </administrationRequestEffectiveTimeInterval>
            <dispenseEventEffectiveTimeInterval>
               <value>
                  <xsl:if test="'TODO-X'">
                     <low value=""/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <high value=""/>
                  </xsl:if>
               </value>
            </dispenseEventEffectiveTimeInterval>
            <mostRecentDispenseForEachRxIndicator>
               <value/>
            </mostRecentDispenseForEachRxIndicator>
            <patientID>
               <value root="2.16.840.1.113883.2.4.6.3"/>
            </patientID>
         </queryByParameter>
      </ControlActProcess>
   </xsl:template>

   <!-- QueryByParameter MP ContraIndicatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9034_20150415174047">
      <queryByParameter xmlns="urn:hl7-org:v3">
         <queryId/>
         <statusCode/>
         <modifyCode/>
         <responseModalityCode/>
         <responsePriorityCode/>
         <initialQuantity/>
         <initialQuantityCode/>
         <executionAndDeliveryTime/>
         <patientID>
            <value root="2.16.840.1.113883.2.4.6.3"/>
         </patientID>
         <effectiveTimeInterval>
            <value/>
         </effectiveTimeInterval>
         <authorOrPerformerRole>
            <value/>
         </authorOrPerformerRole>
      </queryByParameter>
   </xsl:template>

   <!-- ControlAct Query by Parameter MP Contraindicatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9035_20150415174826">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <assignedEntity>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1007.3.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1003.1.3.5.4.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.6.1"/>
               </xsl:if>
               <code/>
               <telecom/>
               <assignedPrincipalChoiceList>
                  <assignedPerson>
                     <name/>
                  </assignedPerson>
               </assignedPrincipalChoiceList>
               <Organization>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007.3.3"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007" extension="4"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11.25"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                     </xsl:when>
                  </xsl:choose>
                  <id/>
                  <code/>
                  <telecom/>
                  <name/>
                  <addr>
                     <city/>
                  </addr>
               </Organization>
               <templateId/>
            </assignedEntity>
         </overseer>
         <queryByParameter>
            <queryId/>
            <statusCode/>
            <modifyCode/>
            <responseModalityCode/>
            <responsePriorityCode/>
            <initialQuantity/>
            <initialQuantityCode/>
            <executionAndDeliveryTime/>
            <patientID>
               <value root="2.16.840.1.113883.2.4.6.3"/>
            </patientID>
            <effectiveTimeInterval>
               <value/>
            </effectiveTimeInterval>
            <authorOrPerformerRole>
               <value/>
            </authorOrPerformerRole>
         </queryByParameter>
      </ControlActProcess>
   </xsl:template>

   <!-- Reason for change in Medication -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9036_20150501000000">
      <xsl:for-each select="reden_afwijkend_gebruik">
         <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
            <code code="266710000" codeSystem="2.16.840.1.113883.6.96" displayName="Drugs not taken/completed"/>
            <!-- Item(s) :: code-->
            <xsl:for-each select="code">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">value</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </observation>
      </xsl:for-each>
   </xsl:template>

   <!-- ControlAct Query Response MP MedicatieVerstrekkingen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9037_20150611125632">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <AssignedDevice>
                  <!-- Template :: Assigned Device [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
               </AssignedDevice>
            </participant>
         </authorOrPerformer>
         <subject>
            <xsl:for-each select="datum | verantwoordelijke | identificatie | verantwoordelijke | verbruiksperiode | hoeveelheid | status | status | identificatie">
               <MedicationDispenseEvent typeCode="COMP">
                  <!-- Template :: Medication Dispense Event -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000"/>
               </MedicationDispenseEvent>
            </xsl:for-each>
         </subject>
         <reasonOf typeCode="RSON" contextConductionInd="">
            <justifiedDetectedIssue>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifiedDetectedIssue>
         </reasonOf>
         <queryAck>
            <queryId/>
            <statusCode/>
            <queryResponseCode/>
            <resultTotalQuantity/>
            <resultCurrentQuantity/>
            <resultRemainingQuantity/>
         </queryAck>
      </ControlActProcess>
   </xsl:template>

   <!-- MedicationDispenseResponse Payload -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9038_20150611130121">
      <subject xmlns="urn:hl7-org:v3">
         <xsl:for-each select="datum | verantwoordelijke | identificatie | verantwoordelijke | verbruiksperiode | hoeveelheid | status | status | identificatie">
            <MedicationDispenseEvent typeCode="COMP">
               <!-- Template :: Medication Dispense Event -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.110_20130521000000"/>
            </MedicationDispenseEvent>
         </xsl:for-each>
      </subject>
   </xsl:template>

   <!-- ControlAct Query Response MP Condities -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9039_20150707101859">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <AssignedDevice>
                  <!-- Template :: Assigned Device [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
               </AssignedDevice>
            </participant>
         </authorOrPerformer>
         <subject typeCode="SUBJ" contextConductionInd="false">
            <Condition classCode="COND" determinerCode="EVN" negationInd="false">
               <id root="" extension=""/>
               <code/>
               <text/>
               <statusCode/>
               <effectiveTime/>
               <uncertaintyCode code="N" codeSystem="2.16.840.1.113883.5.1053"/>
               <value>
                  <translation/>
               </value>
               <subject typeCode="SBJ">
                  <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                     <patient>
                        <!-- Template :: PatientNL -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                     </patient>
                  </xsl:for-each>
               </subject>
               <causativeAgent>
                  <!-- Template :: Causative Agent -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.112_20130525000000"/>
               </causativeAgent>
               <author typeCode="AUT">
                  <time/>
                  <xsl:if test="'TODO-X'">
                     <assignedPerson>
                        <id/>
                        <id root="2.16.528.1.1007.3.1"/>
                        <id root="2.16.840.1.113883.2.4.6.1"/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <effectiveTime/>
                        <certificateText/>
                        <assignee>
                           <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                              <name/>
                           </assigneePerson>
                        </assignee>
                        <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id root="2.16.528.1.1007.3.3"/>
                           <code/>
                           <name/>
                           <addr/>
                        </representedOrganization>
                     </assignedPerson>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <patient classCode="PAT"/>
                  </xsl:if>
               </author>
               <informant typeCode="INF">
                  <xsl:if test="'TODO-X'">
                     <assignedPerson>
                        <id/>
                        <id root="2.16.528.1.1007.3.1"/>
                        <id root="2.16.840.1.113883.2.4.6.1"/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <effectiveTime/>
                        <certificateText/>
                        <assignee>
                           <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                              <name/>
                           </assigneePerson>
                        </assignee>
                        <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id root="2.16.528.1.1007.3.3"/>
                           <code/>
                           <name/>
                           <addr/>
                        </representedOrganization>
                     </assignedPerson>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <patient classCode="PAT"/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <responsibleParty>
                        <xsl:attribute name="classCode">AGNT</xsl:attribute>
                        <id/>
                        <code/>
                        <addr/>
                        <telecom/>
                        <statusCode/>
                        <effectiveTime/>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <agentOrganization classCode="ORG" determinerCode="INSTANCE">
                                 <id/>
                                 <code/>
                                 <name/>
                                 <addr/>
                              </agentOrganization>
                           </xsl:when>
                           <xsl:when test="geslacht | geboortedatum | geboortedatum">
                              <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                                 <agentPerson>
                                    <!-- Template :: PersonNL -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                                 </agentPerson>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                                 <id/>
                                 <code/>
                                 <name/>
                                 <addr/>
                              </representedOrganization>
                           </xsl:when>
                           <xsl:when test="geslacht | geboortedatum | geboortedatum">
                              <xsl:for-each select="geslacht | geboortedatum | geboortedatum">
                                 <representedPerson>
                                    <!-- Template :: PersonNL -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.805_20130521000000"/>
                                 </representedPerson>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                     </responsibleParty>
                  </xsl:if>
               </informant>
               <subjectOf2 typeCode="SUBJ">
                  <annotation classCode="ACT" moodCode="EVN">
                     <text/>
                     <statusCode code="completed"/>
                     <author typeCode="AUT">
                        <time/>
                        <assignedPerson>
                           <id/>
                        </assignedPerson>
                     </author>
                  </annotation>
               </subjectOf2>
               <predecessor typeCode="SUCC">
                  <conditionReference classCode="COND" moodCode="EVN">
                     <id root="" extension=""/>
                  </conditionReference>
               </predecessor>
            </Condition>
         </subject>
         <reasonOf typeCode="RSON" contextConductionInd="">
            <justifiedDetectedIssue>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifiedDetectedIssue>
         </reasonOf>
         <queryAck>
            <queryId/>
            <statusCode/>
            <queryResponseCode/>
            <resultTotalQuantity/>
            <resultCurrentQuantity/>
            <resultRemainingQuantity/>
         </queryAck>
      </ControlActProcess>
   </xsl:template>

   <!-- ControlAct Query Response MP MedicatieVoorschriftenLijst -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9040_20150715101714">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <AssignedDevice>
                  <!-- Template :: Assigned Device [universal] -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
               </AssignedDevice>
            </participant>
         </authorOrPerformer>
         <subject typeCode="SUBJ" contextConductionInd="false">
            <MedicationPrescriptionList classCode="LIST" moodCode="EVN">
               <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
               <subject typeCode="SBJ">
                  <xsl:for-each select="geboortegegevens | persoonsidentificatie">
                     <Patient>
                        <!-- Template :: PatientNL -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                     </Patient>
                  </xsl:for-each>
               </subject>
               <xsl:for-each select="voorschrift">
                  <component typeCode="COMP">
                     <!-- Template :: Medication Combined Order -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.104_20130521000000"/>
                  </component>
               </xsl:for-each>
            </MedicationPrescriptionList>
         </subject>
         <reasonOf typeCode="RSON" contextConductionInd="">
            <justifiedDetectedIssue>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifiedDetectedIssue>
         </reasonOf>
         <queryAck>
            <queryId/>
            <statusCode/>
            <queryResponseCode/>
            <resultTotalQuantity/>
            <resultCurrentQuantity/>
            <resultRemainingQuantity/>
         </queryAck>
      </ControlActProcess>
   </xsl:template>

   <!-- MedicationPrescriptionListResponse Payload -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9041_20150715102441">
      <MedicationPrescriptionList xmlns="urn:hl7-org:v3" classCode="LIST" moodCode="EVN">
         <code code="MEDLIST" codeSystem="2.16.840.1.113883.5.4"/>
         <subject typeCode="SBJ">
            <xsl:for-each select="geboortegegevens | persoonsidentificatie">
               <Patient>
                  <!-- Template :: PatientNL -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
               </Patient>
            </xsl:for-each>
         </subject>
         <xsl:for-each select="voorschrift">
            <component typeCode="COMP">
               <!-- Template :: Medication Combined Order -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.104_20130521000000"/>
            </component>
         </xsl:for-each>
      </MedicationPrescriptionList>
   </xsl:template>

   <!-- AssignedPersonIdentifiedConfirmable -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9042_20150715112902">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <assignee xmlns="urn:hl7-org:v3">
         <assigneePerson classCode="PSN" determinerCode="INSTANCE">
            <name/>
         </assigneePerson>
      </assignee>
      <representedOrganization xmlns="urn:hl7-org:v3" classCode="ORG" determinerCode="INSTANCE">
         <id/>
         <code/>
         <name/>
         <addr/>
      </representedOrganization>
   </xsl:template>

   <!-- Assigned Person IdentifiedConfirmable MedicationCombinedOrder -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9043_20150715173504">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <assignee xmlns="urn:hl7-org:v3">
         <assigneePerson classCode="PSN" determinerCode="INSTANCE">
            <name/>
         </assigneePerson>
      </assignee>
      <representedOrganization xmlns="urn:hl7-org:v3" classCode="ORG" determinerCode="INSTANCE">
         <id/>
         <code/>
         <name/>
         <addr/>
      </representedOrganization>
   </xsl:template>

   <!-- ControlAct Query by Parameter MP MedicatieVoorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9044_20150715210753">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <assignedEntity>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1007.3.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1003.1.3.5.4.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.6.1"/>
               </xsl:if>
               <code/>
               <telecom/>
               <assignedPrincipalChoiceList>
                  <assignedPerson>
                     <name/>
                  </assignedPerson>
               </assignedPrincipalChoiceList>
               <Organization>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007.3.3"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007" extension="4"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11.25"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                     </xsl:when>
                  </xsl:choose>
                  <id/>
                  <code/>
                  <telecom/>
                  <name/>
                  <addr>
                     <city/>
                  </addr>
               </Organization>
               <templateId/>
            </assignedEntity>
         </overseer>
         <queryByParameter>
            <queryId/>
            <statusCode/>
            <responseModalityCode/>
            <responsePriorityCode/>
            <executionAndDeliveryTime/>
            <administrationRequestEffectiveTimeInterval>
               <value>
                  <xsl:if test="'TODO-X'">
                     <low/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <high/>
                  </xsl:if>
               </value>
            </administrationRequestEffectiveTimeInterval>
            <medicationCombinedOrderID>
               <value/>
            </medicationCombinedOrderID>
            <patientID>
               <value root="2.16.840.1.113883.2.4.6.3"/>
            </patientID>
         </queryByParameter>
      </ControlActProcess>
   </xsl:template>

   <!-- Query by parameter MP Voorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9045_20150715212742">
      <queryByParameter xmlns="urn:hl7-org:v3">
         <queryId/>
         <statusCode/>
         <responseModalityCode/>
         <responsePriorityCode/>
         <executionAndDeliveryTime/>
         <administrationRequestEffectiveTimeInterval>
            <value>
               <xsl:if test="'TODO-X'">
                  <low/>
               </xsl:if>
               <xsl:if test="'TODO-X'">
                  <high/>
               </xsl:if>
            </value>
         </administrationRequestEffectiveTimeInterval>
         <medicationCombinedOrderID>
            <value/>
         </medicationCombinedOrderID>
         <patientID>
            <value root="2.16.840.1.113883.2.4.6.3"/>
         </patientID>
      </queryByParameter>
   </xsl:template>

   <!-- ControlAct Initiating MP Voorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9046_20150721144455">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <AssignedPerson>
               <!-- Template :: Assigned Person [universal] -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
            </AssignedPerson>
         </overseer>
         <reason typeCode="RSON" contextConductionInd="">
            <justifyingDetectedIssueEvent>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifyingDetectedIssueEvent>
         </reason>
         <subject>
            <xsl:for-each select="voorschrift">
               <prescription classCode="SBADM" moodCode="RQO">
                  <!-- Item(s) :: identificatie-->
                  <xsl:for-each select="identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: status-->
                  <xsl:for-each select="status">
                     <xsl:call-template name="makeCSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">statusCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <subject typeCode="SBJ">
                     <xsl:for-each select="geboortegegevens | persoonsidentificatie | patientgegevens">
                        <Patient>
                           <!-- Template :: PatientNL -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.800_20130521000000"/>
                        </Patient>
                     </xsl:for-each>
                  </subject>
                  <author typeCode="AUT">
                     <time/>
                     <AssignedPerson>
                        <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                        <xsl:if test="'TODO-X'">
                           <id root="2.16.528.1.1007.3.1"/>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <id root="2.16.840.1.113883.2.4.6.1"/>
                        </xsl:if>
                        <code/>
                        <addr/>
                        <assignee>
                           <assigneePerson classCode="PSN" determinerCode="INSTANCE">
                              <name/>
                           </assigneePerson>
                        </assignee>
                        <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id/>
                           <code/>
                           <name/>
                           <addr/>
                        </representedOrganization>
                     </AssignedPerson>
                  </author>
                  <directTarget typeCode="DIR">
                     <prescribedMedication typeCode="THER">
                        <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                           <MedicationKind classCode="MMAT" determinerCode="KIND">
                              <xsl:choose>
                                 <xsl:when test="product_code | product_code | product_code">
                                    <!-- Item(s) :: product_code product_code product_code-->
                                    <xsl:for-each select="product_code | product_code | product_code">
                                       <xsl:call-template name="makeCEValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">code</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <code nullFlavor="OTH">
                                       <originalText/>
                                    </code>
                                 </xsl:when>
                              </xsl:choose>
                              <!-- Item(s) :: omschrijving omschrijving-->
                              <xsl:for-each select="omschrijving | omschrijving">
                                 <xsl:call-template name="makeEDValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">desc</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                                 <activeIngredient classCode="ACTI">
                                    <!-- Template :: Active Ingredient -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                                 </activeIngredient>
                              </xsl:for-each>
                              <xsl:for-each select="sterkte">
                                 <otherIngredient classCode="INGR">
                                    <!-- Template :: Other Ingredient -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                                 </otherIngredient>
                              </xsl:for-each>
                           </MedicationKind>
                        </xsl:for-each>
                        <productOf typeCode="PRD">
                           <medicationDispenseRequest classCode="SPLY" moodCode="RQO">
                              <id/>
                              <statusCode nullFlavor="NA"/>
                              <repeatNumber/>
                              <quantity>
                                 <translation/>
                                 <translation/>
                              </quantity>
                              <destination>
                                 <serviceDeliveryLocation>
                                    <code/>
                                    <!-- Item(s) :: afleverlocatie-->
                                    <xsl:for-each select="afleverlocatie">
                                       <xsl:call-template name="makeADValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">addr</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </serviceDeliveryLocation>
                              </destination>
                              <performer typeCode="PRF">
                                 <!-- Template :: Beoogde verstrekker -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9017_20130521000000"/>
                              </performer>
                           </medicationDispenseRequest>
                        </productOf>
                        <therapeuticAgentOf typeCode="TPA">
                           <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
                              <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
                                 <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
                                 <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                                    <xsl:call-template name="makeSTValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">text</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <statusCode code="active"/>
                                 <xsl:choose>
                                    <xsl:when test="'TODO-X'">
                                       <effectiveTime>
                                          <xsl:for-each select="gebruiksperiodeduur">
                                             <comp>
                                                <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                                <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">low</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                                <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">width</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                                <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">high</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </comp>
                                          </xsl:for-each>
                                          <comp>
                                             <xsl:attribute name="operator"/>
                                             <phase>
                                                <center/>
                                                <low/>
                                                <width value="" unit="d"/>
                                             </phase>
                                             <period value="" unit=""/>
                                          </comp>
                                          <comp operator="">
                                             <comp operator="">
                                                <comp>
                                                   <xsl:attribute name="operator"/>
                                                   <phase>
                                                      <center/>
                                                      <low/>
                                                      <width value="" unit="d"/>
                                                   </phase>
                                                   <period value="" unit=""/>
                                                </comp>
                                             </comp>
                                             <comp>
                                                <xsl:attribute name="operator"/>
                                                <phase>
                                                   <center/>
                                                   <low/>
                                                   <width value="" unit="d"/>
                                                </phase>
                                                <period value="" unit=""/>
                                             </comp>
                                          </comp>
                                       </effectiveTime>
                                    </xsl:when>
                                    <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                       <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                          <effectiveTime>
                                             <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                             <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                <xsl:call-template name="makeTSValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">low</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                             <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                             <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                <xsl:call-template name="makePQValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">width</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                             <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                             <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                <xsl:call-template name="makeTSValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">high</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                          </effectiveTime>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                       <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                                       <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                          <xsl:call-template name="makePIVL_TSValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="'TODO-X'">
                                       <effectiveTime value=""/>
                                    </xsl:when>
                                 </xsl:choose>
                                 <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
                                 <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                                    <xsl:call-template name="makeCEValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">routeCode</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:choose>
                                    <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                       <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                       <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <xsl:call-template name="makeIVL_PQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                       <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                       <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <xsl:call-template name="makeIVL_PQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                       <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                       <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <xsl:call-template name="makeIVL_PQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                 </xsl:choose>
                                 <doseCheckQuantity>
                                    <numerator xsi:type="">
                                       <xsl:attribute name="value"/>
                                       <xsl:attribute name="unit"/>
                                       <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                       <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                       <low>
                                          <xsl:attribute name="value"/>
                                          <xsl:attribute name="unit"/>
                                          <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                          <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                       </low>
                                       <high>
                                          <xsl:attribute name="value"/>
                                          <xsl:attribute name="unit"/>
                                          <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                          <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                       </high>
                                    </numerator>
                                    <denominator xsi:type="PQ" value="" unit=""/>
                                 </doseCheckQuantity>
                                 <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
                                 <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                                    <xsl:call-template name="makeRTO_QTY_QTYValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                                    <support2 typeCode="SPRT">
                                       <!-- Template :: Medication Administration Instruction -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                                    </support2>
                                 </xsl:for-each>
                                 <xsl:for-each select="preconditie | preconditie | preconditie">
                                    <precondition typeCode="PRCN">
                                       <!-- Template :: Observation Event Criterion -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                                    </precondition>
                                 </xsl:for-each>
                              </medicationAdministrationRequest>
                           </xsl:for-each>
                        </therapeuticAgentOf>
                     </prescribedMedication>
                  </directTarget>
                  <reason typeCode="RSON">
                     <diagnosisEvent classCode="OBS" moodCode="EVN">
                        <code code="DX" codeSystem="2.16.840.1.113883.5.4"/>
                        <value/>
                     </diagnosisEvent>
                  </reason>
               </prescription>
            </xsl:for-each>
         </subject>
      </ControlActProcess>
   </xsl:template>

   <!-- ControlAct Initiating MP Medicatieverstrekking -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9047_20150724135333">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <AssignedPerson>
               <!-- Template :: Assigned Person [universal] -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
            </AssignedPerson>
         </overseer>
         <reason typeCode="RSON" contextConductionInd="">
            <justifyingDetectedIssueEvent>
               <!-- Template :: DetectedIssueEvent -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.508_20120901000000"/>
            </justifyingDetectedIssueEvent>
         </reason>
         <subject>
            <medicationDispenseEvent>
               <xsl:attribute name="classCode">SPLY</xsl:attribute>
               <xsl:attribute name="moodCode">EVN</xsl:attribute>
               <!-- Item(s) :: identificatie identificatie-->
               <xsl:for-each select="identificatie | identificatie">
                  <xsl:call-template name="makeIIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: status status-->
               <xsl:for-each select="status | status">
                  <xsl:call-template name="makeCSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">statusCode</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: datum-->
               <xsl:for-each select="datum">
                  <xsl:call-template name="makeIVL_TSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: hoeveelheid-->
               <xsl:for-each select="hoeveelheid">
                  <xsl:call-template name="makePQValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">quantity</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: verbruiksperiode-->
               <xsl:for-each select="verbruiksperiode">
                  <xsl:call-template name="makeIVL_TSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">expectedUseTime</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <performer typeCode="PRF">
                  <!-- Template :: Performer -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9004_20130521000000"/>
               </performer>
               <product typeCode="PRD">
                  <xsl:for-each select="geneesmiddel">
                     <dispensedMedication classCode="DST">
                        <xsl:for-each select="geneesmiddel | ingredienten | geneesmiddel | ingredienten">
                           <MedicationKind classCode="MMAT" determinerCode="KIND">
                              <xsl:choose>
                                 <xsl:when test="product_code | product_code | product_code">
                                    <!-- Item(s) :: product_code product_code product_code-->
                                    <xsl:for-each select="product_code | product_code | product_code">
                                       <xsl:call-template name="makeCEValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">code</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <code nullFlavor="OTH">
                                       <originalText/>
                                    </code>
                                 </xsl:when>
                              </xsl:choose>
                              <!-- Item(s) :: omschrijving omschrijving-->
                              <xsl:for-each select="omschrijving | omschrijving">
                                 <xsl:call-template name="makeEDValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">desc</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <xsl:for-each select="sterkte | sterkte | sterkte | ingredienten">
                                 <activeIngredient classCode="ACTI">
                                    <!-- Template :: Active Ingredient -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.107_20130521000000"/>
                                 </activeIngredient>
                              </xsl:for-each>
                              <xsl:for-each select="sterkte">
                                 <otherIngredient classCode="INGR">
                                    <!-- Template :: Other Ingredient -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.109_20130521000000"/>
                                 </otherIngredient>
                              </xsl:for-each>
                           </MedicationKind>
                        </xsl:for-each>
                        <directTargetOf typeCode="DIR">
                           <xsl:for-each select="gerelateerd_voorschrift | gerelateerd_voorschrift">
                              <prescription classCode="SBADM" moodCode="RQO">
                                 <!-- Item(s) :: identificatie identificatie-->
                                 <xsl:for-each select="identificatie | identificatie">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <statusCode/>
                                 <subject typeCode="SBJ">
                                    <xsl:for-each select="patientgegevens | patientgegevens | persoonsidentificatie | geboortegegevens | persoonsidentificatie | geboortegegevens">
                                       <Patient>
                                          <!-- Template :: PatientNL in verstrekking -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.816_20130521000000"/>
                                       </Patient>
                                    </xsl:for-each>
                                 </subject>
                                 <author typeCode="AUT">
                                    <time/>
                                    <xsl:for-each select="voorschrijver | voorschrijver">
                                       <AssignedPerson>
                                          <!-- Item(s) :: identificatie identificatie-->
                                          <xsl:for-each select="identificatie | identificatie">
                                             <xsl:call-template name="makeIIValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">id</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </AssignedPerson>
                                    </xsl:for-each>
                                 </author>
                              </prescription>
                           </xsl:for-each>
                        </directTargetOf>
                        <therapeuticAgentOf typeCode="TPA">
                           <xsl:for-each select="medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | medicatieafspraak | gebruiksinstructie | gebruiksinstructie | medicatieafspraak">
                              <medicationAdministrationRequest classCode="SBADM" moodCode="RQO">
                                 <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving-->
                                 <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving">
                                    <xsl:call-template name="makeSTValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">text</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <statusCode code="active"/>
                                 <xsl:choose>
                                    <xsl:when test="'TODO-X'">
                                       <effectiveTime>
                                          <xsl:for-each select="gebruiksperiodeduur">
                                             <comp>
                                                <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                                <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">low</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                                <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">width</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                                <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                                <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                   <xsl:call-template name="makeTSValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">high</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </comp>
                                          </xsl:for-each>
                                          <comp>
                                             <xsl:attribute name="operator"/>
                                             <phase>
                                                <center/>
                                                <low/>
                                                <width value="" unit="d"/>
                                             </phase>
                                             <period value="" unit=""/>
                                          </comp>
                                          <comp operator="">
                                             <comp operator="">
                                                <comp>
                                                   <xsl:attribute name="operator"/>
                                                   <phase>
                                                      <center/>
                                                      <low/>
                                                      <width value="" unit="d"/>
                                                   </phase>
                                                   <period value="" unit=""/>
                                                </comp>
                                             </comp>
                                             <comp>
                                                <xsl:attribute name="operator"/>
                                                <phase>
                                                   <center/>
                                                   <low/>
                                                   <width value="" unit="d"/>
                                                </phase>
                                                <period value="" unit=""/>
                                             </comp>
                                          </comp>
                                       </effectiveTime>
                                    </xsl:when>
                                    <xsl:when test="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                       <xsl:for-each select="gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur | gebruiksperiodeduur">
                                          <effectiveTime>
                                             <!-- Item(s) :: begindatum begindatum begindatum begindatum gebruiksduur-->
                                             <xsl:for-each select="begindatum | begindatum | begindatum | begindatum | gebruiksduur">
                                                <xsl:call-template name="makeTSValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">low</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                             <!-- Item(s) :: gebruiksduur gebruiksduur gebruiksduur-->
                                             <xsl:for-each select="gebruiksduur | gebruiksduur | gebruiksduur">
                                                <xsl:call-template name="makePQValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">width</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                             <!-- Item(s) :: einddatum einddatum einddatum einddatum-->
                                             <xsl:for-each select="einddatum | einddatum | einddatum | einddatum">
                                                <xsl:call-template name="makeTSValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">high</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                          </effectiveTime>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                       <!-- Item(s) :: doseerschema doseerschema doseerschema doseerschema doseerschema-->
                                       <xsl:for-each select="doseerschema | doseerschema | doseerschema | doseerschema | doseerschema">
                                          <xsl:call-template name="makePIVL_TSValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="'TODO-X'">
                                       <effectiveTime value=""/>
                                    </xsl:when>
                                 </xsl:choose>
                                 <!-- Item(s) :: toedieningsweg toedieningsweg toedieningsweg toedieningsweg-->
                                 <xsl:for-each select="toedieningsweg | toedieningsweg | toedieningsweg | toedieningsweg">
                                    <xsl:call-template name="makeCEValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">routeCode</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:choose>
                                    <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                       <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                       <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <xsl:call-template name="makeIVL_PQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                       <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                       <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <xsl:call-template name="makeIVL_PQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                       <!-- Item(s) :: doseerhoeveelheid doseerhoeveelheid doseerhoeveelheid-->
                                       <xsl:for-each select="doseerhoeveelheid | doseerhoeveelheid | doseerhoeveelheid">
                                          <xsl:call-template name="makeIVL_PQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">doseQuantity</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                 </xsl:choose>
                                 <doseCheckQuantity>
                                    <numerator xsi:type="">
                                       <xsl:attribute name="value"/>
                                       <xsl:attribute name="unit"/>
                                       <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                       <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                       <low>
                                          <xsl:attribute name="value"/>
                                          <xsl:attribute name="unit"/>
                                          <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                          <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                       </low>
                                       <high>
                                          <xsl:attribute name="value"/>
                                          <xsl:attribute name="unit"/>
                                          <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
                                          <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
                                       </high>
                                    </numerator>
                                    <denominator xsi:type="PQ" value="" unit=""/>
                                 </doseCheckQuantity>
                                 <!-- Item(s) :: max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode max_dosering_per_periode-->
                                 <xsl:for-each select="max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode | max_dosering_per_periode">
                                    <xsl:call-template name="makeRTO_QTY_QTYValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">maxDoseQuantity</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | toedieningsinstructie | toedieningsinstructie">
                                    <support2 typeCode="SPRT">
                                       <!-- Template :: Medication Administration Instruction -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.101_20130521000000"/>
                                    </support2>
                                 </xsl:for-each>
                                 <xsl:for-each select="preconditie | preconditie | preconditie">
                                    <precondition typeCode="PRCN">
                                       <!-- Template :: Observation Event Criterion -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9001_20130521000000"/>
                                    </precondition>
                                 </xsl:for-each>
                              </medicationAdministrationRequest>
                           </xsl:for-each>
                        </therapeuticAgentOf>
                     </dispensedMedication>
                  </xsl:for-each>
               </product>
               <xsl:for-each select="verantwoordelijke | verantwoordelijke">
                  <responsibleParty typeCode="RESP">
                     <xsl:for-each select="zorgverlener | zorgverlener">
                        <assignedCareProvider classCode="ASSIGNED">
                           <!-- Item(s) :: identificatie identificatie-->
                           <xsl:for-each select="identificatie | identificatie">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: zorgverlenerrol zorgverlenerrol-->
                           <xsl:for-each select="zorgverlenerrol | zorgverlenerrol">
                              <xsl:call-template name="makeCVValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">code</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <xsl:for-each select="zorginstelling | zorginstelling">
                              <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                                 <!-- Item(s) :: identificatie identificatie-->
                                 <xsl:for-each select="identificatie | identificatie">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <!-- Item(s) :: naam naam-->
                                 <xsl:for-each select="naam | naam">
                                    <xsl:call-template name="makeONValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">name</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <!-- Item(s) :: vestigingsplaats vestigingsplaats-->
                                 <xsl:for-each select="vestigingsplaats | vestigingsplaats">
                                    <xsl:call-template name="makeADValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">addr</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </representedOrganization>
                           </xsl:for-each>
                        </assignedCareProvider>
                     </xsl:for-each>
                  </responsibleParty>
               </xsl:for-each>
            </medicationDispenseEvent>
         </subject>
      </ControlActProcess>
   </xsl:template>

   <!-- DoseQuantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9048_20160614145840"/>

   <!-- DoseQuantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9048_20150724151109"/>

   <!-- doseCheckQuantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9049_20150728133031">
      <numerator xmlns="urn:hl7-org:v3" xsi:type="">
         <xsl:attribute name="value"/>
         <xsl:attribute name="unit"/>
         <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
         <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
         <low>
            <xsl:attribute name="value"/>
            <xsl:attribute name="unit"/>
            <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
            <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
         </low>
         <high>
            <xsl:attribute name="value"/>
            <xsl:attribute name="unit"/>
            <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
            <translation value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
         </high>
      </numerator>
      <denominator xmlns="urn:hl7-org:v3" xsi:type="PQ" value="" unit=""/>
   </xsl:template>

   <!-- Medicatieoverzicht patiënt -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9050_20151102000000">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9050"/>
         <id/>
         <code code="60591-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Patient summary"/>
         <title/>
         <effectiveTime/>
         <confidentialityCode/>
         <languageCode/>
         <versionNumber/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA Author (Body) -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9007_20151125000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <authenticator>
            <!-- Template :: MP CDA Authenticator -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
         </authenticator>
         <component>
            <structuredBody>
               <component>
                  <!-- Template :: Vitale functies -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9058_20151116000000"/>
               </component>
               <component>
                  <!-- Template :: Waarschuwingen -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9054_20151116000000"/>
               </component>
               <component>
                  <!-- Template :: Medicatiegebruik sectie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9057_20151116000000"/>
               </component>
               <component>
                  <!-- Template :: Lab uitslagen -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9055_20151116000000"/>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- MP CDA recordTarget -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9051_20151116104323">
      <recordTarget xmlns="urn:hl7-org:v3">
         <patientRole>
            <id/>
            <id/>
            <addr>
               <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
               <!-- Item(s) :: straat-->
               <xsl:for-each select="straat">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">streetName</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: huisnummer-->
               <xsl:for-each select="huisnummer">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
               <xsl:if test="huisnummerletter | huisnummertoevoeging">
                  <buildingNumberSuffix>
                     <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                  </buildingNumberSuffix>
               </xsl:if>
               <!-- Item(s) :: aanduiding_bij_nummer-->
               <xsl:for-each select="aanduiding_bij_nummer">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: postcode-->
               <xsl:for-each select="postcode">
                  <xsl:call-template name="makeADXPValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">postalCode</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: gemeente-->
               <xsl:for-each select="gemeente">
                  <xsl:call-template name="makeADXPValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">county</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: woonplaats-->
               <xsl:for-each select="woonplaats">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">city</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: land-->
               <xsl:for-each select="land">
                  <xsl:call-template name="makeADXPValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">country</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <!-- Item(s) :: additionele_informatie-->
               <xsl:for-each select="additionele_informatie">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">unitID</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <useablePeriod/>
            </addr>
            <telecom>
               <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
               <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
            </telecom>
            <telecom>
               <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
               <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
            </telecom>
            <patient>
               <id/>
               <name>
                  <xsl:attribute name="use"/>
                  <xsl:if test="voornamen">
                     <!-- Item(s) :: voornamen-->
                     <xsl:for-each select="voornamen">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">given</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="roepnaam">
                     <!-- Item(s) :: roepnaam-->
                     <xsl:for-each select="roepnaam">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">given</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="initialen">
                     <!-- Item(s) :: initialen-->
                     <xsl:for-each select="initialen">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">given</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <given/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <prefix/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <family/>
                  </xsl:if>
                  <xsl:if test="voorvoegsels">
                     <!-- Item(s) :: voorvoegsels-->
                     <xsl:for-each select="voorvoegsels">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">prefix</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="achternaam">
                     <!-- Item(s) :: achternaam-->
                     <xsl:for-each select="achternaam">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">family</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <delimiter/>
                  </xsl:if>
                  <xsl:if test="voorvoegsels_partner">
                     <!-- Item(s) :: voorvoegsels_partner-->
                     <xsl:for-each select="voorvoegsels_partner">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">prefix</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="achternaam_partner">
                     <!-- Item(s) :: achternaam_partner-->
                     <xsl:for-each select="achternaam_partner">
                        <xsl:call-template name="makeENXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">family</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <suffix qualifier="AC"/>
                  </xsl:if>
                  <validTime/>
               </name>
               <administrativeGenderCode/>
               <birthTime/>
               <sdtc:multipleBirthInd xmlns:sdtc="urn:hl7-org:sdtc"/>
               <maritalStatusCode/>
            </patient>
         </patientRole>
      </recordTarget>
   </xsl:template>

   <!-- Body Weight -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9052_20151116000000">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9052"/>
         <code code="3142-7" codeSystem="2.16.840.1.113883.6.1" displayName="Body Weight"/>
         <effectiveTime/>
         <value/>
      </observation>
   </xsl:template>

   <!-- Body Height -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9053_20151116000000">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <code code="8302-2" codeSystem="2.16.840.1.113883.6.1" displayName="Body Height"/>
         <value/>
      </observation>
   </xsl:template>

   <!-- Waarschuwingen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9054_20151116000000">
      <section xmlns="urn:hl7-org:v3">
         <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>
         <title>Waarschuwingen</title>
         <text/>
      </section>
   </xsl:template>

   <!-- Lab uitslagen -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9055_20151116000000">
      <section xmlns="urn:hl7-org:v3">
         <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Relevant diagnostic tests and/or laboratory data"/>
         <title>Uitslagen</title>
         <text/>
      </section>
   </xsl:template>

   <!-- ControlAct Query by Parameter MP MedicatieVoorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9056_20150715211659">
      <ControlActProcess xmlns="urn:hl7-org:v3" moodCode="EVN">
         <code/>
         <effectiveTime/>
         <authorOrPerformer typeCode="">
            <participant>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <AssignedDevice>
                        <!-- Template :: Assigned Device [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.513_20120901000000"/>
                     </AssignedDevice>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <AssignedPerson>
                        <!-- Template :: Assigned Person [universal] -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.102.10.514_20120901000000"/>
                     </AssignedPerson>
                  </xsl:when>
               </xsl:choose>
            </participant>
         </authorOrPerformer>
         <overseer typeCode="RESP">
            <assignedEntity>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1007.3.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id extension="" root="2.16.840.1.113883.2.4.6.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.3.11.7.3"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.528.1.1003.1.3.5.4.1"/>
               </xsl:if>
               <xsl:if test="'TODO-X-Include in choice'">
                  <id root="2.16.840.1.113883.2.4.6.1"/>
               </xsl:if>
               <code/>
               <telecom/>
               <assignedPrincipalChoiceList>
                  <assignedPerson>
                     <name/>
                  </assignedPerson>
               </assignedPrincipalChoiceList>
               <Organization>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007.3.3"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.528.1.1007" extension="4"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11.25"/>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <id root="2.16.840.1.113883.2.4.3.11" extension="7"/>
                     </xsl:when>
                  </xsl:choose>
                  <id/>
                  <code/>
                  <telecom/>
                  <name/>
                  <addr>
                     <city/>
                  </addr>
               </Organization>
               <templateId/>
            </assignedEntity>
         </overseer>
         <queryByParameter>
            <queryId/>
            <statusCode/>
            <responseModalityCode/>
            <responsePriorityCode/>
            <executionAndDeliveryTime/>
            <administrationRequestEffectiveTimeInterval>
               <value/>
            </administrationRequestEffectiveTimeInterval>
            <dispenseEventEffectiveTimeInterval>
               <value>
                  <xsl:if test="'TODO-X'">
                     <low value=""/>
                  </xsl:if>
                  <xsl:if test="'TODO-X'">
                     <high value=""/>
                  </xsl:if>
               </value>
            </dispenseEventEffectiveTimeInterval>
            <mostRecentDispenseForEachRxIndicator>
               <value/>
            </mostRecentDispenseForEachRxIndicator>
            <patientID>
               <value root="2.16.840.1.113883.2.4.6.3"/>
            </patientID>
         </queryByParameter>
      </ControlActProcess>
   </xsl:template>

   <!-- Medicatiegebruik sectie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9057_20151116000000">
      <section xmlns="urn:hl7-org:v3">
         <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of medication use"/>
         <title>Gebruikte medicatie</title>
         <text/>
         <xsl:for-each select="gebruik_indicator | medicatiegebruik">
            <entry>
               <!-- Template :: substanceAdministration -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.105_20131221000000"/>
            </entry>
         </xsl:for-each>
      </section>
   </xsl:template>

   <!-- Vitale functies -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9058_20151116000000">
      <section xmlns="urn:hl7-org:v3">
         <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs"/>
         <title>Vitale functies</title>
         <text/>
         <entry>
            <!-- Template :: Body Height -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9053_20151116000000"/>
         </entry>
         <entry>
            <!-- Template :: Body Weight -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9052_20151116000000"/>
         </entry>
      </section>
   </xsl:template>

   <!-- Bijwerking medicatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9059_20151125000000">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9059"/>
         <code code="62014003" codeSystem="2.16.840.1.113883.6.96" displayName=""/>
         <text mediaType="text/plain"/>
      </observation>
   </xsl:template>

   <!-- Behandeleffect medicatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9060_20151125000000">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9060"/>
         <code code="11621000146105" codeSystem="2.16.840.1.113883.6.96" displayName="Therapeutisch effect volgens patiënt"/>
         <text/>
      </observation>
   </xsl:template>

   <!-- MP CDA Authenticator -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654">
      <xsl:attribute name="typeCode">AUTHEN</xsl:attribute>
      <time xmlns="urn:hl7-org:v3"/>
      <signatureCode xmlns="urn:hl7-org:v3"/>
      <assignedEntity xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA AssignedEntity -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9013_20151127000000"/>
      </assignedEntity>
   </xsl:template>

   <!-- MP CDA custodian -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024">
      <xsl:attribute name="typeCode">CST</xsl:attribute>
      <assignedCustodian xmlns="urn:hl7-org:v3" classCode="ASSIGNED">
         <representedCustodianOrganization classCode="ORG" determinerCode="INSTANCE">
            <id/>
            <name/>
            <telecom/>
            <addr/>
         </representedCustodianOrganization>
      </assignedCustodian>
   </xsl:template>

   <!-- Afleverlocatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9063_20160217000000">
      <destination xmlns="urn:hl7-org:v3">
         <serviceDeliveryLocation>
            <code/>
            <!-- Item(s) :: afleverlocatie-->
            <xsl:for-each select="afleverlocatie">
               <xsl:call-template name="makeADValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">addr</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </serviceDeliveryLocation>
      </destination>
   </xsl:template>

   <!-- maxDoseQuantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000">
      <!-- Item(s) :: aantal eenheid aantal eenheid-->
      <xsl:for-each select="aantal | eenheid | aantal | eenheid">
         <xsl:call-template name="makePQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">numerator</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: tijdseenheid tijdseenheid tijdseenheid-->
      <xsl:for-each select="tijdseenheid | tijdseenheid | tijdseenheid">
         <xsl:call-template name="makePQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">denominator</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Author Participation -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9066_20160615212337">
      <templateId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9066"/>
      <!-- Item(s) :: afspraakdatum afspraakdatum datum registratiedatum voorstel_datum-->
      <xsl:for-each select="afspraakdatum | afspraakdatum | datum | registratiedatum | voorstel_datum">
         <xsl:call-template name="makeTSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">time</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <xsl:for-each select="zorgverlener | zorgverlener | zorgverlener | zorgverlener">
         <assignedAuthor xmlns="urn:hl7-org:v3">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
            <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
               <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
               <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.UZIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
               <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
               <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.AGBValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
               <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
               <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                  <xsl:call-template name="makeIIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
               <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
               <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                  <xsl:call-template name="makeIIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
            <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">code</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
               <assignedPerson>
                  <!-- Template :: Naam persoon -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
               </assignedPerson>
            </xsl:for-each>
            <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
               <representedOrganization>
                  <xsl:attribute name="classCode">ORG</xsl:attribute>
                  <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                  <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                     <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                     <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                        <xsl:call-template name="makeII.NL.URAValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                     <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                     <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                        <xsl:call-template name="makeII.NL.AGBValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                     <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                     <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                  <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                     <xsl:call-template name="makeONValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">name</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </representedOrganization>
            </xsl:for-each>
         </assignedAuthor>
      </xsl:for-each>
   </xsl:template>

   <!-- Stoptype -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9067"/>
         <code code="1" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" displayName="" codeSystemName=""/>
         <!-- Item(s) :: stoptype stoptype stoptype-->
         <xsl:for-each select="stoptype | stoptype | stoptype">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- Reden voor medicatieafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9068_20160617150015">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9068"/>
         <code code="2" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2"/>
         <!-- Item(s) :: reden_afspraak-->
         <xsl:for-each select="reden_afspraak">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- Toelichting -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405">
      <act xmlns="urn:hl7-org:v3" classCode="ACT" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9069"/>
         <code code="48767-8" displayName="" codeSystem="2.16.840.1.113883.6.1" codeSystemName=""/>
         <!-- Item(s) :: toelichting toelichting toelichting toelichting toelichting-->
         <xsl:for-each select="toelichting | toelichting | toelichting | toelichting | toelichting">
            <xsl:call-template name="makeSTValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">text</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </act>
   </xsl:template>

   <!-- MP CDA Medication Information -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427">
      <xsl:for-each select="product | product | product | product | product_specificatie | product">
         <manufacturedProduct xmlns="urn:hl7-org:v3" classCode="MANU">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9070"/>
            <xsl:for-each select="product_specificatie | product_specificatie | product_specificatie | product_specificatie">
               <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                  <!-- Item(s) :: product_code product_code product_code product_code product_code-->
                  <xsl:for-each select="product_code | product_code | product_code | product_code | product_code">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">code</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: product_naam product_naam product_naam product_naam product_naam-->
                  <xsl:for-each select="product_naam | product_naam | product_naam | product_naam | product_naam">
                     <xsl:call-template name="makeENValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">name</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: omschrijving omschrijving omschrijving omschrijving omschrijving-->
                  <xsl:for-each select="omschrijving | omschrijving | omschrijving | omschrijving | omschrijving">
                     <xsl:call-template name="makeEDValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">desc</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: farmaceutische_vorm farmaceutische_vorm farmaceutische_vorm farmaceutische_vorm farmaceutische_vorm-->
                  <xsl:for-each select="farmaceutische_vorm | farmaceutische_vorm | farmaceutische_vorm | farmaceutische_vorm | farmaceutische_vorm">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">formCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <lotNumberText/>
                  <xsl:for-each select="ingredient | ingredient | ingredient | ingredient | ingredient">
                     <pharm:ingredient xmlns:pharm="urn:ihe:pharm:medication" classCode="INGR">
                        <xsl:for-each select="sterkte | sterkte | sterkte | sterkte | sterkte | hoeveelheid_product | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient">
                           <pharm:quantity>
                              <!-- Template :: MP Ingredient quantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9071_20160618204153"/>
                           </pharm:quantity>
                        </xsl:for-each>
                        <xsl:for-each select="ingredient_code | ingredient_code | ingredient_code | ingredient_code | ingredient_code">
                           <pharm:ingredient classCode="MMAT" determinerCode="KIND">
                              <!-- Template :: MP CDA Material Code Ext -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9074_20160618205801"/>
                           </pharm:ingredient>
                        </xsl:for-each>
                     </pharm:ingredient>
                  </xsl:for-each>
               </manufacturedMaterial>
            </xsl:for-each>
         </manufacturedProduct>
      </xsl:for-each>
   </xsl:template>

   <!-- MP Ingredient quantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9071_20160618204153">
      <xsl:for-each select="hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_ingredient">
         <numerator xmlns="urn:hl7-org:v3" xsi:type="PQ" value="">
            <xsl:attribute name="unit"/>
            <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
         </numerator>
      </xsl:for-each>
      <xsl:for-each select="hoeveelheid_product | hoeveelheid_product | hoeveelheid_product | hoeveelheid_product | hoeveelheid_product">
         <denominator xmlns="urn:hl7-org:v3" xsi:type="PQ" value="">
            <xsl:attribute name="unit"/>
            <translation value="{waarde | waarde | aantal | waarde | waarde | waarde | waarde | waarde | aantal | waarde | waarde | waarde | aantal/(@code, @value)[1]}" code="{eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid | eenheid/(@code, @value)[1]}" codeSystem="2.16.840.1.113883.2.4.4.1.900.2" displayName=""/>
         </denominator>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Active Ingredient -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9072_20160618204717">
      <pharm:activeIngredient xmlns:pharm="urn:ihe:pharm:medication" classCode="ACTI">
         <xsl:for-each select="sterkte | sterkte | hoeveelheid_product | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient">
            <pharm:quantity>
               <!-- Template :: MP Ingredient quantity -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9071_20160618204153"/>
            </pharm:quantity>
         </xsl:for-each>
         <pharm:activeIngredientMaterialKind>
            <!-- Template :: MP CDA Ingredient Material Kind -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9073_20160618205506"/>
         </pharm:activeIngredientMaterialKind>
      </pharm:activeIngredient>
   </xsl:template>

   <!-- MP CDA Ingredient Material Kind -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9073_20160618205506">
      <xsl:for-each select="ingredient_code | ingredient_code | ingredient_code | ingredient_code | ingredient_code">
         <pharm:ingredient xmlns:pharm="urn:ihe:pharm:medication" classCode="MMAT" determinerCode="KIND">
            <!-- Template :: MP CDA Material Code Ext -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9074_20160618205801"/>
         </pharm:ingredient>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Material Code Ext -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9074_20160618205801">
      <!-- Item(s) :: ingredient_code ingredient_code ingredient_code ingredient_code ingredient_code-->
      <xsl:for-each select="ingredient_code | ingredient_code | ingredient_code | ingredient_code | ingredient_code">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Toedienschema -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9076_20160619200644"/>

   <!-- HL7NL PIVL_TS Interval -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955">
      <xsl:attribute name="operator">A</xsl:attribute>
      <xsl:attribute name="isFlexible">false</xsl:attribute>
      <xsl:attribute name="xsi:type">hl7nl:PIVL_TS</xsl:attribute>
      <!-- Item(s) :: interval interval interval-->
      <xsl:for-each select="interval | interval | interval">
         <xsl:call-template name="makehl7nl:RTOValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">frequency</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- HL7NL PIVL_TS Frequency -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239">
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="xsi:type">hl7nl:PIVL_TS</xsl:attribute>
   </xsl:template>

   <!-- HL7NL PIVL_TS Vaste Tijd -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234">
      <xsl:attribute name="xsi:type">hl7nl:PIVL_TS</xsl:attribute>
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible"/>
      <hl7nl:phase xmlns:hl7nl="urn:hl7-nl:v3">
         <!-- Item(s) :: toedientijd toedientijd toedientijd-->
         <xsl:for-each select="toedientijd | toedientijd | toedientijd">
            <xsl:call-template name="makehl7nl:TSValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">low</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </hl7nl:phase>
      <hl7nl:period xmlns:hl7nl="urn:hl7-nl:v3" value="1" unit="d"/>
   </xsl:template>

   <!-- HL7NL PIVL_TS Cyclisch schema -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112">
      <xsl:attribute name="operator">A</xsl:attribute>
      <xsl:attribute name="isFlexible"/>
      <hl7nl:phase xmlns:hl7nl="urn:hl7-nl:v3">
         <hl7nl:low/>
         <!-- Item(s) :: doseerduur doseerduur doseerduur-->
         <xsl:for-each select="doseerduur | doseerduur | doseerduur">
            <xsl:call-template name="makehl7nl:PQValue">
               <xsl:with-param name="elemName">width</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </hl7nl:phase>
      <!-- Item(s) :: herhaalperiode_cyclisch_schema herhaalperiode_cyclisch_schema herhaalperiode_cyclisch_schema-->
      <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
         <xsl:call-template name="makehl7nl:PQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">period</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- Reden voor toedieningsafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9083_20160621100220">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9083"/>
         <code code="3" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" codeSystemName="" displayName=""/>
         <!-- Item(s) :: reden_afspraak-->
         <xsl:for-each select="reden_afspraak">
            <xsl:call-template name="makeSTValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">text</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- MP MedBeh identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838">
      <xsl:for-each select="medicamenteuze_behandeling">
         <procedure xmlns="urn:hl7-org:v3" classCode="PROC" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9084"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code code="1" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName=""/>
         </procedure>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Aanvullende gebruiksinstructie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818">
      <act xmlns="urn:hl7-org:v3" classCode="ACT" moodCode="RQO">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9085"/>
         <xsl:choose>
            <xsl:when test="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
               <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
               <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                  <xsl:call-template name="makeCEValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">code</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <code>
                  <!-- Item(s) :: aanvullende_instructie aanvullende_instructie aanvullende_instructie-->
                  <xsl:for-each select="aanvullende_instructie | aanvullende_instructie | aanvullende_instructie">
                     <xsl:call-template name="makeSTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">originalText</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </code>
            </xsl:when>
         </xsl:choose>
      </act>
   </xsl:template>

   <!-- MP Medicatieafspraak identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9086_20160621122009">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9086"/>
         <!-- Item(s) :: identificatie identificatie identificatie_medicatieafspraak identificatie identificatie-->
         <xsl:for-each select="identificatie | identificatie | identificatie_medicatieafspraak | identificatie | identificatie">
            <xsl:call-template name="makeIIValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">id</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
         <consumable xsi:nil="true"/>
      </substanceAdministration>
   </xsl:template>

   <!-- MP CDA Verstrekkingsverzoek -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9087_20160621125157">
      <xsl:for-each select="verstrekkingsverzoek">
         <supply xmlns="urn:hl7-org:v3" classCode="SPLY" moodCode="RQO">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9087"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code code="3" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName="" codeSystemName=""/>
            <!-- Item(s) :: aantal_herhalingen-->
            <xsl:for-each select="aantal_herhalingen">
               <xsl:call-template name="makeINT.NONNEGValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">repeatNumber</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="te_verstrekken_hoeveelheid">
               <quantity value="">
                  <!-- Template :: DispenseQuantity unit and translation(s) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9165_20170118000000"/>
               </quantity>
            </xsl:for-each>
            <xsl:for-each select="verbruiksperiode">
               <expectedUseTime>
                  <!-- Item(s) :: ingangsdatum-->
                  <xsl:for-each select="ingangsdatum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">low</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: duur-->
                  <xsl:for-each select="duur">
                     <xsl:call-template name="makePQValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">width</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: einddatum-->
                  <xsl:for-each select="einddatum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">high</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </expectedUseTime>
            </xsl:for-each>
            <xsl:for-each select="product | product | product | product | product_specificatie | product | te_verstrekken_geneesmiddel">
               <product>
                  <!-- Template :: MP CDA Medication Information -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
               </product>
            </xsl:for-each>
            <xsl:for-each select="beoogd_verstrekker">
               <performer>
                  <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                     <assignedEntity>
                        <!-- Template :: MP CDA assigned organisatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                     </assignedEntity>
                  </xsl:for-each>
               </performer>
            </xsl:for-each>
            <xsl:for-each select="datum | zorgverlener | zorgverlener | voorstel_datum | zorgverlener | registratiedatum | zorgverlener | afspraakdatum | afspraakdatum | auteur">
               <author>
                  <!-- Template :: MP CDA Author Participation -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9066_20160615212337"/>
               </author>
            </xsl:for-each>
            <participant typeCode="DST">
               <!-- Template :: MP CDA afleverlocatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9091_20160621153127"/>
            </participant>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Aanvullende wens -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9093_20160623183534"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="relatie_naar_medicatieafspraak">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Medicatieafspraak identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9086_20160621122009"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </supply>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA assigned organisatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <id xmlns="urn:hl7-org:v3" nullFlavor="NI"/>
      <xsl:for-each select="zorgaanbieder | zorgaanbieder">
         <representedOrganization xmlns="urn:hl7-org:v3">
            <xsl:attribute name="classCode">ORG</xsl:attribute>
            <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.URAValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.AGBValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeIIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
            <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
               <xsl:call-template name="makeONValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">name</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </representedOrganization>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Organization id name -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9089_20160621134042">
      <xsl:attribute name="classCode">ORG</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
      <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
         <xsl:call-template name="makeONValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">name</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- MP Naam eenvoudig -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9090_20160621142510"/>

   <!-- MP CDA afleverlocatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9091_20160621153127">
      <participantRole xmlns="urn:hl7-org:v3" classCode="SDLOC">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9091"/>
         <addr>
            <xsl:if test="'TODO-X'">
               <streetName/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <houseNumber/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <buildingNumberSuffix/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <additionalLocator/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <postalCode code="" codeSystem=""/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <city/>
            </xsl:if>
            <xsl:if test="'TODO-X'">
               <country/>
            </xsl:if>
            <xsl:if test="afleverlocatie | afleverlocatie">
               <!-- Item(s) :: afleverlocatie afleverlocatie-->
               <xsl:for-each select="afleverlocatie | afleverlocatie">
                  <xsl:call-template name="makeSTValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">desc</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
         </addr>
      </participantRole>
   </xsl:template>

   <!-- Adres Afleverlocatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9092_20160621155532">
      <addr xmlns="urn:hl7-org:v3">
         <xsl:if test="'TODO-X'">
            <streetName/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <houseNumber/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <buildingNumberSuffix/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <additionalLocator/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <postalCode code="" codeSystem=""/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <city/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <country/>
         </xsl:if>
         <xsl:if test="afleverlocatie | afleverlocatie">
            <!-- Item(s) :: afleverlocatie afleverlocatie-->
            <xsl:for-each select="afleverlocatie | afleverlocatie">
               <xsl:call-template name="makeSTValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">desc</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </xsl:if>
      </addr>
   </xsl:template>

   <!-- Aanvullende wens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9093_20160623183534">
      <act xmlns="urn:hl7-org:v3" classCode="ACT" moodCode="RQO">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9093"/>
         <!-- Item(s) :: aanvullende_wensen-->
         <xsl:for-each select="aanvullende_wensen">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">code</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </act>
   </xsl:template>

   <!-- MP CDA Verstrekking -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9094_20160623194106">
      <xsl:for-each select="verstrekking">
         <supply xmlns="urn:hl7-org:v3" classCode="SPLY" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9094"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code code="373784005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
            <!-- Item(s) :: datum-->
            <xsl:for-each select="datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="verstrekte_hoeveelheid">
               <quantity value="">
                  <!-- Template :: DispenseQuantity unit and translation(s) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9165_20170118000000"/>
               </quantity>
            </xsl:for-each>
            <!-- Item(s) :: verbruiksduur-->
            <xsl:for-each select="verbruiksduur">
               <xsl:call-template name="makeIVL_TSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">expectedUseTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="product | product | product | product | product_specificatie | product | verstrekt_geneesmiddel">
               <product>
                  <!-- Template :: MP CDA Medication Information -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
               </product>
            </xsl:for-each>
            <xsl:for-each select="verstrekker">
               <performer>
                  <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                     <assignedEntity>
                        <!-- Template :: MP CDA assigned organisatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                     </assignedEntity>
                  </xsl:for-each>
               </performer>
            </xsl:for-each>
            <participant typeCode="DST">
               <!-- Template :: MP CDA afleverlocatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9091_20160621153127"/>
            </participant>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Aanschrijfdatum -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9095_20160623195047"/>
            </entryRelationship>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Distributievorm -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9097_20160623203415"/>
            </entryRelationship>
            <entryRelationship typeCode="COMP">
               <!-- Template :: MP CDA VS Aanvullende informatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9178_20170523091005"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="relatie_naar_verstrekkingsverzoek">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Verstrekkingsverzoek identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9096_20160623201738"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </supply>
      </xsl:for-each>
   </xsl:template>

   <!-- Aanschrijfdatum -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9095_20160623195047">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9095"/>
         <code code="4" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" codeSystemName=""/>
         <!-- Item(s) :: aanschrijfdatum-->
         <xsl:for-each select="aanschrijfdatum">
            <xsl:call-template name="makeTSValue">
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- MP Verstrekkingsverzoek identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9096_20160623201738">
      <supply xmlns="urn:hl7-org:v3" classCode="SPLY" moodCode="RQO">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9096"/>
         <!-- Item(s) :: identificatie-->
         <xsl:for-each select="identificatie">
            <xsl:call-template name="makeIIValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">id</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <code code="3" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
      </supply>
   </xsl:template>

   <!-- Distributievorm -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9097_20160623203415">
      <act xmlns="urn:hl7-org:v3" classCode="ACT" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9097"/>
         <!-- Item(s) :: distributievorm-->
         <xsl:for-each select="distributievorm">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">code</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </act>
   </xsl:template>

   <!-- MP Toedieningsafspraak identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9101_20160624130316">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9101"/>
         <!-- Item(s) :: identificatie_toedieningsafspraak identificatie_23288-->
         <xsl:for-each select="identificatie_toedieningsafspraak | identificatie_23288">
            <xsl:call-template name="makeIIValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">id</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <code code="422037009" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
         <consumable xsi:nil="true"/>
      </substanceAdministration>
   </xsl:template>

   <!-- MP Verstrekking identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9102_20160624133045">
      <supply xmlns="urn:hl7-org:v3" classCode="SPLY" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9102"/>
         <!-- Item(s) :: identificatie-->
         <xsl:for-each select="identificatie">
            <xsl:call-template name="makeIIValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">id</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <code code="373784005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
      </supply>
   </xsl:template>

   <!-- MP CDA RelatedEntity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9103_20160624141250">
      <xsl:attribute name="classCode">AGNT</xsl:attribute>
      <!-- Item(s) :: rol_of_functie-->
      <xsl:for-each select="rol_of_functie">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | persoon">
         <relatedPerson xmlns="urn:hl7-org:v3">
            <!-- Template :: Naam persoon -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
         </relatedPerson>
      </xsl:for-each>
   </xsl:template>

   <!-- MP HL7 Medicatiegegevens Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9104_20160625145615">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9104"/>
         <code code="102" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <component typeCode="COMP">
            <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
               <substanceAdministration classCode="SBADM" moodCode="RQO">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9148"/>
                  <!-- Item(s) :: identificatie-->
                  <xsl:for-each select="identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <code code="16076005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
                  <!-- Item(s) :: omschrijving-->
                  <xsl:for-each select="omschrijving">
                     <xsl:call-template name="makeEDValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">text</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: geannuleerd_indicator-->
                  <xsl:for-each select="geannuleerd_indicator">
                     <xsl:call-template name="makeCSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">statusCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: gebruiksperiode-->
                  <xsl:for-each select="gebruiksperiode">
                     <xsl:call-template name="makeIVL_TSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: toedieningsweg-->
                  <xsl:for-each select="toedieningsweg">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">routeCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="product | product | product | product | product_specificatie | product | afgesproken_geneesmiddel">
                     <consumable>
                        <!-- Template :: MP CDA Medication Information -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
                     </consumable>
                  </xsl:for-each>
                  <xsl:for-each select="datum | zorgverlener | zorgverlener | voorstel_datum | zorgverlener | registratiedatum | zorgverlener | afspraakdatum | afspraakdatum | voorschrijver">
                     <author>
                        <!-- Template :: MP CDA Author Participation -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9066_20160615212337"/>
                     </author>
                  </xsl:for-each>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Stoptype -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
                  </entryRelationship>
                  <entryRelationship typeCode="RSON">
                     <!-- Template :: Reden voor medicatieafspraak -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9068_20160617150015"/>
                  </entryRelationship>
                  <xsl:for-each select="reden_van_voorschrijven | probleem">
                     <entryRelationship typeCode="RSON">
                        <!-- Template :: Reden van voorschrijven -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9160_20161109134526"/>
                     </entryRelationship>
                  </xsl:for-each>
                  <entryRelationship typeCode="SPRT">
                     <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
                  </entryRelationship>
                  <xsl:for-each select="lichaamslengte">
                     <entryRelationship typeCode="COMP">
                        <!-- Template :: MP CDA Body Height -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9122_20160713172302"/>
                     </entryRelationship>
                  </xsl:for-each>
                  <xsl:for-each select="lichaamsgewicht">
                     <entryRelationship typeCode="COMP">
                        <!-- Template :: MP CDA Body Weight -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9123_20160713212617"/>
                     </entryRelationship>
                  </xsl:for-each>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: MP CDA MA Aanvullende informatie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9177_20170523084315"/>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                     <!-- Template :: Toelichting -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
                  </entryRelationship>
                  <xsl:for-each select="doseerinstructie">
                     <entryRelationship typeCode="COMP">
                        <!-- Item(s) :: volgnummer-->
                        <xsl:for-each select="volgnummer">
                           <xsl:call-template name="makeINTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                           <substanceAdministration classCode="SBADM" moodCode="RQO">
                              <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                              <effectiveTime>
                                 <xsl:choose>
                                    <xsl:when test="doseerduur | doseerduur | doseerduur">
                                       <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                       <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">width</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="'TODO-X'">
                                       <high nullFlavor="NI"/>
                                    </xsl:when>
                                 </xsl:choose>
                              </effectiveTime>
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="interval | interval | interval">
                                    <xsl:for-each select="interval | interval | interval">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Interval -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime xsi:type="SXPR_TS" operator="A">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                       </comp>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime operator="A">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                       </comp>
                                       <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                          </comp>
                                       </xsl:for-each>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime operator="A">
                                       <xsl:if test="'TODO-X'">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Frequency -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                          </comp>
                                       </xsl:if>
                                       <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                          <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                             <comp>
                                                <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                                <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                             </comp>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Nacht -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Middag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Avond -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime operator="A">
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Nacht -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                          </comp>
                                       </xsl:for-each>
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                          </comp>
                                       </xsl:for-each>
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Middag -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                          </comp>
                                       </xsl:for-each>
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Avond -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                          </comp>
                                       </xsl:for-each>
                                    </effectiveTime>
                                 </xsl:when>
                              </xsl:choose>
                              <xsl:choose>
                                 <xsl:when test="'TODO-X-Include in choice'">
                                    <xsl:choose>
                                       <xsl:when test="'TODO-X'">
                                          <doseQuantity>
                                             <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                             <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                                <xsl:call-template name="makePQValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">center</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                          </doseQuantity>
                                       </xsl:when>
                                       <xsl:when test="'TODO-X'">
                                          <doseQuantity>
                                             <xsl:if test="min | min | min">
                                                <!-- Item(s) :: min min min-->
                                                <xsl:for-each select="min | min | min">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">low</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </xsl:if>
                                             <xsl:if test="max | max | max">
                                                <!-- Item(s) :: max max max-->
                                                <xsl:for-each select="max | max | max">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">high</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </xsl:if>
                                          </doseQuantity>
                                       </xsl:when>
                                    </xsl:choose>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X-Include in choice'">
                                    <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                                    <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                       <xsl:call-template name="makeIVL_PQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:when>
                              </xsl:choose>
                              <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                                 <maxDoseQuantity>
                                    <!-- Template :: maxDoseQuantity -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                                 </maxDoseQuantity>
                              </xsl:for-each>
                              <consumable xsi:nil="true"/>
                              <xsl:for-each select="criterium | criterium | criterium">
                                 <precondition typeCode="PRCN">
                                    <criterion classCode="OBS" moodCode="EVN.CRT">
                                       <!-- Template :: Zo nodig criterium -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                                    </criterion>
                                 </precondition>
                              </xsl:for-each>
                           </substanceAdministration>
                        </xsl:for-each>
                     </entryRelationship>
                  </xsl:for-each>
                  <xsl:for-each select="relatie_naar_afspraak_of_gebruik">
                     <entryRelationship typeCode="REFR">
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <substanceAdministration classCode="SBADM" moodCode="RQO">
                                 <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9086"/>
                                 <!-- Item(s) :: identificatie identificatie identificatie_medicatieafspraak identificatie identificatie-->
                                 <xsl:for-each select="identificatie | identificatie | identificatie_medicatieafspraak | identificatie | identificatie">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                                 <consumable xsi:nil="true"/>
                              </substanceAdministration>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <substanceAdministration classCode="SBADM" moodCode="RQO">
                                 <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9101"/>
                                 <!-- Item(s) :: identificatie_toedieningsafspraak identificatie_23288-->
                                 <xsl:for-each select="identificatie_toedieningsafspraak | identificatie_23288">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <code code="422037009" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                                 <consumable xsi:nil="true"/>
                              </substanceAdministration>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <substanceAdministration classCode="SBADM" moodCode="EVN">
                                 <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9176"/>
                                 <!-- Item(s) :: identificatie_23289-->
                                 <xsl:for-each select="identificatie_23289">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <code code="6" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
                                 <consumable xsi:nil="true"/>
                              </substanceAdministration>
                           </xsl:when>
                        </xsl:choose>
                     </entryRelationship>
                  </xsl:for-each>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Kopie-indicator -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9200_20180112101847"/>
                  </entryRelationship>
                  <xsl:for-each select="medicamenteuze_behandeling">
                     <entryRelationship typeCode="COMP" inversionInd="true">
                        <!-- Template :: MP MedBeh identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
                     </entryRelationship>
                  </xsl:for-each>
               </substanceAdministration>
            </xsl:for-each>
         </component>
         <component typeCode="COMP">
            <xsl:for-each select="verstrekkingsverzoek">
               <supply classCode="SPLY" moodCode="RQO">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9087"/>
                  <!-- Item(s) :: identificatie-->
                  <xsl:for-each select="identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <code code="3" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName="" codeSystemName=""/>
                  <!-- Item(s) :: aantal_herhalingen-->
                  <xsl:for-each select="aantal_herhalingen">
                     <xsl:call-template name="makeINT.NONNEGValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">repeatNumber</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="te_verstrekken_hoeveelheid">
                     <quantity value="">
                        <!-- Template :: DispenseQuantity unit and translation(s) -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9165_20170118000000"/>
                     </quantity>
                  </xsl:for-each>
                  <xsl:for-each select="verbruiksperiode">
                     <expectedUseTime>
                        <!-- Item(s) :: ingangsdatum-->
                        <xsl:for-each select="ingangsdatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">low</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: duur-->
                        <xsl:for-each select="duur">
                           <xsl:call-template name="makePQValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">width</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: einddatum-->
                        <xsl:for-each select="einddatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">high</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </expectedUseTime>
                  </xsl:for-each>
                  <xsl:for-each select="product | product | product | product | product_specificatie | product | te_verstrekken_geneesmiddel">
                     <product>
                        <!-- Template :: MP CDA Medication Information -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
                     </product>
                  </xsl:for-each>
                  <xsl:for-each select="beoogd_verstrekker">
                     <performer>
                        <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                           <assignedEntity>
                              <!-- Template :: MP CDA assigned organisatie -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                           </assignedEntity>
                        </xsl:for-each>
                     </performer>
                  </xsl:for-each>
                  <xsl:for-each select="datum | zorgverlener | zorgverlener | voorstel_datum | zorgverlener | registratiedatum | zorgverlener | afspraakdatum | afspraakdatum | auteur">
                     <author>
                        <!-- Template :: MP CDA Author Participation -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9066_20160615212337"/>
                     </author>
                  </xsl:for-each>
                  <participant typeCode="DST">
                     <!-- Template :: MP CDA afleverlocatie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9091_20160621153127"/>
                  </participant>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Aanvullende wens -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9093_20160623183534"/>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                     <!-- Template :: Toelichting -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
                  </entryRelationship>
                  <xsl:for-each select="relatie_naar_medicatieafspraak">
                     <entryRelationship typeCode="REFR">
                        <!-- Template :: MP Medicatieafspraak identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9086_20160621122009"/>
                     </entryRelationship>
                  </xsl:for-each>
                  <xsl:for-each select="medicamenteuze_behandeling">
                     <entryRelationship inversionInd="true" typeCode="COMP">
                        <!-- Template :: MP MedBeh identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
                     </entryRelationship>
                  </xsl:for-each>
               </supply>
            </xsl:for-each>
         </component>
         <component typeCode="COMP">
            <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
               <substanceAdministration classCode="SBADM" moodCode="RQO">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9152"/>
                  <!-- Item(s) :: identificatie-->
                  <xsl:for-each select="identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <code codeSystemName="" codeSystem="2.16.840.1.113883.6.96" code="422037009" displayName=""/>
                  <!-- Item(s) :: omschrijving-->
                  <xsl:for-each select="omschrijving">
                     <xsl:call-template name="makeEDValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">text</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: geannuleerd_indicator-->
                  <xsl:for-each select="geannuleerd_indicator">
                     <xsl:call-template name="makeCSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">statusCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: gebruiksperiode-->
                  <xsl:for-each select="gebruiksperiode">
                     <xsl:call-template name="makeIVL_TSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: toedieningsweg-->
                  <xsl:for-each select="toedieningsweg">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">routeCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <maxDoseQuantity/>
                  <xsl:for-each select="product | product | product | product | product_specificatie | product | geneesmiddel_bij_toedieningsafspraak">
                     <consumable>
                        <!-- Template :: MP CDA Medication Information -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
                     </consumable>
                  </xsl:for-each>
                  <xsl:for-each select="verstrekker">
                     <author>
                        <!-- Item(s) :: afspraakdatum-->
                        <xsl:for-each select="afspraakdatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">time</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                           <assignedAuthor>
                              <!-- Template :: MP CDA assigned organisatie -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                           </assignedAuthor>
                        </xsl:for-each>
                     </author>
                  </xsl:for-each>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Stoptype -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
                  </entryRelationship>
                  <entryRelationship typeCode="RSON">
                     <!-- Template :: Reden voor toedieningsafspraak -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9083_20160621100220"/>
                  </entryRelationship>
                  <entryRelationship typeCode="SPRT">
                     <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
                  </entryRelationship>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: MP CDA TA Aanvullende informatie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9175_20170522171022"/>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                     <!-- Template :: Toelichting -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
                  </entryRelationship>
                  <xsl:for-each select="doseerinstructie">
                     <entryRelationship typeCode="COMP">
                        <!-- Item(s) :: volgnummer-->
                        <xsl:for-each select="volgnummer">
                           <xsl:call-template name="makeINTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                           <substanceAdministration classCode="SBADM" moodCode="RQO">
                              <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                              <effectiveTime>
                                 <xsl:choose>
                                    <xsl:when test="doseerduur | doseerduur | doseerduur">
                                       <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                       <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">width</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="'TODO-X'">
                                       <high nullFlavor="NI"/>
                                    </xsl:when>
                                 </xsl:choose>
                              </effectiveTime>
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="interval | interval | interval">
                                    <xsl:for-each select="interval | interval | interval">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Interval -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime xsi:type="SXPR_TS" operator="A">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                       </comp>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime operator="A">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                       </comp>
                                       <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                          </comp>
                                       </xsl:for-each>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime>
                                       <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime operator="A">
                                       <xsl:if test="'TODO-X'">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Frequency -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                          </comp>
                                       </xsl:if>
                                       <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                          <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                             <comp>
                                                <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                                <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                             </comp>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </effectiveTime>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Nacht -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Middag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="dagdeel | dagdeel | dagdeel">
                                    <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                       <effectiveTime>
                                          <!-- Template :: HL7NL PIVL_TS Avond -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                       </effectiveTime>
                                    </xsl:for-each>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <effectiveTime operator="A">
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Nacht -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                          </comp>
                                       </xsl:for-each>
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                          </comp>
                                       </xsl:for-each>
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Middag -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                          </comp>
                                       </xsl:for-each>
                                       <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                          <comp>
                                             <!-- Template :: HL7NL PIVL_TS Avond -->
                                             <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                          </comp>
                                       </xsl:for-each>
                                    </effectiveTime>
                                 </xsl:when>
                              </xsl:choose>
                              <xsl:choose>
                                 <xsl:when test="'TODO-X-Include in choice'">
                                    <xsl:choose>
                                       <xsl:when test="'TODO-X'">
                                          <doseQuantity>
                                             <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                             <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                                <xsl:call-template name="makePQValue">
                                                   <xsl:with-param name="xsiType" select="''"/>
                                                   <xsl:with-param name="elemName">center</xsl:with-param>
                                                </xsl:call-template>
                                             </xsl:for-each>
                                          </doseQuantity>
                                       </xsl:when>
                                       <xsl:when test="'TODO-X'">
                                          <doseQuantity>
                                             <xsl:if test="min | min | min">
                                                <!-- Item(s) :: min min min-->
                                                <xsl:for-each select="min | min | min">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">low</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </xsl:if>
                                             <xsl:if test="max | max | max">
                                                <!-- Item(s) :: max max max-->
                                                <xsl:for-each select="max | max | max">
                                                   <xsl:call-template name="makePQValue">
                                                      <xsl:with-param name="xsiType" select="''"/>
                                                      <xsl:with-param name="elemName">high</xsl:with-param>
                                                   </xsl:call-template>
                                                </xsl:for-each>
                                             </xsl:if>
                                          </doseQuantity>
                                       </xsl:when>
                                    </xsl:choose>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X-Include in choice'">
                                    <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                                    <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                       <xsl:call-template name="makeIVL_PQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:when>
                              </xsl:choose>
                              <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                                 <maxDoseQuantity>
                                    <!-- Template :: maxDoseQuantity -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                                 </maxDoseQuantity>
                              </xsl:for-each>
                              <consumable xsi:nil="true"/>
                              <xsl:for-each select="criterium | criterium | criterium">
                                 <precondition typeCode="PRCN">
                                    <criterion classCode="OBS" moodCode="EVN.CRT">
                                       <!-- Template :: Zo nodig criterium -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                                    </criterion>
                                 </precondition>
                              </xsl:for-each>
                           </substanceAdministration>
                        </xsl:for-each>
                     </entryRelationship>
                  </xsl:for-each>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Kopie-indicator -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9200_20180112101847"/>
                  </entryRelationship>
                  <xsl:for-each select="relatie_naar_medicatieafspraak">
                     <entryRelationship typeCode="REFR">
                        <!-- Template :: MP Medicatieafspraak identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9086_20160621122009"/>
                     </entryRelationship>
                  </xsl:for-each>
                  <xsl:for-each select="medicamenteuze_behandeling">
                     <entryRelationship inversionInd="true" typeCode="COMP">
                        <!-- Template :: MP MedBeh identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
                     </entryRelationship>
                  </xsl:for-each>
               </substanceAdministration>
            </xsl:for-each>
         </component>
         <component typeCode="COMP">
            <xsl:for-each select="verstrekking">
               <supply classCode="SPLY" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9094"/>
                  <!-- Item(s) :: identificatie-->
                  <xsl:for-each select="identificatie">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <code code="373784005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
                  <!-- Item(s) :: datum-->
                  <xsl:for-each select="datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="verstrekte_hoeveelheid">
                     <quantity value="">
                        <!-- Template :: DispenseQuantity unit and translation(s) -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9165_20170118000000"/>
                     </quantity>
                  </xsl:for-each>
                  <!-- Item(s) :: verbruiksduur-->
                  <xsl:for-each select="verbruiksduur">
                     <xsl:call-template name="makeIVL_TSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">expectedUseTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="product | product | product | product | product_specificatie | product | verstrekt_geneesmiddel">
                     <product>
                        <!-- Template :: MP CDA Medication Information -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
                     </product>
                  </xsl:for-each>
                  <xsl:for-each select="verstrekker">
                     <performer>
                        <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                           <assignedEntity>
                              <!-- Template :: MP CDA assigned organisatie -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                           </assignedEntity>
                        </xsl:for-each>
                     </performer>
                  </xsl:for-each>
                  <participant typeCode="DST">
                     <!-- Template :: MP CDA afleverlocatie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9091_20160621153127"/>
                  </participant>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Aanschrijfdatum -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9095_20160623195047"/>
                  </entryRelationship>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: Distributievorm -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9097_20160623203415"/>
                  </entryRelationship>
                  <entryRelationship typeCode="COMP">
                     <!-- Template :: MP CDA VS Aanvullende informatie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9178_20170523091005"/>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                     <!-- Template :: Toelichting -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
                  </entryRelationship>
                  <xsl:for-each select="relatie_naar_verstrekkingsverzoek">
                     <entryRelationship typeCode="REFR">
                        <!-- Template :: MP Verstrekkingsverzoek identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9096_20160623201738"/>
                     </entryRelationship>
                  </xsl:for-each>
                  <xsl:for-each select="medicamenteuze_behandeling">
                     <entryRelationship inversionInd="true" typeCode="COMP">
                        <!-- Template :: MP MedBeh identificatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
                     </entryRelationship>
                  </xsl:for-each>
               </supply>
            </xsl:for-each>
         </component>
         <component typeCode="COMP">
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="">
               <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9154"/>
               <id/>
               <code code="6" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName="" codeSystemName=""/>
               <text/>
               <effectiveTime>
                  <low/>
                  <width value="" unit=""/>
                  <high value=""/>
               </effectiveTime>
               <routeCode displayName=""/>
               <xsl:for-each select="product | product | product | product | product_specificatie | product">
                  <consumable typeCode="CSM">
                     <!-- Template :: MP CDA Medication Information -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
                  </consumable>
               </xsl:for-each>
               <xsl:for-each select="auteur">
                  <author typeCode="AUT" contextControlCode="OP">
                     <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9187"/>
                     <!-- Item(s) :: registratiedatum voorstel_datum-->
                     <xsl:for-each select="registratiedatum | voorstel_datum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">time</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <xsl:choose>
                        <xsl:when test="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                           <xsl:for-each select="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                              <assignedAuthor classCode="ASSIGNED">
                                 <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
                                 <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                    <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                       <xsl:call-template name="makeII.NL.UZIValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                    <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                       <xsl:call-template name="makeII.NL.AGBValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                    <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                       <xsl:call-template name="makeIIValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                    <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                       <xsl:call-template name="makeIIValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
                                 <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
                                    <xsl:call-template name="makeCEValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">code</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                                 <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                                    <assignedPerson>
                                       <!-- Template :: Naam persoon -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                                    </assignedPerson>
                                 </xsl:for-each>
                                 <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
                                    <representedOrganization>
                                       <xsl:attribute name="classCode">ORG</xsl:attribute>
                                       <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                                       <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                          <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                             <xsl:call-template name="makeII.NL.URAValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">id</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                          <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                             <xsl:call-template name="makeII.NL.AGBValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">id</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                          <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                             <xsl:call-template name="makeIIValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">id</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                                       <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                                          <xsl:call-template name="makeONValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">name</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </representedOrganization>
                                 </xsl:for-each>
                              </assignedAuthor>
                           </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="auteur_is_patient | auteur_is_patient">
                           <xsl:for-each select="auteur_is_patient | auteur_is_patient">
                              <assignedAuthor>
                                 <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                                 <xsl:if test="'TODO-X'">
                                    <id/>
                                 </xsl:if>
                                 <xsl:if test="'TODO-X'">
                                    <id root="" extension=""/>
                                 </xsl:if>
                                 <xsl:if test="'TODO-X'">
                                    <id nullFlavor=""/>
                                 </xsl:if>
                                 <code code="ONESELF"/>
                              </assignedAuthor>
                           </xsl:for-each>
                        </xsl:when>
                     </xsl:choose>
                  </author>
               </xsl:for-each>
               <xsl:choose>
                  <xsl:when test="'TODO-X'">
                     <informant typeCode="INF" contextControlCode="OP">
                        <xsl:for-each select="zorgaanbieder | zorgaanbieder | specialisme | zorgverlener_naam">
                           <assignedEntity>
                              <!-- Template :: MP Gebruik Zorgverlener -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9167_20170516000000"/>
                           </assignedEntity>
                        </xsl:for-each>
                     </informant>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <informant>
                        <assignedEntity>
                           <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                           <xsl:if test="'TODO-X'">
                              <id/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id root="" extension=""/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id nullFlavor=""/>
                           </xsl:if>
                           <code code="ONESELF"/>
                        </assignedEntity>
                     </informant>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <informant typeCode="INF" contextControlCode="OP">
                        <xsl:for-each select="rol_of_functie | persoon">
                           <relatedEntity>
                              <!-- Template :: MP CDA RelatedEntity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9103_20160624141250"/>
                           </relatedEntity>
                        </xsl:for-each>
                     </informant>
                  </xsl:when>
               </xsl:choose>
               <entryRelationship typeCode="COMP">
                  <!-- Template :: Volgens afspraak indicator -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9117_20160710194752"/>
               </entryRelationship>
               <entryRelationship typeCode="COMP">
                  <!-- Template :: Stoptype -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
               </entryRelationship>
               <entryRelationship typeCode="SPRT">
                  <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
               </entryRelationship>
               <entryRelationship typeCode="RSON">
                  <!-- Template :: Reden voor medicatiegebruik -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9114_20160710170744"/>
               </entryRelationship>
               <entryRelationship typeCode="RSON">
                  <!-- Template :: Reden voor wijzigen/stoppen medicatiegebruik -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9115_20160710171719"/>
               </entryRelationship>
               <entryRelationship typeCode="SUBJ" inversionInd="true">
                  <!-- Template :: Toelichting -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
               </entryRelationship>
               <entryRelationship typeCode="COMP">
                  <sequenceNumber value=""/>
                  <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                     <substanceAdministration classCode="SBADM" moodCode="RQO">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                        <effectiveTime>
                           <xsl:choose>
                              <xsl:when test="doseerduur | doseerduur | doseerduur">
                                 <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                 <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">width</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <high nullFlavor="NI"/>
                              </xsl:when>
                           </xsl:choose>
                        </effectiveTime>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | interval | interval">
                              <xsl:for-each select="interval | interval | interval">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Interval -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime xsi:type="SXPR_TS" operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                 </comp>
                                 <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:if test="'TODO-X'">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </comp>
                                 </xsl:if>
                                 <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </comp>
                                    </xsl:for-each>
                                 </xsl:if>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Nacht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Middag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Avond -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Nacht -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Middag -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Avond -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                       <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">center</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </doseQuantity>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <xsl:if test="min | min | min">
                                          <!-- Item(s) :: min min min-->
                                          <xsl:for-each select="min | min | min">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="max | max | max">
                                          <!-- Item(s) :: max max max-->
                                          <xsl:for-each select="max | max | max">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </doseQuantity>
                                 </xsl:when>
                              </xsl:choose>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                              <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                           <maxDoseQuantity>
                              <!-- Template :: maxDoseQuantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                           </maxDoseQuantity>
                        </xsl:for-each>
                        <consumable xsi:nil="true"/>
                        <xsl:for-each select="criterium | criterium | criterium">
                           <precondition typeCode="PRCN">
                              <criterion classCode="OBS" moodCode="EVN.CRT">
                                 <!-- Template :: Zo nodig criterium -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                              </criterion>
                           </precondition>
                        </xsl:for-each>
                     </substanceAdministration>
                  </xsl:for-each>
               </entryRelationship>
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP MA Voorschrijver -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9166_20170516000000"/>
               </entryRelationship>
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Afspraak Identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.77.10.9120_20160624130542"/>
               </entryRelationship>
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Verstrekking identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9102_20160624133045"/>
               </entryRelationship>
               <xsl:for-each select="medicamenteuze_behandeling">
                  <entryRelationship inversionInd="true" typeCode="COMP">
                     <!-- Template :: MP MedBeh identificatie -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
                  </entryRelationship>
               </xsl:for-each>
            </substanceAdministration>
         </component>
      </organizer>
   </xsl:template>

   <!-- MP CDA Author NoCode -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9105_20160626131244">
      <templateId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9105"/>
      <time xmlns="urn:hl7-org:v3" value=""/>
      <assignedAuthor xmlns="urn:hl7-org:v3">
         <xsl:if test="'TODO-X'">
            <id root="2.16.528.1.1007.3.1"/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <id root="2.16.840.1.113883.2.4.6.1"/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <id root="2.16.528.1.1007.5.1"/>
         </xsl:if>
         <xsl:if test="'TODO-X'">
            <id nullFlavor="NI"/>
         </xsl:if>
         <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
            <assignedPerson>
               <!-- Template :: Naam persoon -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
            </assignedPerson>
         </xsl:for-each>
         <representedOrganization>
            <id/>
            <name/>
            <telecom/>
            <addr/>
         </representedOrganization>
      </assignedAuthor>
   </xsl:template>

   <!-- MP CDA Ingredient -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9106_20160626164013">
      <xsl:for-each select="ingredient | ingredient | ingredient | ingredient | ingredient">
         <pharm:ingredient xmlns:pharm="urn:ihe:pharm:medication" classCode="INGR">
            <xsl:for-each select="sterkte | sterkte | sterkte | sterkte | sterkte | hoeveelheid_product | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient">
               <pharm:quantity>
                  <!-- Template :: MP Ingredient quantity -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9071_20160618204153"/>
               </pharm:quantity>
            </xsl:for-each>
            <xsl:for-each select="ingredient_code | ingredient_code | ingredient_code | ingredient_code | ingredient_code">
               <pharm:ingredient classCode="MMAT" determinerCode="KIND">
                  <!-- Template :: MP CDA Material Code Ext -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9074_20160618205801"/>
               </pharm:ingredient>
            </xsl:for-each>
         </pharm:ingredient>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Ingredient quantity -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9107_20160626164521">
      <pharm:numerator xmlns:pharm="urn:ihe:pharm:medication" xsi:type="PQ" value="" unit=""/>
      <pharm:denominator xmlns:pharm="urn:ihe:pharm:medication" xsi:type="PQ" value="" unit=""/>
   </xsl:template>

   <!-- MP CDA Doseerduur -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9108_20160627165900">
      <comp xmlns="urn:hl7-org:v3">
         <low/>
         <width value="" unit=""/>
         <high value=""/>
      </comp>
   </xsl:template>

   <!-- MP CDA Medication Code -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9109_20160701133311">
      <!-- Item(s) :: product_code product_code product_code product_code product_code-->
      <xsl:for-each select="product_code | product_code | product_code | product_code | product_code">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Zorgverlener identificaties -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9111_20160707212337"/>

   <!-- MP CDA Zorgaanbieder identificaties -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9112_20160710120116"/>

   <!-- MP CDA Zorgverlener -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9113_20160710152506">
      <templateId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
      <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
      <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
         <assignedPerson xmlns="urn:hl7-org:v3">
            <!-- Template :: Naam persoon -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
         </assignedPerson>
      </xsl:for-each>
      <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
         <representedOrganization xmlns="urn:hl7-org:v3">
            <xsl:attribute name="classCode">ORG</xsl:attribute>
            <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.URAValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.AGBValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeIIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
            <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
               <xsl:call-template name="makeONValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">name</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </representedOrganization>
      </xsl:for-each>
   </xsl:template>

   <!-- Reden voor medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9114_20160710170744">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9114"/>
         <code code="6" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2"/>
         <!-- Item(s) :: reden_gebruik-->
         <xsl:for-each select="reden_gebruik">
            <xsl:call-template name="makeSTValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">text</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- Reden voor wijzigen/stoppen medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9115_20160710171719">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9115"/>
         <code code="7" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" displayName="" codeSystemName=""/>
         <!-- Item(s) :: reden_wijzigen_of_stoppen_gebruik-->
         <xsl:for-each select="reden_wijzigen_of_stoppen_gebruik">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- Volgens afspraak indicator -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9117_20160710194752">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9117"/>
         <code code="8" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" displayName=""/>
         <!-- Item(s) :: volgens_afspraak_indicator-->
         <xsl:for-each select="volgens_afspraak_indicator">
            <xsl:call-template name="makeBLValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- MP CDA recordTarget2 -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9119_20160710204856">
      <xsl:for-each select="patient">
         <recordTarget xmlns="urn:hl7-org:v3">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9119"/>
            <xsl:for-each select="contactgegevens | telefoonnummers | email_adressen | patient">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeIIValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adres | adresgegevens | adresgegevens">
                     <addr use="{adres_soort | adres_soort/(@code, @value)[1]}">
                        <xsl:if test="straat | straat">
                           <!-- Item(s) :: straat straat-->
                           <xsl:for-each select="straat | straat">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">streetName</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="huisnummer | huisnummer">
                           <!-- Item(s) :: huisnummer huisnummer-->
                           <xsl:for-each select="huisnummer | huisnummer">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="huisnummerletter | huisnummertoevoeging | huisnummerletter | huisnummertoevoeging">
                           <!-- Item(s) :: huisnummerletter huisnummertoevoeging huisnummerletter huisnummertoevoeging-->
                           <xsl:if test="huisnummerletter | huisnummertoevoeging | huisnummerletter | huisnummertoevoeging">
                              <buildingNumberSuffix>
                                 <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging | huisnummerletter | huisnummertoevoeging, ' ')"/>
                              </buildingNumberSuffix>
                           </xsl:if>
                        </xsl:if>
                        <xsl:if test="aanduiding_bij_nummer | aanduiding_bij_nummer">
                           <!-- Item(s) :: aanduiding_bij_nummer aanduiding_bij_nummer-->
                           <xsl:for-each select="aanduiding_bij_nummer | aanduiding_bij_nummer">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="postcode | postcode">
                           <!-- Item(s) :: postcode postcode-->
                           <xsl:for-each select="postcode | postcode">
                              <xsl:call-template name="makeSCValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">postalCode</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="gemeente | gemeente">
                           <!-- Item(s) :: gemeente gemeente-->
                           <xsl:for-each select="gemeente | gemeente">
                              <xsl:call-template name="makeSCValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">county</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="woonplaats | woonplaats">
                           <!-- Item(s) :: woonplaats woonplaats-->
                           <xsl:for-each select="woonplaats | woonplaats">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">city</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="land | land">
                           <!-- Item(s) :: land land-->
                           <xsl:for-each select="land | land">
                              <xsl:call-template name="makeSCValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">country</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <delimiter/>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <unitID/>
                        </xsl:if>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <!-- Item(s) :: telefoonnummers telefoonnummer telefoonnummer-->
                  <xsl:for-each select="telefoonnummer | telefoonnummer">
                     <xsl:call-template name="makeTELValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">telecom</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <telecom use=""/>
                  <!-- Item(s) :: email_adressen email_adres email_adres-->
                  <xsl:for-each select="email_adres | email_adres">
                     <xsl:call-template name="makeTELValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">telecom</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <patient>
                     <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                        <name use="{naamgebruik/(@code, @value)[1]}">
                           <xsl:if test="initialen | roepnaam | voornamen | initialen | voornamen | initialen | voornamen | roepnaam | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen">
                              <!-- Item(s) :: initialen roepnaam voornamen initialen voornamen initialen voornamen roepnaam initialen voornamen initialen voornamen initialen voornamen initialen voornamen initialen voornamen-->
                              <xsl:for-each select="initialen | roepnaam | voornamen | initialen | voornamen | initialen | voornamen | roepnaam | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen | initialen | voornamen">
                                 <xsl:call-template name="makeENXPValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">given</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels">
                              <!-- Item(s) :: voorvoegsels voorvoegsels_partner voorvoegsels voorvoegsels voorvoegsels voorvoegsels_partner voorvoegsels voorvoegsels voorvoegsels voorvoegsels-->
                              <xsl:for-each select="voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels_partner | voorvoegsels | voorvoegsels | voorvoegsels | voorvoegsels">
                                 <xsl:call-template name="makeENXPValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">prefix</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam">
                              <!-- Item(s) :: achternaam achternaam_partner achternaam achternaam achternaam achternaam_partner achternaam achternaam achternaam achternaam-->
                              <xsl:for-each select="achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam_partner | achternaam | achternaam | achternaam | achternaam">
                                 <xsl:call-template name="makeENXPValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">family</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <suffix qualifier=""/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <delimiter/>
                           </xsl:if>
                           <validTime/>
                        </name>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
      </xsl:for-each>
   </xsl:template>

   <!-- HL7NL PIVL_TS Frequency NoRange -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947">
      <xsl:attribute name="operator">A</xsl:attribute>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="xsi:type">hl7nl:PIVL_TS</xsl:attribute>
      <hl7nl:frequency xmlns:hl7nl="urn:hl7-nl:v3" xsi:type="hl7nl:RTO">
         <hl7nl:numerator xsi:type="hl7nl:INT" value="{vaste_waarde/(@code, @value)[1]}"/>
         <!-- Item(s) :: tijdseenheid-->
         <xsl:for-each select="tijdseenheid">
            <xsl:call-template name="makehl7nl:PQValue">
               <xsl:with-param name="elemName">denominator</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </hl7nl:frequency>
   </xsl:template>

   <!-- HL7NL PIVL_TS Aantal keer. -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612">
      <xsl:attribute name="operator">A</xsl:attribute>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="xsi:type">hl7nl:PIVL_TS</xsl:attribute>
      <hl7nl:period xmlns:hl7nl="urn:hl7-nl:v3" nullFlavor="NI"/>
      <hl7nl:count xmlns:hl7nl="urn:hl7-nl:v3" value=""/>
   </xsl:template>

   <!-- MP CDA Body Height -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9122_20160713172302">
      <xsl:for-each select="lichaamslengte">
         <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9122"/>
            <code code="8302-2" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
            <!-- Item(s) :: lengte_datum_tijd-->
            <xsl:for-each select="lengte_datum_tijd">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: lengte_waarde-->
            <xsl:for-each select="lengte_waarde">
               <xsl:call-template name="makePQValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">value</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </observation>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Body Weight -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9123_20160713212617">
      <xsl:for-each select="lichaamsgewicht">
         <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9123"/>
            <code code="3142-7" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
            <!-- Item(s) :: gewicht_datum_tijd-->
            <xsl:for-each select="gewicht_datum_tijd">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: gewicht_waarde-->
            <xsl:for-each select="gewicht_waarde">
               <xsl:call-template name="makePQValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">value</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </observation>
      </xsl:for-each>
   </xsl:template>

   <!-- MP HL7 Afhandeling Voorschrift Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9124_20160714130622">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9124"/>
         <code code="131" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" displayName="" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Toedieningsafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="verstrekking">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Verstrekking -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9094_20160623194106"/>
            </component>
         </xsl:for-each>
      </organizer>
   </xsl:template>

   <!-- MP HL7 Sturen gebruik Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9125_20160714131339">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9125"/>
         <code code="138" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" displayName="" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <component typeCode="COMP">
            <!-- Template :: MP CDA Medicatiegebruik -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9154_20160726181533"/>
         </component>
      </organizer>
   </xsl:template>

   <!-- MP HL7 Voorschrift Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9126_20160714133119">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9126"/>
         <code code="95" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="verstrekkingsverzoek">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Verstrekkingsverzoek -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9087_20160621125157"/>
            </component>
         </xsl:for-each>
      </organizer>
   </xsl:template>

   <!-- MP HL7 Voorstel medicatieafspraak Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9127_20160714134030">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9127"/>
         <code code="107" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <xsl:for-each select="medicatieafspraak | gebruiksinstructie | voorstelgegevens">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Voorstel Medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9153_20160726162345"/>
            </component>
         </xsl:for-each>
      </organizer>
   </xsl:template>

   <!-- MP HL7 Voorstel Verstrekkingsverzoek Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9130_20160714201445">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9130"/>
         <code code="104" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Medicatieafspraak voorstel vv -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9185_20170818000000"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="verstrekkingsverzoek | voorstelgegevens">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Voorstel Verstrekkingsverzoek -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9131_20160714202241"/>
            </component>
         </xsl:for-each>
      </organizer>
   </xsl:template>

   <!-- MP CDA Voorstel Verstrekkingsverzoek -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9131_20160714202241">
      <xsl:for-each select="verstrekkingsverzoek | voorstelgegevens">
         <supply xmlns="urn:hl7-org:v3" classCode="SPLY" moodCode="PRP">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9131"/>
            <code code="3" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName="" codeSystemName=""/>
            <!-- Item(s) :: aantal_herhalingen-->
            <xsl:for-each select="aantal_herhalingen">
               <xsl:call-template name="makeINT.NONNEGValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">repeatNumber</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="te_verstrekken_hoeveelheid">
               <quantity value="">
                  <!-- Template :: DispenseQuantity unit and translation(s) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9165_20170118000000"/>
               </quantity>
            </xsl:for-each>
            <xsl:for-each select="verbruiksperiode">
               <expectedUseTime>
                  <!-- Item(s) :: ingangsdatum-->
                  <xsl:for-each select="ingangsdatum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">low</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <width value="" unit=""/>
                  <!-- Item(s) :: einddatum-->
                  <xsl:for-each select="einddatum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">high</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </expectedUseTime>
            </xsl:for-each>
            <xsl:for-each select="product | product | te_verstrekken_geneesmiddel">
               <product>
                  <!-- Template :: MP CDA Medication Information (Proposal/Statement) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9163_20161113135119"/>
               </product>
            </xsl:for-each>
            <xsl:for-each select="beoogd_verstrekker">
               <performer>
                  <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                     <assignedEntity>
                        <!-- Template :: MP CDA assigned organisatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                     </assignedEntity>
                  </xsl:for-each>
               </performer>
            </xsl:for-each>
            <xsl:for-each select="auteur">
               <author typeCode="AUT" contextControlCode="OP">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9187"/>
                  <!-- Item(s) :: registratiedatum voorstel_datum-->
                  <xsl:for-each select="registratiedatum | voorstel_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:choose>
                     <xsl:when test="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                        <xsl:for-each select="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                           <assignedAuthor classCode="ASSIGNED">
                              <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.UZIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.AGBValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
                              <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
                                 <xsl:call-template name="makeCEValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">code</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                                 <assignedPerson>
                                    <!-- Template :: Naam persoon -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                                 </assignedPerson>
                              </xsl:for-each>
                              <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
                                 <representedOrganization>
                                    <xsl:attribute name="classCode">ORG</xsl:attribute>
                                    <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeII.NL.URAValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeII.NL.AGBValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeIIValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                                    <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                                       <xsl:call-template name="makeONValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">name</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </representedOrganization>
                              </xsl:for-each>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="auteur_is_patient | auteur_is_patient">
                        <xsl:for-each select="auteur_is_patient | auteur_is_patient">
                           <assignedAuthor>
                              <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                              <xsl:if test="'TODO-X'">
                                 <id/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id root="" extension=""/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id nullFlavor=""/>
                              </xsl:if>
                              <code code="ONESELF"/>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
               </author>
            </xsl:for-each>
            <participant typeCode="DST">
               <!-- Template :: MP CDA afleverlocatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9091_20160621153127"/>
            </participant>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting bij voorstelgegevens -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9183_20170818085324"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Aanvullende wens -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9093_20160623183534"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="relatie_naar_medicatieafspraak">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Medicatieafspraak identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9086_20160621122009"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </supply>
      </xsl:for-each>
   </xsl:template>

   <!-- MP HL7 Medicatieoverzicht Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9132_20160714203640">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9132"/>
         <code code="129" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <effectiveTime/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author typeCode="AUT" contextControlCode="OP">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9171"/>
            <time/>
            <assignedAuthor classCode="ASSIGNED">
               <id/>
               <xsl:for-each select="organisatie_naam">
                  <representedOrganization>
                     <!-- Template :: MP CDA Organization Medicatieoverzicht -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457"/>
                  </representedOrganization>
               </xsl:for-each>
            </assignedAuthor>
         </author>
         <xsl:for-each select="verificatie_patient">
            <participant typeCode="VRF">
               <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9179"/>
               <!-- Item(s) :: verificatie_datum-->
               <xsl:for-each select="verificatie_datum">
                  <xsl:call-template name="makeTSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">time</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:for-each select="geverifieerd_met_patientq">
                  <participantRole classCode="PAT"/>
               </xsl:for-each>
            </participant>
         </xsl:for-each>
         <xsl:for-each select="verificatie_zorgverlener">
            <participant typeCode="VRF">
               <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9180"/>
               <!-- Item(s) :: verificatie_datum-->
               <xsl:for-each select="verificatie_datum">
                  <xsl:call-template name="makeTSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">time</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <participantRole classCode="ASSIGNED"/>
            </participant>
         </xsl:for-each>
         <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Toedieningsafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
            </component>
         </xsl:for-each>
         <component typeCode="COMP">
            <!-- Template :: MP CDA Medicatiegebruik -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9154_20160726181533"/>
         </component>
      </organizer>
   </xsl:template>

   <!-- MP CDA Medicatiegegevens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9133_20160714223430">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9133"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Medicatieafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekkingsverzoek">
                        <entry>
                           <!-- Template :: MP CDA Verstrekkingsverzoek -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9087_20160621125157"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Toedieningsafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekking">
                        <entry>
                           <!-- Template :: MP CDA Verstrekking -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9094_20160623194106"/>
                        </entry>
                     </xsl:for-each>
                     <entry>
                        <!-- Template :: MP CDA Medicatiegebruik -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9154_20160726181533"/>
                     </entry>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Medicatiegegevens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9134_20160714225817"/>

   <!-- MP CDA Part2Reuse -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9135_20160714231654">
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3" code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
      <title xmlns="urn:hl7-org:v3"/>
      <!-- Item(s) :: document_datum-->
      <xsl:for-each select="document_datum">
         <xsl:call-template name="makeTS.DATETIME.MINValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <confidentialityCode xmlns="urn:hl7-org:v3"/>
      <languageCode xmlns="urn:hl7-org:v3"/>
      <author xmlns="urn:hl7-org:v3">
         <!-- Template :: CDA author -->
         <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
      </author>
      <custodian xmlns="urn:hl7-org:v3">
         <!-- Template :: MP CDA custodian -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
      </custodian>
      <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
         <authenticator xmlns="urn:hl7-org:v3">
            <!-- Template :: MP CDA Authenticator -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
         </authenticator>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Afhandeling voorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9136_20160715104843">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9136"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Toedieningsafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekking">
                        <entry>
                           <!-- Template :: MP CDA Verstrekking -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9094_20160623194106"/>
                        </entry>
                     </xsl:for-each>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Afhandeling Voorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9137_20160715105113"/>

   <!-- MP CDA Sturen Gebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9138_20160715111413">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9138"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <entry>
                        <!-- Template :: MP CDA Medicatiegebruik -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9154_20160726181533"/>
                     </entry>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9139_20160715112140"/>

   <!-- MP CDA Voorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9140_20160715112612">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9140"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Medicatieafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekkingsverzoek">
                        <entry>
                           <!-- Template :: MP CDA Verstrekkingsverzoek -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9087_20160621125157"/>
                        </entry>
                     </xsl:for-each>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Voorschrift -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9141_20160715112732"/>

   <!-- MP CDA Doc Voorstel medicatieafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9142_20160715113311">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9142"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie | voorstelgegevens">
                        <entry>
                           <!-- Template :: MP CDA Voorstel Medicatieafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9153_20160726162345"/>
                        </entry>
                     </xsl:for-each>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Voorstel Medicatieafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9143_20160715113439"/>

   <!-- MP CDA Doc Voorstel verstrekkingsverzoek -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9144_20160715113847">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9144"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <entry/>
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Medicatieafspraak voorstel vv -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9185_20170818000000"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekkingsverzoek | voorstelgegevens">
                        <entry>
                           <!-- Template :: MP CDA Voorstel Verstrekkingsverzoek -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9131_20160714202241"/>
                        </entry>
                     </xsl:for-each>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Voorstel Verstrekkingsverzoek -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9145_20160715114041"/>

   <!-- MP CDA Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9146_20160715131001">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9146"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <effectiveTime/>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author typeCode="AUT" contextControlCode="OP">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9171"/>
            <time/>
            <assignedAuthor classCode="ASSIGNED">
               <id/>
               <xsl:for-each select="organisatie_naam">
                  <representedOrganization>
                     <!-- Template :: MP CDA Organization Medicatieoverzicht -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457"/>
                  </representedOrganization>
               </xsl:for-each>
            </assignedAuthor>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient">
            <participant typeCode="VRF">
               <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9173"/>
               <!-- Item(s) :: verificatie_datum-->
               <xsl:for-each select="verificatie_datum">
                  <xsl:call-template name="makeTSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">time</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:for-each select="geverifieerd_met_patientq">
                  <associatedEntity classCode="PAT"/>
               </xsl:for-each>
            </participant>
         </xsl:for-each>
         <xsl:for-each select="verificatie_zorgverlener">
            <participant typeCode="VRF">
               <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9174"/>
               <!-- Item(s) :: verificatie_datum-->
               <xsl:for-each select="verificatie_datum">
                  <xsl:call-template name="makeTSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">time</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:for-each select="geverifieerd_met_zorgverlenerq | geverifieerd_met_zorgverlenerq">
                  <associatedEntity classCode="ASSIGNED"/>
               </xsl:for-each>
            </participant>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Medicatieafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Toedieningsafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
                        </entry>
                     </xsl:for-each>
                     <entry>
                        <!-- Template :: MP CDA Medicatiegebruik -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9154_20160726181533"/>
                     </entry>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- Basis Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9147_20160715131140"/>

   <!-- MP CDA Medicatieafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413">
      <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9148"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code code="16076005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
            <!-- Item(s) :: omschrijving-->
            <xsl:for-each select="omschrijving">
               <xsl:call-template name="makeEDValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">text</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: geannuleerd_indicator-->
            <xsl:for-each select="geannuleerd_indicator">
               <xsl:call-template name="makeCSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">statusCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: gebruiksperiode-->
            <xsl:for-each select="gebruiksperiode">
               <xsl:call-template name="makeIVL_TSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: toedieningsweg-->
            <xsl:for-each select="toedieningsweg">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">routeCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="product | product | product | product | product_specificatie | product | afgesproken_geneesmiddel">
               <consumable>
                  <!-- Template :: MP CDA Medication Information -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
               </consumable>
            </xsl:for-each>
            <xsl:for-each select="datum | zorgverlener | zorgverlener | voorstel_datum | zorgverlener | registratiedatum | zorgverlener | afspraakdatum | afspraakdatum | voorschrijver">
               <author>
                  <!-- Template :: MP CDA Author Participation -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9066_20160615212337"/>
               </author>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Stoptype -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
            </entryRelationship>
            <entryRelationship typeCode="RSON">
               <!-- Template :: Reden voor medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9068_20160617150015"/>
            </entryRelationship>
            <xsl:for-each select="reden_van_voorschrijven | probleem">
               <entryRelationship typeCode="RSON">
                  <!-- Template :: Reden van voorschrijven -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9160_20161109134526"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="SPRT">
               <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
            </entryRelationship>
            <xsl:for-each select="lichaamslengte">
               <entryRelationship typeCode="COMP">
                  <!-- Template :: MP CDA Body Height -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9122_20160713172302"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="lichaamsgewicht">
               <entryRelationship typeCode="COMP">
                  <!-- Template :: MP CDA Body Weight -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9123_20160713212617"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: MP CDA MA Aanvullende informatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9177_20170523084315"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="doseerinstructie">
               <entryRelationship typeCode="COMP">
                  <!-- Item(s) :: volgnummer-->
                  <xsl:for-each select="volgnummer">
                     <xsl:call-template name="makeINTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                     <substanceAdministration classCode="SBADM" moodCode="RQO">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                        <effectiveTime>
                           <xsl:choose>
                              <xsl:when test="doseerduur | doseerduur | doseerduur">
                                 <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                 <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">width</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <high nullFlavor="NI"/>
                              </xsl:when>
                           </xsl:choose>
                        </effectiveTime>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | interval | interval">
                              <xsl:for-each select="interval | interval | interval">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Interval -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime xsi:type="SXPR_TS" operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                 </comp>
                                 <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:if test="'TODO-X'">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </comp>
                                 </xsl:if>
                                 <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </comp>
                                    </xsl:for-each>
                                 </xsl:if>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Nacht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Middag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Avond -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Nacht -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Middag -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Avond -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                       <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">center</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </doseQuantity>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <xsl:if test="min | min | min">
                                          <!-- Item(s) :: min min min-->
                                          <xsl:for-each select="min | min | min">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="max | max | max">
                                          <!-- Item(s) :: max max max-->
                                          <xsl:for-each select="max | max | max">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </doseQuantity>
                                 </xsl:when>
                              </xsl:choose>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                              <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                           <maxDoseQuantity>
                              <!-- Template :: maxDoseQuantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                           </maxDoseQuantity>
                        </xsl:for-each>
                        <consumable xsi:nil="true"/>
                        <xsl:for-each select="criterium | criterium | criterium">
                           <precondition typeCode="PRCN">
                              <criterion classCode="OBS" moodCode="EVN.CRT">
                                 <!-- Template :: Zo nodig criterium -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                              </criterion>
                           </precondition>
                        </xsl:for-each>
                     </substanceAdministration>
                  </xsl:for-each>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="relatie_naar_afspraak_of_gebruik">
               <entryRelationship typeCode="REFR">
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="RQO">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9086"/>
                           <!-- Item(s) :: identificatie identificatie identificatie_medicatieafspraak identificatie identificatie-->
                           <xsl:for-each select="identificatie | identificatie | identificatie_medicatieafspraak | identificatie | identificatie">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="RQO">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9101"/>
                           <!-- Item(s) :: identificatie_toedieningsafspraak identificatie_23288-->
                           <xsl:for-each select="identificatie_toedieningsafspraak | identificatie_23288">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="422037009" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="EVN">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9176"/>
                           <!-- Item(s) :: identificatie_23289-->
                           <xsl:for-each select="identificatie_23289">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="6" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                  </xsl:choose>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Kopie-indicator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9200_20180112101847"/>
            </entryRelationship>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship typeCode="COMP" inversionInd="true">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Dosering -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9149_20160725134340">
      <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
            <effectiveTime>
               <xsl:choose>
                  <xsl:when test="doseerduur | doseerduur | doseerduur">
                     <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                     <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                        <xsl:call-template name="makePQValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">width</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="'TODO-X'">
                     <high nullFlavor="NI"/>
                  </xsl:when>
               </xsl:choose>
            </effectiveTime>
            <xsl:choose>
               <xsl:when test="'TODO-X'">
                  <effectiveTime>
                     <!-- Template :: HL7NL PIVL_TS Frequency -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="interval | interval | interval">
                  <xsl:for-each select="interval | interval | interval">
                     <effectiveTime>
                        <!-- Template :: HL7NL PIVL_TS Interval -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime>
                     <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime>
                     <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime xsi:type="SXPR_TS" operator="A">
                     <comp>
                        <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                     </comp>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime operator="A">
                     <comp>
                        <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                     </comp>
                     <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                        <comp>
                           <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                        </comp>
                     </xsl:for-each>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime>
                     <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                  <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                     <effectiveTime>
                        <!-- Template :: HL7NL PIVL_TS Weekdag -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime operator="A">
                     <xsl:if test="'TODO-X'">
                        <comp>
                           <!-- Template :: HL7NL PIVL_TS Frequency -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                        </comp>
                     </xsl:if>
                     <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                        <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                           <comp>
                              <!-- Template :: HL7NL PIVL_TS Weekdag -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                           </comp>
                        </xsl:for-each>
                     </xsl:if>
                  </effectiveTime>
               </xsl:when>
               <xsl:when test="dagdeel | dagdeel | dagdeel">
                  <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                     <effectiveTime>
                        <!-- Template :: HL7NL PIVL_TS Nacht -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="dagdeel | dagdeel | dagdeel">
                  <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                     <effectiveTime>
                        <!-- Template :: HL7NL PIVL_TS Ochtend -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="dagdeel | dagdeel | dagdeel">
                  <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                     <effectiveTime>
                        <!-- Template :: HL7NL PIVL_TS Middag -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="dagdeel | dagdeel | dagdeel">
                  <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                     <effectiveTime>
                        <!-- Template :: HL7NL PIVL_TS Avond -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                     </effectiveTime>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <effectiveTime operator="A">
                     <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                        <comp>
                           <!-- Template :: HL7NL PIVL_TS Nacht -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                        </comp>
                     </xsl:for-each>
                     <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                        <comp>
                           <!-- Template :: HL7NL PIVL_TS Ochtend -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                        </comp>
                     </xsl:for-each>
                     <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                        <comp>
                           <!-- Template :: HL7NL PIVL_TS Middag -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                        </comp>
                     </xsl:for-each>
                     <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                        <comp>
                           <!-- Template :: HL7NL PIVL_TS Avond -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                        </comp>
                     </xsl:for-each>
                  </effectiveTime>
               </xsl:when>
            </xsl:choose>
            <xsl:choose>
               <xsl:when test="'TODO-X-Include in choice'">
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <doseQuantity>
                           <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                           <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                              <xsl:call-template name="makePQValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">center</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </doseQuantity>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <doseQuantity>
                           <xsl:if test="min | min | min">
                              <!-- Item(s) :: min min min-->
                              <xsl:for-each select="min | min | min">
                                 <xsl:call-template name="makePQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">low</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="max | max | max">
                              <!-- Item(s) :: max max max-->
                              <xsl:for-each select="max | max | max">
                                 <xsl:call-template name="makePQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">high</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                        </doseQuantity>
                     </xsl:when>
                  </xsl:choose>
               </xsl:when>
               <xsl:when test="'TODO-X-Include in choice'">
                  <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                  <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                     <xsl:call-template name="makeIVL_PQValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </xsl:when>
            </xsl:choose>
            <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
               <maxDoseQuantity>
                  <!-- Template :: maxDoseQuantity -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
               </maxDoseQuantity>
            </xsl:for-each>
            <consumable xsi:nil="true"/>
            <xsl:for-each select="criterium | criterium | criterium">
               <precondition typeCode="PRCN">
                  <criterion classCode="OBS" moodCode="EVN.CRT">
                     <!-- Template :: Zo nodig criterium -->
                     <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                  </criterion>
               </precondition>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Toedieningssnelheid -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9150_20160726150449">
      <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
      <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
         <xsl:call-template name="makeIVL_PQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- Doseerduur -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9151_20160726153544"/>

   <!-- MP CDA Toedieningsafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318">
      <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9152"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code codeSystemName="" codeSystem="2.16.840.1.113883.6.96" code="422037009" displayName=""/>
            <!-- Item(s) :: omschrijving-->
            <xsl:for-each select="omschrijving">
               <xsl:call-template name="makeEDValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">text</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: geannuleerd_indicator-->
            <xsl:for-each select="geannuleerd_indicator">
               <xsl:call-template name="makeCSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">statusCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: gebruiksperiode-->
            <xsl:for-each select="gebruiksperiode">
               <xsl:call-template name="makeIVL_TSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: toedieningsweg-->
            <xsl:for-each select="toedieningsweg">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">routeCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <maxDoseQuantity/>
            <xsl:for-each select="product | product | product | product | product_specificatie | product | geneesmiddel_bij_toedieningsafspraak">
               <consumable>
                  <!-- Template :: MP CDA Medication Information -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
               </consumable>
            </xsl:for-each>
            <xsl:for-each select="verstrekker">
               <author>
                  <!-- Item(s) :: afspraakdatum-->
                  <xsl:for-each select="afspraakdatum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                     <assignedAuthor>
                        <!-- Template :: MP CDA assigned organisatie -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9088_20160621133312"/>
                     </assignedAuthor>
                  </xsl:for-each>
               </author>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Stoptype -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
            </entryRelationship>
            <entryRelationship typeCode="RSON">
               <!-- Template :: Reden voor toedieningsafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9083_20160621100220"/>
            </entryRelationship>
            <entryRelationship typeCode="SPRT">
               <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
            </entryRelationship>
            <entryRelationship typeCode="COMP">
               <!-- Template :: MP CDA TA Aanvullende informatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9175_20170522171022"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="doseerinstructie">
               <entryRelationship typeCode="COMP">
                  <!-- Item(s) :: volgnummer-->
                  <xsl:for-each select="volgnummer">
                     <xsl:call-template name="makeINTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                     <substanceAdministration classCode="SBADM" moodCode="RQO">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                        <effectiveTime>
                           <xsl:choose>
                              <xsl:when test="doseerduur | doseerduur | doseerduur">
                                 <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                 <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">width</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <high nullFlavor="NI"/>
                              </xsl:when>
                           </xsl:choose>
                        </effectiveTime>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | interval | interval">
                              <xsl:for-each select="interval | interval | interval">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Interval -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime xsi:type="SXPR_TS" operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                 </comp>
                                 <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:if test="'TODO-X'">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </comp>
                                 </xsl:if>
                                 <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </comp>
                                    </xsl:for-each>
                                 </xsl:if>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Nacht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Middag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Avond -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Nacht -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Middag -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Avond -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                       <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">center</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </doseQuantity>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <xsl:if test="min | min | min">
                                          <!-- Item(s) :: min min min-->
                                          <xsl:for-each select="min | min | min">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="max | max | max">
                                          <!-- Item(s) :: max max max-->
                                          <xsl:for-each select="max | max | max">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </doseQuantity>
                                 </xsl:when>
                              </xsl:choose>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                              <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                           <maxDoseQuantity>
                              <!-- Template :: maxDoseQuantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                           </maxDoseQuantity>
                        </xsl:for-each>
                        <consumable xsi:nil="true"/>
                        <xsl:for-each select="criterium | criterium | criterium">
                           <precondition typeCode="PRCN">
                              <criterion classCode="OBS" moodCode="EVN.CRT">
                                 <!-- Template :: Zo nodig criterium -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                              </criterion>
                           </precondition>
                        </xsl:for-each>
                     </substanceAdministration>
                  </xsl:for-each>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Kopie-indicator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9200_20180112101847"/>
            </entryRelationship>
            <xsl:for-each select="relatie_naar_medicatieafspraak">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Medicatieafspraak identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9086_20160621122009"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Voorstel Medicatieafspraak -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9153_20160726162345">
      <xsl:for-each select="medicatieafspraak | gebruiksinstructie | voorstelgegevens">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="PRP">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9153"/>
            <code code="16076005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
            <!-- Item(s) :: omschrijving-->
            <xsl:for-each select="omschrijving">
               <xsl:call-template name="makeEDValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">text</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: gebruiksperiode-->
            <xsl:for-each select="gebruiksperiode">
               <xsl:call-template name="makeIVL_TSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: toedieningsweg-->
            <xsl:for-each select="toedieningsweg">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">routeCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="product | product | afgesproken_geneesmiddel">
               <consumable>
                  <!-- Template :: MP CDA Medication Information (Proposal/Statement) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9163_20161113135119"/>
               </consumable>
            </xsl:for-each>
            <xsl:for-each select="auteur">
               <author typeCode="AUT" contextControlCode="OP">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9187"/>
                  <!-- Item(s) :: registratiedatum voorstel_datum-->
                  <xsl:for-each select="registratiedatum | voorstel_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:choose>
                     <xsl:when test="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                        <xsl:for-each select="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                           <assignedAuthor classCode="ASSIGNED">
                              <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.UZIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.AGBValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
                              <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
                                 <xsl:call-template name="makeCEValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">code</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                                 <assignedPerson>
                                    <!-- Template :: Naam persoon -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                                 </assignedPerson>
                              </xsl:for-each>
                              <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
                                 <representedOrganization>
                                    <xsl:attribute name="classCode">ORG</xsl:attribute>
                                    <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeII.NL.URAValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeII.NL.AGBValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeIIValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                                    <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                                       <xsl:call-template name="makeONValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">name</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </representedOrganization>
                              </xsl:for-each>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="auteur_is_patient | auteur_is_patient">
                        <xsl:for-each select="auteur_is_patient | auteur_is_patient">
                           <assignedAuthor>
                              <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                              <xsl:if test="'TODO-X'">
                                 <id/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id root="" extension=""/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id nullFlavor=""/>
                              </xsl:if>
                              <code code="ONESELF"/>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
               </author>
            </xsl:for-each>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting bij voorstelgegevens -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9183_20170818085324"/>
            </entryRelationship>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Stoptype -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
            </entryRelationship>
            <entryRelationship typeCode="RSON">
               <!-- Template :: Reden voor medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9068_20160617150015"/>
            </entryRelationship>
            <xsl:for-each select="reden_van_voorschrijven | probleem">
               <entryRelationship typeCode="RSON">
                  <!-- Template :: Reden van voorschrijven -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9160_20161109134526"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="SPRT">
               <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
            </entryRelationship>
            <xsl:for-each select="lichaamslengte">
               <entryRelationship typeCode="COMP">
                  <!-- Template :: MP CDA Body Height -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9122_20160713172302"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="lichaamsgewicht">
               <entryRelationship typeCode="COMP">
                  <!-- Template :: MP CDA Body Weight -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9123_20160713212617"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: MP CDA MA Aanvullende informatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9177_20170523084315"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="doseerinstructie">
               <entryRelationship typeCode="COMP">
                  <!-- Item(s) :: volgnummer-->
                  <xsl:for-each select="volgnummer">
                     <xsl:call-template name="makeINTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                     <substanceAdministration classCode="SBADM" moodCode="RQO">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                        <effectiveTime>
                           <xsl:choose>
                              <xsl:when test="doseerduur | doseerduur | doseerduur">
                                 <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                 <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">width</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <high nullFlavor="NI"/>
                              </xsl:when>
                           </xsl:choose>
                        </effectiveTime>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | interval | interval">
                              <xsl:for-each select="interval | interval | interval">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Interval -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime xsi:type="SXPR_TS" operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                 </comp>
                                 <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:if test="'TODO-X'">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </comp>
                                 </xsl:if>
                                 <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </comp>
                                    </xsl:for-each>
                                 </xsl:if>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Nacht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Middag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Avond -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Nacht -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Middag -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Avond -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                       <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">center</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </doseQuantity>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <xsl:if test="min | min | min">
                                          <!-- Item(s) :: min min min-->
                                          <xsl:for-each select="min | min | min">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="max | max | max">
                                          <!-- Item(s) :: max max max-->
                                          <xsl:for-each select="max | max | max">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </doseQuantity>
                                 </xsl:when>
                              </xsl:choose>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                              <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                           <maxDoseQuantity>
                              <!-- Template :: maxDoseQuantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                           </maxDoseQuantity>
                        </xsl:for-each>
                        <consumable xsi:nil="true"/>
                        <xsl:for-each select="criterium | criterium | criterium">
                           <precondition typeCode="PRCN">
                              <criterion classCode="OBS" moodCode="EVN.CRT">
                                 <!-- Template :: Zo nodig criterium -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                              </criterion>
                           </precondition>
                        </xsl:for-each>
                     </substanceAdministration>
                  </xsl:for-each>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="relatie_naar_afspraak_of_gebruik">
               <entryRelationship typeCode="REFR">
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="RQO">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9086"/>
                           <!-- Item(s) :: identificatie identificatie identificatie_medicatieafspraak identificatie identificatie-->
                           <xsl:for-each select="identificatie | identificatie | identificatie_medicatieafspraak | identificatie | identificatie">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="RQO">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9101"/>
                           <!-- Item(s) :: identificatie_toedieningsafspraak identificatie_23288-->
                           <xsl:for-each select="identificatie_toedieningsafspraak | identificatie_23288">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="422037009" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="EVN">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9176"/>
                           <!-- Item(s) :: identificatie_23289-->
                           <xsl:for-each select="identificatie_23289">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="6" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                  </xsl:choose>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9154_20160726181533">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN" negationInd="">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9154"/>
         <id/>
         <code code="6" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName="" codeSystemName=""/>
         <text/>
         <effectiveTime>
            <low/>
            <width value="" unit=""/>
            <high value=""/>
         </effectiveTime>
         <routeCode displayName=""/>
         <xsl:for-each select="product | product | product | product | product_specificatie | product">
            <consumable typeCode="CSM">
               <!-- Template :: MP CDA Medication Information -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9070_20160618193427"/>
            </consumable>
         </xsl:for-each>
         <xsl:for-each select="auteur">
            <author typeCode="AUT" contextControlCode="OP">
               <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9187"/>
               <!-- Item(s) :: registratiedatum voorstel_datum-->
               <xsl:for-each select="registratiedatum | voorstel_datum">
                  <xsl:call-template name="makeTSValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">time</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:choose>
                  <xsl:when test="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                     <xsl:for-each select="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                        <assignedAuthor classCode="ASSIGNED">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
                           <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                              <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <xsl:call-template name="makeII.NL.UZIValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">id</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                              <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <xsl:call-template name="makeII.NL.AGBValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">id</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                              <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <xsl:call-template name="makeIIValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">id</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                              <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <xsl:call-template name="makeIIValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">id</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:if>
                           <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
                           <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
                              <xsl:call-template name="makeCEValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">code</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                              <assignedPerson>
                                 <!-- Template :: Naam persoon -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                              </assignedPerson>
                           </xsl:for-each>
                           <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
                              <representedOrganization>
                                 <xsl:attribute name="classCode">ORG</xsl:attribute>
                                 <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                                 <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                    <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                    <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <xsl:call-template name="makeII.NL.URAValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                    <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                    <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <xsl:call-template name="makeII.NL.AGBValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                    <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                    <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <xsl:call-template name="makeIIValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">id</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                                 <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                                    <xsl:call-template name="makeONValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">name</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </representedOrganization>
                           </xsl:for-each>
                        </assignedAuthor>
                     </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="auteur_is_patient | auteur_is_patient">
                     <xsl:for-each select="auteur_is_patient | auteur_is_patient">
                        <assignedAuthor>
                           <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                           <xsl:if test="'TODO-X'">
                              <id/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id root="" extension=""/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id nullFlavor=""/>
                           </xsl:if>
                           <code code="ONESELF"/>
                        </assignedAuthor>
                     </xsl:for-each>
                  </xsl:when>
               </xsl:choose>
            </author>
         </xsl:for-each>
         <xsl:choose>
            <xsl:when test="'TODO-X'">
               <informant typeCode="INF" contextControlCode="OP">
                  <xsl:for-each select="zorgaanbieder | zorgaanbieder | specialisme | zorgverlener_naam">
                     <assignedEntity>
                        <!-- Template :: MP Gebruik Zorgverlener -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9167_20170516000000"/>
                     </assignedEntity>
                  </xsl:for-each>
               </informant>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <informant>
                  <assignedEntity>
                     <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                     <xsl:if test="'TODO-X'">
                        <id/>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <id root="" extension=""/>
                     </xsl:if>
                     <xsl:if test="'TODO-X'">
                        <id nullFlavor=""/>
                     </xsl:if>
                     <code code="ONESELF"/>
                  </assignedEntity>
               </informant>
            </xsl:when>
            <xsl:when test="'TODO-X'">
               <informant typeCode="INF" contextControlCode="OP">
                  <xsl:for-each select="rol_of_functie | persoon">
                     <relatedEntity>
                        <!-- Template :: MP CDA RelatedEntity -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9103_20160624141250"/>
                     </relatedEntity>
                  </xsl:for-each>
               </informant>
            </xsl:when>
         </xsl:choose>
         <entryRelationship typeCode="COMP">
            <!-- Template :: Volgens afspraak indicator -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9117_20160710194752"/>
         </entryRelationship>
         <entryRelationship typeCode="COMP">
            <!-- Template :: Stoptype -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
         </entryRelationship>
         <entryRelationship typeCode="SPRT">
            <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
         </entryRelationship>
         <entryRelationship typeCode="RSON">
            <!-- Template :: Reden voor medicatiegebruik -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9114_20160710170744"/>
         </entryRelationship>
         <entryRelationship typeCode="RSON">
            <!-- Template :: Reden voor wijzigen/stoppen medicatiegebruik -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9115_20160710171719"/>
         </entryRelationship>
         <entryRelationship typeCode="SUBJ" inversionInd="true">
            <!-- Template :: Toelichting -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
         </entryRelationship>
         <entryRelationship typeCode="COMP">
            <sequenceNumber value=""/>
            <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
               <substanceAdministration classCode="SBADM" moodCode="RQO">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                  <effectiveTime>
                     <xsl:choose>
                        <xsl:when test="doseerduur | doseerduur | doseerduur">
                           <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                           <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                              <xsl:call-template name="makePQValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">width</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="'TODO-X'">
                           <high nullFlavor="NI"/>
                        </xsl:when>
                     </xsl:choose>
                  </effectiveTime>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Frequency -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="interval | interval | interval">
                        <xsl:for-each select="interval | interval | interval">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Interval -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime xsi:type="SXPR_TS" operator="A">
                           <comp>
                              <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                           </comp>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime operator="A">
                           <comp>
                              <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                           </comp>
                           <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                              </comp>
                           </xsl:for-each>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                        <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Weekdag -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime operator="A">
                           <xsl:if test="'TODO-X'">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </comp>
                           </xsl:if>
                           <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </comp>
                              </xsl:for-each>
                           </xsl:if>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Nacht -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Ochtend -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Middag -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Avond -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime operator="A">
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Nacht -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                              </comp>
                           </xsl:for-each>
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                              </comp>
                           </xsl:for-each>
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Middag -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                              </comp>
                           </xsl:for-each>
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Avond -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                              </comp>
                           </xsl:for-each>
                        </effectiveTime>
                     </xsl:when>
                  </xsl:choose>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <doseQuantity>
                                 <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                 <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">center</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </doseQuantity>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <doseQuantity>
                                 <xsl:if test="min | min | min">
                                    <!-- Item(s) :: min min min-->
                                    <xsl:for-each select="min | min | min">
                                       <xsl:call-template name="makePQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">low</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="max | max | max">
                                    <!-- Item(s) :: max max max-->
                                    <xsl:for-each select="max | max | max">
                                       <xsl:call-template name="makePQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">high</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                              </doseQuantity>
                           </xsl:when>
                        </xsl:choose>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                        <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                           <xsl:call-template name="makeIVL_PQValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                     <maxDoseQuantity>
                        <!-- Template :: maxDoseQuantity -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                     </maxDoseQuantity>
                  </xsl:for-each>
                  <consumable xsi:nil="true"/>
                  <xsl:for-each select="criterium | criterium | criterium">
                     <precondition typeCode="PRCN">
                        <criterion classCode="OBS" moodCode="EVN.CRT">
                           <!-- Template :: Zo nodig criterium -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                        </criterion>
                     </precondition>
                  </xsl:for-each>
               </substanceAdministration>
            </xsl:for-each>
         </entryRelationship>
         <entryRelationship typeCode="REFR">
            <!-- Template :: MP MA Voorschrijver -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9166_20170516000000"/>
         </entryRelationship>
         <entryRelationship typeCode="REFR">
            <!-- Template :: MP Afspraak Identificatie -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.77.10.9120_20160624130542"/>
         </entryRelationship>
         <entryRelationship typeCode="REFR">
            <!-- Template :: MP Verstrekking identificatie -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9102_20160624133045"/>
         </entryRelationship>
         <xsl:for-each select="medicamenteuze_behandeling">
            <entryRelationship inversionInd="true" typeCode="COMP">
               <!-- Template :: MP MedBeh identificatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
            </entryRelationship>
         </xsl:for-each>
      </substanceAdministration>
   </xsl:template>

   <!-- HL7NL PIVL_TS Weekdag -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123">
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible"/>
      <xsl:attribute name="alignment">DW</xsl:attribute>
      <hl7nl:phase xmlns:hl7nl="urn:hl7-nl:v3">
         <!-- Item(s) :: weekdag weekdag toedientijd weekdag-->
         <xsl:for-each select="weekdag | weekdag | toedientijd | weekdag">
            <xsl:call-template name="makehl7nl:TSValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">low</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <hl7nl:width xsi:type="hl7nl:PQ" value="" unit=""/>
      </hl7nl:phase>
      <!-- Item(s) :: interval frequentie aantal vaste_waarde-->
      <xsl:for-each select="interval | vaste_waarde">
         <xsl:call-template name="makehl7nl:PQValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">period</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- HL7NL PIVL_TS Ochtend -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021">
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="alignment">HD</xsl:attribute>
      <!-- Item(s) :: dagdeel dagdeel dagdeel-->
      <xsl:for-each select="dagdeel | dagdeel | dagdeel">
         <xsl:call-template name="makehl7nl:IVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">phase</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <hl7nl:period xmlns:hl7nl="urn:hl7-nl:v3" value="" unit="d"/>
   </xsl:template>

   <!-- HL7NL PIVL_TS Middag -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022">
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="alignment">HD</xsl:attribute>
      <!-- Item(s) :: dagdeel dagdeel dagdeel-->
      <xsl:for-each select="dagdeel | dagdeel | dagdeel">
         <xsl:call-template name="makehl7nl:IVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">phase</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <hl7nl:period xmlns:hl7nl="urn:hl7-nl:v3" value="" unit="d"/>
   </xsl:template>

   <!-- HL7NL PIVL_TS Avond -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022">
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="alignment">HD</xsl:attribute>
      <!-- Item(s) :: dagdeel dagdeel dagdeel-->
      <xsl:for-each select="dagdeel | dagdeel | dagdeel">
         <xsl:call-template name="makehl7nl:IVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">phase</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <hl7nl:period xmlns:hl7nl="urn:hl7-nl:v3" value="" unit="d"/>
   </xsl:template>

   <!-- HL7NL PIVL_TS Nacht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022">
      <xsl:attribute name="operator"/>
      <xsl:attribute name="isFlexible">true</xsl:attribute>
      <xsl:attribute name="alignment">HD</xsl:attribute>
      <!-- Item(s) :: dagdeel dagdeel dagdeel-->
      <xsl:for-each select="dagdeel | dagdeel | dagdeel">
         <xsl:call-template name="makehl7nl:IVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">phase</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <hl7nl:period xmlns:hl7nl="urn:hl7-nl:v3" value="" unit="d"/>
   </xsl:template>

   <!-- Reden van voorschrijven -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9160_20161109134526">
      <xsl:for-each select="reden_van_voorschrijven | probleem">
         <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9160"/>
            <code code="10" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" codeSystemName=""/>
            <!-- Item(s) :: probleem_naam-->
            <xsl:for-each select="probleem_naam">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="elemName">value</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </observation>
      </xsl:for-each>
   </xsl:template>

   <!-- HL7NL PIVL_TS Toedieningsduur -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716">
      <xsl:attribute name="operator">A</xsl:attribute>
      <xsl:attribute name="isFlexible"/>
      <hl7nl:phase xmlns:hl7nl="urn:hl7-nl:v3">
         <hl7nl:low/>
         <!-- Item(s) :: toedieningsduur toedieningsduur toedieningsduur-->
         <xsl:for-each select="toedieningsduur | toedieningsduur | toedieningsduur">
            <xsl:call-template name="makehl7nl:PQValue">
               <xsl:with-param name="elemName">width</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </hl7nl:phase>
   </xsl:template>

   <!-- HL7NL Frequency -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9162_20161110120339">
      <xsl:for-each select="frequentie | frequentie | frequentie">
         <hl7nl:frequency xmlns:hl7nl="urn:hl7-nl:v3" xsi:type="hl7nl:RTO">
            <xsl:for-each select="aantal | aantal | aantal">
               <hl7nl:numerator xsi:type="hl7nl:INT" value="{vaste_waarde | vaste_waarde | vaste_waarde/(@code, @value)[1]}">
                  <hl7nl:uncertainRange>
                     <!-- Item(s) :: min min-->
                     <xsl:for-each select="min | min">
                        <xsl:call-template name="makehl7nl:INTValue">
                           <xsl:with-param name="elemName">low</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: max max-->
                     <xsl:for-each select="max | max">
                        <xsl:call-template name="makehl7nl:INTValue">
                           <xsl:with-param name="elemName">high</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </hl7nl:uncertainRange>
               </hl7nl:numerator>
            </xsl:for-each>
            <!-- Item(s) :: tijdseenheid tijdseenheid tijdseenheid-->
            <xsl:for-each select="tijdseenheid | tijdseenheid | tijdseenheid">
               <xsl:call-template name="makehl7nl:PQValue">
                  <xsl:with-param name="elemName">denominator</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </hl7nl:frequency>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Medication Information (Proposal/Statement) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9163_20161113135119">
      <xsl:for-each select="product | product">
         <manufacturedProduct xmlns="urn:hl7-org:v3" classCode="MANU">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9163"/>
            <xsl:for-each select="product_specificatie | product_specificatie">
               <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                  <!-- Item(s) :: product_code product_code product_code product_code product_code-->
                  <xsl:for-each select="product_code | product_code | product_code | product_code | product_code">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">code</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: product_naam product_naam-->
                  <xsl:for-each select="product_naam | product_naam">
                     <xsl:call-template name="makeENValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">name</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: omschrijving omschrijving-->
                  <xsl:for-each select="omschrijving | omschrijving">
                     <xsl:call-template name="makeEDValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">desc</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: farmaceutische_vorm farmaceutische_vorm-->
                  <xsl:for-each select="farmaceutische_vorm | farmaceutische_vorm">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">formCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <lotNumberText/>
                  <xsl:for-each select="ingredient | ingredient | ingredient | ingredient | ingredient">
                     <pharm:ingredient xmlns:pharm="urn:ihe:pharm:medication" classCode="INGR">
                        <xsl:for-each select="sterkte | sterkte | sterkte | sterkte | sterkte | hoeveelheid_product | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient | hoeveelheid_product | hoeveelheid_ingredient">
                           <pharm:quantity>
                              <!-- Template :: MP Ingredient quantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9071_20160618204153"/>
                           </pharm:quantity>
                        </xsl:for-each>
                        <xsl:for-each select="ingredient_code | ingredient_code | ingredient_code | ingredient_code | ingredient_code">
                           <pharm:ingredient classCode="MMAT" determinerCode="KIND">
                              <!-- Template :: MP CDA Material Code Ext -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9074_20160618205801"/>
                           </pharm:ingredient>
                        </xsl:for-each>
                     </pharm:ingredient>
                  </xsl:for-each>
               </manufacturedMaterial>
            </xsl:for-each>
         </manufacturedProduct>
      </xsl:for-each>
   </xsl:template>

   <!-- DoseQuantity and translation(s) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9164_20170118000000">
      <xsl:attribute name="value"/>
      <translation xmlns="urn:hl7-org:v3" value="" code="" codeSystem="2.16.840.1.113883.2.4.4.1.361" displayName=""/>
   </xsl:template>

   <!-- DispenseQuantity unit and translation(s) -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9165_20170118000000">
      <translation xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- MP MA Voorschrijver -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9166_20170516000000">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9166"/>
         <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
         <consumable xsi:nil="true"/>
         <author>
            <time nullFlavor="NI"/>
            <xsl:for-each select="zorgverlener">
               <assignedAuthor>
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9167"/>
                  <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                     <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                     <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                        <xsl:call-template name="makeII.NL.UZIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                     <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                     <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                        <xsl:call-template name="makeII.NL.AGBValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                     <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                     <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                     <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                     <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </xsl:if>
                  <!-- Item(s) :: specialisme-->
                  <xsl:for-each select="specialisme">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">code</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | zorgverlener_naam">
                     <assignedPerson>
                        <!-- Template :: Naam persoon -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                     </assignedPerson>
                  </xsl:for-each>
                  <xsl:for-each select="zorgaanbieder | zorgaanbieder">
                     <representedOrganization>
                        <xsl:attribute name="classCode">ORG</xsl:attribute>
                        <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                        <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                           <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                           <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                              <xsl:call-template name="makeII.NL.URAValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                           <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                           <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                              <xsl:call-template name="makeII.NL.AGBValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                           <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                           <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                        <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                           <xsl:call-template name="makeONValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">name</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </representedOrganization>
                  </xsl:for-each>
               </assignedAuthor>
            </xsl:for-each>
         </author>
      </substanceAdministration>
   </xsl:template>

   <!-- MP Gebruik Zorgverlener -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9167_20170516000000">
      <templateId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9167"/>
      <!-- Item(s) :: specialisme-->
      <xsl:for-each select="specialisme">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">code</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <xsl:for-each select="geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | zorgverlener_naam">
         <assignedPerson xmlns="urn:hl7-org:v3">
            <!-- Template :: Naam persoon -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
         </assignedPerson>
      </xsl:for-each>
      <xsl:for-each select="zorgaanbieder | zorgaanbieder">
         <representedOrganization xmlns="urn:hl7-org:v3">
            <xsl:attribute name="classCode">ORG</xsl:attribute>
            <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.URAValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeII.NL.AGBValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
               <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
               <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                  <xsl:call-template name="makeIIValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
            </xsl:if>
            <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
            <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
               <xsl:call-template name="makeONValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">name</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
         </representedOrganization>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Organization Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457">
      <xsl:attribute name="classCode">ORG</xsl:attribute>
      <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
      <!-- Item(s) :: organisatie_naam-->
      <xsl:for-each select="organisatie_naam">
         <xsl:call-template name="makeONValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">name</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <telecom xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- MP CDA Part header Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9170_20180111145229">
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3" code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
      <title xmlns="urn:hl7-org:v3"/>
      <!-- Item(s) :: document_datum-->
      <xsl:for-each select="document_datum">
         <xsl:call-template name="makeTS.DATETIME.MINValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <confidentialityCode xmlns="urn:hl7-org:v3"/>
      <languageCode xmlns="urn:hl7-org:v3"/>
      <custodian xmlns="urn:hl7-org:v3">
         <!-- Template :: MP CDA custodian -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
      </custodian>
   </xsl:template>

   <!-- MP CDA Part header Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9170_20170522091612">
      <id xmlns="urn:hl7-org:v3"/>
      <code xmlns="urn:hl7-org:v3" code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
      <title xmlns="urn:hl7-org:v3"/>
      <effectiveTime xmlns="urn:hl7-org:v3"/>
      <confidentialityCode xmlns="urn:hl7-org:v3"/>
      <languageCode xmlns="urn:hl7-org:v3"/>
      <custodian xmlns="urn:hl7-org:v3">
         <!-- Template :: MP CDA custodian -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
      </custodian>
   </xsl:template>

   <!-- MP CDA author medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9171_20180111143827">
      <xsl:for-each select="auteur">
         <author xmlns="urn:hl7-org:v3" typeCode="AUT" contextControlCode="OP">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9171"/>
            <time/>
            <xsl:choose>
               <xsl:when test="auteur_is_zorgaanbieder">
                  <xsl:for-each select="auteur_is_zorgaanbieder">
                     <assignedAuthor classCode="ASSIGNED">
                        <id/>
                        <xsl:for-each select="telefoon_email | contactgegevens | zorgaanbieder | organisatie_naam">
                           <representedOrganization>
                              <!-- Template :: MP CDA Organization Medicatieoverzicht -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457"/>
                           </representedOrganization>
                        </xsl:for-each>
                     </assignedAuthor>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="auteur_is_patient">
                  <xsl:for-each select="auteur_is_patient">
                     <assignedAuthor>
                        <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                        <xsl:if test="'TODO-X'">
                           <id/>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <id root="" extension=""/>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <id nullFlavor=""/>
                        </xsl:if>
                        <code code="ONESELF"/>
                     </assignedAuthor>
                  </xsl:for-each>
               </xsl:when>
            </xsl:choose>
         </author>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA author medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9171_20170522091920">
      <author xmlns="urn:hl7-org:v3" typeCode="AUT" contextControlCode="OP">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9171"/>
         <time/>
         <assignedAuthor classCode="ASSIGNED">
            <id/>
            <xsl:for-each select="organisatie_naam">
               <representedOrganization>
                  <!-- Template :: MP CDA Organization Medicatieoverzicht -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457"/>
               </representedOrganization>
            </xsl:for-each>
         </assignedAuthor>
      </author>
   </xsl:template>

   <!-- Telecom gegevens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9172_20170522143706">
      <!-- Item(s) :: telefoonnummers telefoonnummer telefoonnummer-->
      <xsl:for-each select="telefoonnummer | telefoonnummer">
         <xsl:call-template name="makeTELValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">telecom</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <telecom xmlns="urn:hl7-org:v3" use=""/>
      <!-- Item(s) :: email_adressen email_adres email_adres-->
      <xsl:for-each select="email_adres | email_adres">
         <xsl:call-template name="makeTELValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">telecom</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA verifier patiënt -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9173_20170522163129">
      <xsl:for-each select="verificatie_patient">
         <participant xmlns="urn:hl7-org:v3" typeCode="VRF">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9173"/>
            <!-- Item(s) :: verificatie_datum-->
            <xsl:for-each select="verificatie_datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">time</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="geverifieerd_met_patientq">
               <associatedEntity classCode="PAT"/>
            </xsl:for-each>
         </participant>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA verifier zorgverlener -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9174_20170522163500">
      <xsl:for-each select="verificatie_zorgverlener">
         <participant xmlns="urn:hl7-org:v3" typeCode="VRF">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9174"/>
            <!-- Item(s) :: verificatie_datum-->
            <xsl:for-each select="verificatie_datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">time</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="geverifieerd_met_zorgverlenerq | geverifieerd_met_zorgverlenerq">
               <associatedEntity classCode="ASSIGNED"/>
            </xsl:for-each>
         </participant>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA TA Aanvullende informatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9175_20170522171022">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9175"/>
         <code code="12" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2"/>
         <!-- Item(s) :: aanvullende_informatie-->
         <xsl:for-each select="aanvullende_informatie">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- MP Medicatiegebruik identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9176_20170522183626">
      <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9176"/>
         <!-- Item(s) :: identificatie_23289-->
         <xsl:for-each select="identificatie_23289">
            <xsl:call-template name="makeIIValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">id</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <code code="6" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
         <consumable xsi:nil="true"/>
      </substanceAdministration>
   </xsl:template>

   <!-- MP CDA MA Aanvullende informatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9177_20170523084315">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9177"/>
         <code code="11" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2"/>
         <!-- Item(s) :: aanvullende_informatie-->
         <xsl:for-each select="aanvullende_informatie">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- MP CDA VS Aanvullende informatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9178_20170523091005">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9178"/>
         <code code="13" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2"/>
         <!-- Item(s) :: aanvullende_informatie-->
         <xsl:for-each select="aanvullende_informatie">
            <xsl:call-template name="makeCEValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- MP organizer verifier patiënt -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9179_20170523115538">
      <xsl:for-each select="verificatie_patient">
         <participant xmlns="urn:hl7-org:v3" typeCode="VRF">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9179"/>
            <!-- Item(s) :: verificatie_datum-->
            <xsl:for-each select="verificatie_datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">time</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="geverifieerd_met_patientq">
               <participantRole classCode="PAT"/>
            </xsl:for-each>
         </participant>
      </xsl:for-each>
   </xsl:template>

   <!-- MP organizer verifier zorgverlener -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9180_20170523115753">
      <xsl:for-each select="verificatie_zorgverlener">
         <participant xmlns="urn:hl7-org:v3" typeCode="VRF">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9180"/>
            <!-- Item(s) :: verificatie_datum-->
            <xsl:for-each select="verificatie_datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">time</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <participantRole classCode="ASSIGNED"/>
         </participant>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA (voorstel) Medicatieafspraak onderdelen 2 -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9181_20170531111241">
      <entryRelationship xmlns="urn:hl7-org:v3" typeCode="COMP">
         <!-- Template :: Stoptype -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
      </entryRelationship>
      <entryRelationship xmlns="urn:hl7-org:v3" typeCode="RSON">
         <!-- Template :: Reden voor medicatieafspraak -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9068_20160617150015"/>
      </entryRelationship>
      <xsl:for-each select="reden_van_voorschrijven | probleem">
         <entryRelationship xmlns="urn:hl7-org:v3" typeCode="RSON">
            <!-- Template :: Reden van voorschrijven -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9160_20161109134526"/>
         </entryRelationship>
      </xsl:for-each>
      <entryRelationship xmlns="urn:hl7-org:v3" typeCode="SPRT">
         <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
      </entryRelationship>
      <xsl:for-each select="lichaamslengte">
         <entryRelationship xmlns="urn:hl7-org:v3" typeCode="COMP">
            <!-- Template :: MP CDA Body Height -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9122_20160713172302"/>
         </entryRelationship>
      </xsl:for-each>
      <xsl:for-each select="lichaamsgewicht">
         <entryRelationship xmlns="urn:hl7-org:v3" typeCode="COMP">
            <!-- Template :: MP CDA Body Weight -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9123_20160713212617"/>
         </entryRelationship>
      </xsl:for-each>
      <entryRelationship xmlns="urn:hl7-org:v3" typeCode="COMP">
         <!-- Template :: MP CDA MA Aanvullende informatie -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9177_20170523084315"/>
      </entryRelationship>
      <entryRelationship xmlns="urn:hl7-org:v3" typeCode="SUBJ" inversionInd="true">
         <!-- Template :: Toelichting -->
         <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
      </entryRelationship>
      <xsl:for-each select="doseerinstructie">
         <entryRelationship xmlns="urn:hl7-org:v3" typeCode="COMP">
            <!-- Item(s) :: volgnummer-->
            <xsl:for-each select="volgnummer">
               <xsl:call-template name="makeINTValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
               <substanceAdministration classCode="SBADM" moodCode="RQO">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                  <effectiveTime>
                     <xsl:choose>
                        <xsl:when test="doseerduur | doseerduur | doseerduur">
                           <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                           <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                              <xsl:call-template name="makePQValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">width</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="'TODO-X'">
                           <high nullFlavor="NI"/>
                        </xsl:when>
                     </xsl:choose>
                  </effectiveTime>
                  <xsl:choose>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Frequency -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="interval | interval | interval">
                        <xsl:for-each select="interval | interval | interval">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Interval -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime xsi:type="SXPR_TS" operator="A">
                           <comp>
                              <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                           </comp>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime operator="A">
                           <comp>
                              <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                           </comp>
                           <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                              </comp>
                           </xsl:for-each>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime>
                           <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                        <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Weekdag -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime operator="A">
                           <xsl:if test="'TODO-X'">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </comp>
                           </xsl:if>
                           <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </comp>
                              </xsl:for-each>
                           </xsl:if>
                        </effectiveTime>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Nacht -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Ochtend -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Middag -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="dagdeel | dagdeel | dagdeel">
                        <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                           <effectiveTime>
                              <!-- Template :: HL7NL PIVL_TS Avond -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                           </effectiveTime>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="'TODO-X'">
                        <effectiveTime operator="A">
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Nacht -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                              </comp>
                           </xsl:for-each>
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                              </comp>
                           </xsl:for-each>
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Middag -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                              </comp>
                           </xsl:for-each>
                           <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                              <comp>
                                 <!-- Template :: HL7NL PIVL_TS Avond -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                              </comp>
                           </xsl:for-each>
                        </effectiveTime>
                     </xsl:when>
                  </xsl:choose>
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <doseQuantity>
                                 <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                 <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">center</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </doseQuantity>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <doseQuantity>
                                 <xsl:if test="min | min | min">
                                    <!-- Item(s) :: min min min-->
                                    <xsl:for-each select="min | min | min">
                                       <xsl:call-template name="makePQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">low</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                                 <xsl:if test="max | max | max">
                                    <!-- Item(s) :: max max max-->
                                    <xsl:for-each select="max | max | max">
                                       <xsl:call-template name="makePQValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">high</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </xsl:if>
                              </doseQuantity>
                           </xsl:when>
                        </xsl:choose>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                        <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                           <xsl:call-template name="makeIVL_PQValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                     <maxDoseQuantity>
                        <!-- Template :: maxDoseQuantity -->
                        <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                     </maxDoseQuantity>
                  </xsl:for-each>
                  <consumable xsi:nil="true"/>
                  <xsl:for-each select="criterium | criterium | criterium">
                     <precondition typeCode="PRCN">
                        <criterion classCode="OBS" moodCode="EVN.CRT">
                           <!-- Template :: Zo nodig criterium -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                        </criterion>
                     </precondition>
                  </xsl:for-each>
               </substanceAdministration>
            </xsl:for-each>
         </entryRelationship>
      </xsl:for-each>
      <xsl:for-each select="relatie_naar_afspraak_of_gebruik">
         <entryRelationship xmlns="urn:hl7-org:v3" typeCode="REFR">
            <xsl:choose>
               <xsl:when test="'TODO-X-Include in choice'">
                  <substanceAdministration classCode="SBADM" moodCode="RQO">
                     <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9086"/>
                     <!-- Item(s) :: identificatie identificatie identificatie_medicatieafspraak identificatie identificatie-->
                     <xsl:for-each select="identificatie | identificatie | identificatie_medicatieafspraak | identificatie | identificatie">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                     <consumable xsi:nil="true"/>
                  </substanceAdministration>
               </xsl:when>
               <xsl:when test="'TODO-X-Include in choice'">
                  <substanceAdministration classCode="SBADM" moodCode="RQO">
                     <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9101"/>
                     <!-- Item(s) :: identificatie_toedieningsafspraak identificatie_23288-->
                     <xsl:for-each select="identificatie_toedieningsafspraak | identificatie_23288">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <code code="422037009" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                     <consumable xsi:nil="true"/>
                  </substanceAdministration>
               </xsl:when>
               <xsl:when test="'TODO-X-Include in choice'">
                  <substanceAdministration classCode="SBADM" moodCode="EVN">
                     <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9176"/>
                     <!-- Item(s) :: identificatie_23289-->
                     <xsl:for-each select="identificatie_23289">
                        <xsl:call-template name="makeIIValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <code code="6" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
                     <consumable xsi:nil="true"/>
                  </substanceAdministration>
               </xsl:when>
            </xsl:choose>
         </entryRelationship>
      </xsl:for-each>
   </xsl:template>

   <!-- Zo nodig criterium -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>

   <!-- Toelichting bij voorstelgegevens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9183_20170818085324">
      <act xmlns="urn:hl7-org:v3" classCode="ACT" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9183"/>
         <code code="48767-8" displayName="" codeSystem="2.16.840.1.113883.6.1" codeSystemName=""/>
         <!-- Item(s) :: toelichting-->
         <xsl:for-each select="toelichting">
            <xsl:call-template name="makeSTValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">text</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </act>
   </xsl:template>

   <!-- MP CDA Medicatieafspraak onderdelen 1 -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9184_20170818092503">
      <!-- Item(s) :: identificatie-->
      <xsl:for-each select="identificatie">
         <xsl:call-template name="makeIIValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">id</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <code xmlns="urn:hl7-org:v3" code="16076005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
      <!-- Item(s) :: omschrijving-->
      <xsl:for-each select="omschrijving">
         <xsl:call-template name="makeEDValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">text</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: geannuleerd_indicator-->
      <xsl:for-each select="geannuleerd_indicator">
         <xsl:call-template name="makeCSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">statusCode</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: gebruiksperiode-->
      <xsl:for-each select="gebruiksperiode">
         <xsl:call-template name="makeIVL_TSValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: toedieningsweg-->
      <xsl:for-each select="toedieningsweg">
         <xsl:call-template name="makeCEValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">routeCode</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA Medicatieafspraak voorstel vv -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9185_20170818000000">
      <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="RQO">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9185"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code code="16076005" codeSystem="2.16.840.1.113883.6.96" displayName="" codeSystemName=""/>
            <!-- Item(s) :: omschrijving-->
            <xsl:for-each select="omschrijving">
               <xsl:call-template name="makeEDValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">text</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: geannuleerd_indicator-->
            <xsl:for-each select="geannuleerd_indicator">
               <xsl:call-template name="makeCSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">statusCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: gebruiksperiode-->
            <xsl:for-each select="gebruiksperiode">
               <xsl:call-template name="makeIVL_TSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: toedieningsweg-->
            <xsl:for-each select="toedieningsweg">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">routeCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="product | product | afgesproken_geneesmiddel">
               <consumable>
                  <!-- Template :: MP CDA Medication Information (Proposal/Statement) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9163_20161113135119"/>
               </consumable>
            </xsl:for-each>
            <xsl:for-each select="datum | zorgverlener | zorgverlener | voorstel_datum | zorgverlener | registratiedatum | zorgverlener | afspraakdatum | afspraakdatum | voorschrijver">
               <author>
                  <!-- Template :: MP CDA Author Participation -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9066_20160615212337"/>
               </author>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Stoptype -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
            </entryRelationship>
            <entryRelationship typeCode="RSON">
               <!-- Template :: Reden voor medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9068_20160617150015"/>
            </entryRelationship>
            <xsl:for-each select="reden_van_voorschrijven | probleem">
               <entryRelationship typeCode="RSON">
                  <!-- Template :: Reden van voorschrijven -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9160_20161109134526"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="SPRT">
               <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
            </entryRelationship>
            <xsl:for-each select="lichaamslengte">
               <entryRelationship typeCode="COMP">
                  <!-- Template :: MP CDA Body Height -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9122_20160713172302"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="lichaamsgewicht">
               <entryRelationship typeCode="COMP">
                  <!-- Template :: MP CDA Body Weight -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9123_20160713212617"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: MP CDA MA Aanvullende informatie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9177_20170523084315"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="doseerinstructie">
               <entryRelationship typeCode="COMP">
                  <!-- Item(s) :: volgnummer-->
                  <xsl:for-each select="volgnummer">
                     <xsl:call-template name="makeINTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                     <substanceAdministration classCode="SBADM" moodCode="RQO">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                        <effectiveTime>
                           <xsl:choose>
                              <xsl:when test="doseerduur | doseerduur | doseerduur">
                                 <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                 <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">width</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <high nullFlavor="NI"/>
                              </xsl:when>
                           </xsl:choose>
                        </effectiveTime>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | interval | interval">
                              <xsl:for-each select="interval | interval | interval">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Interval -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime xsi:type="SXPR_TS" operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                 </comp>
                                 <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:if test="'TODO-X'">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </comp>
                                 </xsl:if>
                                 <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </comp>
                                    </xsl:for-each>
                                 </xsl:if>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Nacht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Middag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Avond -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Nacht -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Middag -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Avond -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                       <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">center</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </doseQuantity>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <xsl:if test="min | min | min">
                                          <!-- Item(s) :: min min min-->
                                          <xsl:for-each select="min | min | min">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="max | max | max">
                                          <!-- Item(s) :: max max max-->
                                          <xsl:for-each select="max | max | max">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </doseQuantity>
                                 </xsl:when>
                              </xsl:choose>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                              <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                           <maxDoseQuantity>
                              <!-- Template :: maxDoseQuantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                           </maxDoseQuantity>
                        </xsl:for-each>
                        <consumable xsi:nil="true"/>
                        <xsl:for-each select="criterium | criterium | criterium">
                           <precondition typeCode="PRCN">
                              <criterion classCode="OBS" moodCode="EVN.CRT">
                                 <!-- Template :: Zo nodig criterium -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                              </criterion>
                           </precondition>
                        </xsl:for-each>
                     </substanceAdministration>
                  </xsl:for-each>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="relatie_naar_afspraak_of_gebruik">
               <entryRelationship typeCode="REFR">
                  <xsl:choose>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="RQO">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9086"/>
                           <!-- Item(s) :: identificatie identificatie identificatie_medicatieafspraak identificatie identificatie-->
                           <xsl:for-each select="identificatie | identificatie | identificatie_medicatieafspraak | identificatie | identificatie">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="16076005" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="RQO">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9101"/>
                           <!-- Item(s) :: identificatie_toedieningsafspraak identificatie_23288-->
                           <xsl:for-each select="identificatie_toedieningsafspraak | identificatie_23288">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="422037009" displayName="" codeSystem="2.16.840.1.113883.6.96" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                     <xsl:when test="'TODO-X-Include in choice'">
                        <substanceAdministration classCode="SBADM" moodCode="EVN">
                           <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9176"/>
                           <!-- Item(s) :: identificatie_23289-->
                           <xsl:for-each select="identificatie_23289">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <code code="6" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" codeSystemName=""/>
                           <consumable xsi:nil="true"/>
                        </substanceAdministration>
                     </xsl:when>
                  </xsl:choose>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA author zorgverlener of patient -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9187_20170818144258">
      <xsl:for-each select="auteur">
         <author xmlns="urn:hl7-org:v3" typeCode="AUT" contextControlCode="OP">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9187"/>
            <!-- Item(s) :: registratiedatum voorstel_datum-->
            <xsl:for-each select="registratiedatum | voorstel_datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">time</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:choose>
               <xsl:when test="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                  <xsl:for-each select="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                     <assignedAuthor classCode="ASSIGNED">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
                        <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                           <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                           <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <xsl:call-template name="makeII.NL.UZIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                           <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                           <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <xsl:call-template name="makeII.NL.AGBValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                           <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                           <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                           <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                           <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                              <xsl:call-template name="makeIIValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">id</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                        </xsl:if>
                        <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
                        <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
                           <xsl:call-template name="makeCEValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">code</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                           <assignedPerson>
                              <!-- Template :: Naam persoon -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                           </assignedPerson>
                        </xsl:for-each>
                        <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
                           <representedOrganization>
                              <xsl:attribute name="classCode">ORG</xsl:attribute>
                              <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                              <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                 <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                 <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.URAValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                 <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                 <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.AGBValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                 <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                 <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                              <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                                 <xsl:call-template name="makeONValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">name</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </representedOrganization>
                        </xsl:for-each>
                     </assignedAuthor>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="auteur_is_patient | auteur_is_patient">
                  <xsl:for-each select="auteur_is_patient | auteur_is_patient">
                     <assignedAuthor>
                        <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                        <xsl:if test="'TODO-X'">
                           <id/>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <id root="" extension=""/>
                        </xsl:if>
                        <xsl:if test="'TODO-X'">
                           <id nullFlavor=""/>
                        </xsl:if>
                        <code code="ONESELF"/>
                     </assignedAuthor>
                  </xsl:for-each>
               </xsl:when>
            </xsl:choose>
         </author>
      </xsl:for-each>
   </xsl:template>

   <!-- MP CDA author of informant patient -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9188_20170825000000">
      <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
      <code xmlns="urn:hl7-org:v3" code="ONESELF"/>
   </xsl:template>

   <!-- Gebruikindicator -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9189_20171026161543">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9189"/>
         <code code="15" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" displayName=""/>
         <value/>
      </observation>
   </xsl:template>

   <!-- MP CDA Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141">
      <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
         <substanceAdministration xmlns="urn:hl7-org:v3" classCode="SBADM" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9190"/>
            <!-- Item(s) :: identificatie-->
            <xsl:for-each select="identificatie">
               <xsl:call-template name="makeIIValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">id</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <code code="6" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.3" displayName="" codeSystemName=""/>
            <!-- Item(s) :: omschrijving-->
            <xsl:for-each select="omschrijving">
               <xsl:call-template name="makeSTValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">text</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: gebruiksperiode-->
            <xsl:for-each select="gebruiksperiode">
               <xsl:call-template name="makeIVL_TSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <!-- Item(s) :: toedieningsweg-->
            <xsl:for-each select="toedieningsweg">
               <xsl:call-template name="makeCEValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">routeCode</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="product | product | gebruiks_product">
               <consumable typeCode="CSM">
                  <!-- Template :: MP CDA Medication Information (Proposal/Statement) -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9163_20161113135119"/>
               </consumable>
            </xsl:for-each>
            <xsl:for-each select="auteur">
               <author typeCode="AUT" contextControlCode="OP">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9187"/>
                  <!-- Item(s) :: registratiedatum voorstel_datum-->
                  <xsl:for-each select="registratiedatum | voorstel_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:choose>
                     <xsl:when test="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                        <xsl:for-each select="zorgverlener | auteur_is_zorgverlener | auteur_is_zorgverlener | zorgverlener">
                           <assignedAuthor classCode="ASSIGNED">
                              <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9113"/>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.UZIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeII.NL.AGBValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <xsl:if test="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                 <!-- Item(s) :: zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer zorgverlener_identificatie_nummer-->
                                 <xsl:for-each select="zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer | zorgverlener_identificatie_nummer">
                                    <xsl:call-template name="makeIIValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">id</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:if>
                              <!-- Item(s) :: specialisme specialisme specialisme specialisme specialisme organisatie_type-->
                              <xsl:for-each select="specialisme | specialisme | specialisme | specialisme | specialisme | organisatie_type">
                                 <xsl:call-template name="makeCEValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">code</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                              <xsl:for-each select="zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | zorgverlener_naam | geslachtsnaam | geslachtsnaam_partner | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam_partner | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens | geslachtsnaam | naamgegevens">
                                 <assignedPerson>
                                    <!-- Template :: Naam persoon -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.101.10.1_20141106000000"/>
                                 </assignedPerson>
                              </xsl:for-each>
                              <xsl:for-each select="zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder | zorgaanbieder">
                                 <representedOrganization>
                                    <xsl:attribute name="classCode">ORG</xsl:attribute>
                                    <xsl:attribute name="determinerCode">INSTANCE</xsl:attribute>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeII.NL.URAValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeII.NL.AGBValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <xsl:if test="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                       <!-- Item(s) :: zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer zorgaanbieder_identificatie_nummer-->
                                       <xsl:for-each select="zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer | zorgaanbieder_identificatie_nummer">
                                          <xsl:call-template name="makeIIValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">id</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </xsl:if>
                                    <!-- Item(s) :: organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam organisatie_naam zorgaanbieder-->
                                    <xsl:for-each select="organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam | organisatie_naam">
                                       <xsl:call-template name="makeONValue">
                                          <xsl:with-param name="xsiType" select="''"/>
                                          <xsl:with-param name="elemName">name</xsl:with-param>
                                       </xsl:call-template>
                                    </xsl:for-each>
                                 </representedOrganization>
                              </xsl:for-each>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="auteur_is_patient | auteur_is_patient">
                        <xsl:for-each select="auteur_is_patient | auteur_is_patient">
                           <assignedAuthor>
                              <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                              <xsl:if test="'TODO-X'">
                                 <id/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id root="" extension=""/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id nullFlavor=""/>
                              </xsl:if>
                              <code code="ONESELF"/>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
               </author>
            </xsl:for-each>
            <xsl:choose>
               <xsl:when test="informant_is_zorgverlener">
                  <xsl:for-each select="informant_is_zorgverlener">
                     <informant typeCode="INF" contextControlCode="OP">
                        <xsl:for-each select="zorgaanbieder | zorgaanbieder | specialisme | zorgverlener_naam | zorgverlener">
                           <assignedEntity>
                              <!-- Template :: MP Gebruik Zorgverlener -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9167_20170516000000"/>
                           </assignedEntity>
                        </xsl:for-each>
                     </informant>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="informant_is_patient">
                  <xsl:for-each select="informant_is_patient">
                     <informant>
                        <assignedEntity>
                           <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                           <xsl:if test="'TODO-X'">
                              <id/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id root="" extension=""/>
                           </xsl:if>
                           <xsl:if test="'TODO-X'">
                              <id nullFlavor=""/>
                           </xsl:if>
                           <code code="ONESELF"/>
                        </assignedEntity>
                     </informant>
                  </xsl:for-each>
               </xsl:when>
               <xsl:when test="'TODO-X'">
                  <informant typeCode="INF" contextControlCode="OP">
                     <xsl:for-each select="rol_of_functie | persoon">
                        <relatedEntity>
                           <!-- Template :: MP CDA RelatedEntity -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9103_20160624141250"/>
                        </relatedEntity>
                     </xsl:for-each>
                  </informant>
               </xsl:when>
            </xsl:choose>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Gebruikindicator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9189_20171026161543"/>
            </entryRelationship>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Volgens afspraak indicator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9117_20160710194752"/>
            </entryRelationship>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Stoptype -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9067_20160617102209"/>
            </entryRelationship>
            <entryRelationship typeCode="SPRT">
               <!-- Template :: MP CDA Aanvullende gebruiksinstructie -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9085_20160621114818"/>
            </entryRelationship>
            <entryRelationship typeCode="RSON">
               <!-- Template :: Reden voor medicatiegebruik -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9114_20160710170744"/>
            </entryRelationship>
            <entryRelationship typeCode="RSON">
               <!-- Template :: Reden voor wijzigen/stoppen medicatiegebruik -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9115_20160710171719"/>
            </entryRelationship>
            <entryRelationship typeCode="SUBJ" inversionInd="true">
               <!-- Template :: Toelichting -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9069_20160617163405"/>
            </entryRelationship>
            <xsl:for-each select="doseerinstructie">
               <entryRelationship typeCode="COMP">
                  <!-- Item(s) :: volgnummer-->
                  <xsl:for-each select="volgnummer">
                     <xsl:call-template name="makeINTValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">sequenceNumber</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="aantal | zo_nodig | dosering | zo_nodig | toedieningsschema | keerdosis | dosering | toedieningsschema | aantal | keerdosis | dosering | zo_nodig | toedieningsschema | keerdosis">
                     <substanceAdministration classCode="SBADM" moodCode="RQO">
                        <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9149"/>
                        <effectiveTime>
                           <xsl:choose>
                              <xsl:when test="doseerduur | doseerduur | doseerduur">
                                 <!-- Item(s) :: doseerduur doseerduur doseerduur-->
                                 <xsl:for-each select="doseerduur | doseerduur | doseerduur">
                                    <xsl:call-template name="makePQValue">
                                       <xsl:with-param name="xsiType" select="''"/>
                                       <xsl:with-param name="elemName">width</xsl:with-param>
                                    </xsl:call-template>
                                 </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="'TODO-X'">
                                 <high nullFlavor="NI"/>
                              </xsl:when>
                           </xsl:choose>
                        </effectiveTime>
                        <xsl:choose>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Frequency -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | interval | interval">
                              <xsl:for-each select="interval | interval | interval">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Interval -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9079_20160620162955"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Toedieningsduur -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9161_20161110085716"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime xsi:type="SXPR_TS" operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Vaste Tijd -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9081_20160620234234"/>
                                 </comp>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <comp>
                                    <!-- Template :: HL7NL PIVL_TS Frequency NoRange -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9120_20160711101947"/>
                                 </comp>
                                 <xsl:for-each select="herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema | herhaalperiode_cyclisch_schema">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Cyclisch schema -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9082_20160621002112"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime>
                                 <!-- Template :: HL7NL PIVL_TS Aantal keer. -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9121_20160711104612"/>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="interval | frequentie | aantal | vaste_waarde">
                              <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:if test="'TODO-X'">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Frequency -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9080_20160620164239"/>
                                    </comp>
                                 </xsl:if>
                                 <xsl:if test="interval | frequentie | aantal | vaste_waarde">
                                    <xsl:for-each select="interval | frequentie | aantal | vaste_waarde">
                                       <comp>
                                          <!-- Template :: HL7NL PIVL_TS Weekdag -->
                                          <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9155_20160727135123"/>
                                       </comp>
                                    </xsl:for-each>
                                 </xsl:if>
                              </effectiveTime>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Nacht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Middag -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="dagdeel | dagdeel | dagdeel">
                              <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                 <effectiveTime>
                                    <!-- Template :: HL7NL PIVL_TS Avond -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                 </effectiveTime>
                              </xsl:for-each>
                           </xsl:when>
                           <xsl:when test="'TODO-X'">
                              <effectiveTime operator="A">
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Nacht -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9159_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Ochtend -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9156_20160728135021"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Middag -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9157_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                                 <xsl:for-each select="dagdeel | dagdeel | dagdeel">
                                    <comp>
                                       <!-- Template :: HL7NL PIVL_TS Avond -->
                                       <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9158_20160728135022"/>
                                    </comp>
                                 </xsl:for-each>
                              </effectiveTime>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <xsl:choose>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <!-- Item(s) :: vaste_waarde vaste_waarde vaste_waarde-->
                                       <xsl:for-each select="vaste_waarde | vaste_waarde | vaste_waarde">
                                          <xsl:call-template name="makePQValue">
                                             <xsl:with-param name="xsiType" select="''"/>
                                             <xsl:with-param name="elemName">center</xsl:with-param>
                                          </xsl:call-template>
                                       </xsl:for-each>
                                    </doseQuantity>
                                 </xsl:when>
                                 <xsl:when test="'TODO-X'">
                                    <doseQuantity>
                                       <xsl:if test="min | min | min">
                                          <!-- Item(s) :: min min min-->
                                          <xsl:for-each select="min | min | min">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">low</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                       <xsl:if test="max | max | max">
                                          <!-- Item(s) :: max max max-->
                                          <xsl:for-each select="max | max | max">
                                             <xsl:call-template name="makePQValue">
                                                <xsl:with-param name="xsiType" select="''"/>
                                                <xsl:with-param name="elemName">high</xsl:with-param>
                                             </xsl:call-template>
                                          </xsl:for-each>
                                       </xsl:if>
                                    </doseQuantity>
                                 </xsl:when>
                              </xsl:choose>
                           </xsl:when>
                           <xsl:when test="'TODO-X-Include in choice'">
                              <!-- Item(s) :: toedieningssnelheid toedieningssnelheid tijdseenheid eenheid waarde tijdseenheid waarde eenheid waarde eenheid tijdseenheid toedieningssnelheid-->
                              <xsl:for-each select="tijdseenheid | eenheid | tijdseenheid | eenheid | eenheid | tijdseenheid">
                                 <xsl:call-template name="makeIVL_PQValue">
                                    <xsl:with-param name="xsiType" select="''"/>
                                    <xsl:with-param name="elemName">rateQuantity</xsl:with-param>
                                 </xsl:call-template>
                              </xsl:for-each>
                           </xsl:when>
                        </xsl:choose>
                        <xsl:for-each select="maximale_dosering | maximale_dosering | maximale_dosering | tijdseenheid | tijdseenheid | aantal | eenheid | tijdseenheid | aantal | eenheid">
                           <maxDoseQuantity>
                              <!-- Template :: maxDoseQuantity -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9064_20160601000000"/>
                           </maxDoseQuantity>
                        </xsl:for-each>
                        <consumable xsi:nil="true"/>
                        <xsl:for-each select="criterium | criterium | criterium">
                           <precondition typeCode="PRCN">
                              <criterion classCode="OBS" moodCode="EVN.CRT">
                                 <!-- Template :: Zo nodig criterium -->
                                 <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9182_20170601000000"/>
                              </criterion>
                           </precondition>
                        </xsl:for-each>
                     </substanceAdministration>
                  </xsl:for-each>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="voorschrijver">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP MA Voorschrijver -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9166_20170516000000"/>
               </entryRelationship>
            </xsl:for-each>
            <entryRelationship typeCode="COMP">
               <!-- Template :: Kopie-indicator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9200_20180112101847"/>
            </entryRelationship>
            <xsl:for-each select="gerelateerde_afspraak">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Afspraak Identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.77.10.9120_20160624130542"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="gerelateerde_verstrekking">
               <entryRelationship typeCode="REFR">
                  <!-- Template :: MP Verstrekking identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9102_20160624133045"/>
               </entryRelationship>
            </xsl:for-each>
            <xsl:for-each select="medicamenteuze_behandeling">
               <entryRelationship inversionInd="true" typeCode="COMP">
                  <!-- Template :: MP MedBeh identificatie -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9084_20160621103838"/>
               </entryRelationship>
            </xsl:for-each>
         </substanceAdministration>
      </xsl:for-each>
   </xsl:template>

   <!-- MP HL7 Sturen gebruik Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9191_20171117164925">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9191"/>
         <code code="138" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" displayName="" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Medicatiegebruik -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141"/>
            </component>
         </xsl:for-each>
      </organizer>
   </xsl:template>

   <!-- MP HL7 Medicatiegegevens Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9192_20171117171537">
      <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9192"/>
         <code code="102" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
         <statusCode nullFlavor="NI"/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Medicatieafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="verstrekkingsverzoek">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Verstrekkingsverzoek -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9087_20160621125157"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Toedieningsafspraak -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="verstrekking">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Verstrekking -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9094_20160623194106"/>
            </component>
         </xsl:for-each>
         <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
            <component typeCode="COMP">
               <!-- Template :: MP CDA Medicatiegebruik -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141"/>
            </component>
         </xsl:for-each>
      </organizer>
   </xsl:template>

   <!-- MP HL7 Medicatieoverzicht Organizer -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9193_20171117171903">
      <xsl:for-each select="documentgegevens">
         <organizer xmlns="urn:hl7-org:v3" classCode="CLUSTER" moodCode="EVN">
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9193"/>
            <code code="129" displayName="" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.4" codeSystemName=""/>
            <statusCode nullFlavor="NI"/>
            <!-- Item(s) :: document_datum-->
            <xsl:for-each select="document_datum">
               <xsl:call-template name="makeTSValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <recordTarget>
               <xsl:for-each select="patient | contactgegevens">
                  <patientRole>
                     <!-- Item(s) :: patient_identificatienummer-->
                     <xsl:for-each select="patient_identificatienummer">
                        <xsl:call-template name="makeII.NL.BSNValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <xsl:for-each select="adresgegevens">
                        <addr>
                           <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                           <!-- Item(s) :: straat-->
                           <xsl:for-each select="straat">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">streetName</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: huisnummer-->
                           <xsl:for-each select="huisnummer">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                           <xsl:if test="huisnummerletter | huisnummertoevoeging">
                              <buildingNumberSuffix>
                                 <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                              </buildingNumberSuffix>
                           </xsl:if>
                           <!-- Item(s) :: aanduiding_bij_nummer-->
                           <xsl:for-each select="aanduiding_bij_nummer">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: postcode-->
                           <xsl:for-each select="postcode">
                              <xsl:call-template name="makeADXPValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">postalCode</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: gemeente-->
                           <xsl:for-each select="gemeente">
                              <xsl:call-template name="makeADXPValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">county</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: woonplaats-->
                           <xsl:for-each select="woonplaats">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">city</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: land-->
                           <xsl:for-each select="land">
                              <xsl:call-template name="makeADXPValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">country</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: additionele_informatie-->
                           <xsl:for-each select="additionele_informatie">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">unitID</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <useablePeriod/>
                        </addr>
                     </xsl:for-each>
                     <xsl:for-each select="telefoonnummers">
                        <telecom>
                           <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                           <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                        </telecom>
                     </xsl:for-each>
                     <xsl:for-each select="email_adressen">
                        <telecom>
                           <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                           <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                        </telecom>
                     </xsl:for-each>
                     <patient>
                        <!-- Item(s) :: naamgegevens naamgebruik-->
                        <xsl:for-each select="naamgebruik">
                           <xsl:call-template name="makePN.NLValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">name</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: geslacht-->
                        <xsl:for-each select="geslacht">
                           <xsl:call-template name="makeCEValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: geboortedatum-->
                        <xsl:for-each select="geboortedatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">birthTime</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: meerling_indicator-->
                        <xsl:for-each select="meerling_indicator">
                           <xsl:call-template name="makeBLValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </patient>
                  </patientRole>
               </xsl:for-each>
            </recordTarget>
            <xsl:for-each select="auteur">
               <author typeCode="AUT" contextControlCode="OP">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9171"/>
                  <time/>
                  <xsl:choose>
                     <xsl:when test="auteur_is_zorgaanbieder">
                        <xsl:for-each select="auteur_is_zorgaanbieder">
                           <assignedAuthor classCode="ASSIGNED">
                              <id/>
                              <xsl:for-each select="telefoon_email | contactgegevens | zorgaanbieder | organisatie_naam">
                                 <representedOrganization>
                                    <!-- Template :: MP CDA Organization Medicatieoverzicht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457"/>
                                 </representedOrganization>
                              </xsl:for-each>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="auteur_is_patient">
                        <xsl:for-each select="auteur_is_patient">
                           <assignedAuthor>
                              <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                              <xsl:if test="'TODO-X'">
                                 <id/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id root="" extension=""/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id nullFlavor=""/>
                              </xsl:if>
                              <code code="ONESELF"/>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
               </author>
            </xsl:for-each>
            <xsl:for-each select="verificatie_patient">
               <participant typeCode="VRF">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9179"/>
                  <!-- Item(s) :: verificatie_datum-->
                  <xsl:for-each select="verificatie_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="geverifieerd_met_patientq">
                     <participantRole classCode="PAT"/>
                  </xsl:for-each>
               </participant>
            </xsl:for-each>
            <xsl:for-each select="verificatie_zorgverlener">
               <participant typeCode="VRF">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9180"/>
                  <!-- Item(s) :: verificatie_datum-->
                  <xsl:for-each select="verificatie_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <participantRole classCode="ASSIGNED"/>
               </participant>
            </xsl:for-each>
            <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
               <component typeCode="COMP">
                  <!-- Template :: MP CDA Medicatieafspraak -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
               </component>
            </xsl:for-each>
            <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
               <component typeCode="COMP">
                  <!-- Template :: MP CDA Toedieningsafspraak -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
               </component>
            </xsl:for-each>
            <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
               <component typeCode="COMP">
                  <!-- Template :: MP CDA Medicatiegebruik -->
                  <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141"/>
               </component>
            </xsl:for-each>
         </organizer>
      </xsl:for-each>
   </xsl:template>

   <!-- Basis Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9194_20171117172114"/>

   <!-- Basis Medicatiegegevens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9195_20171117172359"/>

   <!-- Basis Medicatiegebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9196_20171117173848"/>

   <!-- MP CDA Medicatiegegevens -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9197_20171117174100">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9197"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Medicatieafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekkingsverzoek">
                        <entry>
                           <!-- Template :: MP CDA Verstrekkingsverzoek -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9087_20160621125157"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
                        <entry>
                           <!-- Template :: MP CDA Toedieningsafspraak -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="verstrekking">
                        <entry>
                           <!-- Template :: MP CDA Verstrekking -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9094_20160623194106"/>
                        </entry>
                     </xsl:for-each>
                     <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
                        <entry>
                           <!-- Template :: MP CDA Medicatiegebruik -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141"/>
                        </entry>
                     </xsl:for-each>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- MP CDA Sturen Gebruik -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9198_20171117174505">
      <ClinicalDocument xmlns="urn:hl7-org:v3">
         <realmCode code="NL"/>
         <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9198"/>
         <id/>
         <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
         <title/>
         <!-- Item(s) :: document_datum-->
         <xsl:for-each select="document_datum">
            <xsl:call-template name="makeTS.DATETIME.MINValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
         <confidentialityCode/>
         <languageCode/>
         <recordTarget>
            <xsl:for-each select="patient | contactgegevens">
               <patientRole>
                  <!-- Item(s) :: patient_identificatienummer-->
                  <xsl:for-each select="patient_identificatienummer">
                     <xsl:call-template name="makeII.NL.BSNValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">id</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="adresgegevens">
                     <addr>
                        <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                        <!-- Item(s) :: straat-->
                        <xsl:for-each select="straat">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">streetName</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummer-->
                        <xsl:for-each select="huisnummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                        <xsl:if test="huisnummerletter | huisnummertoevoeging">
                           <buildingNumberSuffix>
                              <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                           </buildingNumberSuffix>
                        </xsl:if>
                        <!-- Item(s) :: aanduiding_bij_nummer-->
                        <xsl:for-each select="aanduiding_bij_nummer">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: postcode-->
                        <xsl:for-each select="postcode">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">postalCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: gemeente-->
                        <xsl:for-each select="gemeente">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">county</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: woonplaats-->
                        <xsl:for-each select="woonplaats">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">city</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: land-->
                        <xsl:for-each select="land">
                           <xsl:call-template name="makeADXPValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">country</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: additionele_informatie-->
                        <xsl:for-each select="additionele_informatie">
                           <xsl:call-template name="makeSTValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">unitID</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <useablePeriod/>
                     </addr>
                  </xsl:for-each>
                  <xsl:for-each select="telefoonnummers">
                     <telecom>
                        <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <xsl:for-each select="email_adressen">
                     <telecom>
                        <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                        <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                     </telecom>
                  </xsl:for-each>
                  <patient>
                     <!-- Item(s) :: naamgegevens naamgebruik-->
                     <xsl:for-each select="naamgebruik">
                        <xsl:call-template name="makePN.NLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">name</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geslacht-->
                     <xsl:for-each select="geslacht">
                        <xsl:call-template name="makeCEValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: geboortedatum-->
                     <xsl:for-each select="geboortedatum">
                        <xsl:call-template name="makeTSValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">birthTime</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: meerling_indicator-->
                     <xsl:for-each select="meerling_indicator">
                        <xsl:call-template name="makeBLValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                  </patient>
               </patientRole>
            </xsl:for-each>
         </recordTarget>
         <author>
            <!-- Template :: CDA author -->
            <xsl:call-template name="template_2.16.840.1.113883.10.12.102_20050907000000"/>
         </author>
         <custodian>
            <!-- Template :: MP CDA custodian -->
            <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
         </custodian>
         <xsl:for-each select="verificatie_patient | verificatie_zorgverlener">
            <authenticator>
               <!-- Template :: MP CDA Authenticator -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9061_20151125154654"/>
            </authenticator>
         </xsl:for-each>
         <component>
            <structuredBody>
               <component>
                  <section>
                     <text/>
                     <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
                        <entry>
                           <!-- Template :: MP CDA Medicatiegebruik -->
                           <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141"/>
                        </entry>
                     </xsl:for-each>
                  </section>
               </component>
            </structuredBody>
         </component>
      </ClinicalDocument>
   </xsl:template>

   <!-- MP CDA Medicatieoverzicht -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9199_20171117174854">
      <xsl:for-each select="documentgegevens">
         <ClinicalDocument xmlns="urn:hl7-org:v3">
            <realmCode code="NL"/>
            <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
            <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9199"/>
            <id/>
            <code code="46057-6" codeSystem="2.16.840.1.113883.6.1" displayName="" codeSystemName=""/>
            <title/>
            <!-- Item(s) :: document_datum-->
            <xsl:for-each select="document_datum">
               <xsl:call-template name="makeTS.DATETIME.MINValue">
                  <xsl:with-param name="xsiType" select="''"/>
                  <xsl:with-param name="elemName">effectiveTime</xsl:with-param>
               </xsl:call-template>
            </xsl:for-each>
            <confidentialityCode/>
            <languageCode/>
            <recordTarget>
               <xsl:for-each select="patient | contactgegevens">
                  <patientRole>
                     <!-- Item(s) :: patient_identificatienummer-->
                     <xsl:for-each select="patient_identificatienummer">
                        <xsl:call-template name="makeII.NL.BSNValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">id</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <xsl:for-each select="adresgegevens">
                        <addr>
                           <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                           <!-- Item(s) :: straat-->
                           <xsl:for-each select="straat">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">streetName</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: huisnummer-->
                           <xsl:for-each select="huisnummer">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                           <xsl:if test="huisnummerletter | huisnummertoevoeging">
                              <buildingNumberSuffix>
                                 <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                              </buildingNumberSuffix>
                           </xsl:if>
                           <!-- Item(s) :: aanduiding_bij_nummer-->
                           <xsl:for-each select="aanduiding_bij_nummer">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: postcode-->
                           <xsl:for-each select="postcode">
                              <xsl:call-template name="makeADXPValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">postalCode</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: gemeente-->
                           <xsl:for-each select="gemeente">
                              <xsl:call-template name="makeADXPValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">county</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: woonplaats-->
                           <xsl:for-each select="woonplaats">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">city</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: land-->
                           <xsl:for-each select="land">
                              <xsl:call-template name="makeADXPValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">country</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <!-- Item(s) :: additionele_informatie-->
                           <xsl:for-each select="additionele_informatie">
                              <xsl:call-template name="makeSTValue">
                                 <xsl:with-param name="xsiType" select="''"/>
                                 <xsl:with-param name="elemName">unitID</xsl:with-param>
                              </xsl:call-template>
                           </xsl:for-each>
                           <useablePeriod/>
                        </addr>
                     </xsl:for-each>
                     <xsl:for-each select="telefoonnummers">
                        <telecom>
                           <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                           <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                        </telecom>
                     </xsl:for-each>
                     <xsl:for-each select="email_adressen">
                        <telecom>
                           <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                           <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                        </telecom>
                     </xsl:for-each>
                     <patient>
                        <!-- Item(s) :: naamgegevens naamgebruik-->
                        <xsl:for-each select="naamgebruik">
                           <xsl:call-template name="makePN.NLValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">name</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: geslacht-->
                        <xsl:for-each select="geslacht">
                           <xsl:call-template name="makeCEValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: geboortedatum-->
                        <xsl:for-each select="geboortedatum">
                           <xsl:call-template name="makeTSValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">birthTime</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                        <!-- Item(s) :: meerling_indicator-->
                        <xsl:for-each select="meerling_indicator">
                           <xsl:call-template name="makeBLValue">
                              <xsl:with-param name="xsiType" select="''"/>
                              <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                           </xsl:call-template>
                        </xsl:for-each>
                     </patient>
                  </patientRole>
               </xsl:for-each>
            </recordTarget>
            <xsl:for-each select="auteur">
               <author typeCode="AUT" contextControlCode="OP">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9171"/>
                  <time/>
                  <xsl:choose>
                     <xsl:when test="auteur_is_zorgaanbieder">
                        <xsl:for-each select="auteur_is_zorgaanbieder">
                           <assignedAuthor classCode="ASSIGNED">
                              <id/>
                              <xsl:for-each select="telefoon_email | contactgegevens | zorgaanbieder | organisatie_naam">
                                 <representedOrganization>
                                    <!-- Template :: MP CDA Organization Medicatieoverzicht -->
                                    <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9169_20170521195457"/>
                                 </representedOrganization>
                              </xsl:for-each>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:when test="auteur_is_patient">
                        <xsl:for-each select="auteur_is_patient">
                           <assignedAuthor>
                              <xsl:attribute name="classCode">ASSIGNED</xsl:attribute>
                              <xsl:if test="'TODO-X'">
                                 <id/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id root="" extension=""/>
                              </xsl:if>
                              <xsl:if test="'TODO-X'">
                                 <id nullFlavor=""/>
                              </xsl:if>
                              <code code="ONESELF"/>
                           </assignedAuthor>
                        </xsl:for-each>
                     </xsl:when>
                  </xsl:choose>
               </author>
            </xsl:for-each>
            <custodian>
               <!-- Template :: MP CDA custodian -->
               <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9062_20151125160024"/>
            </custodian>
            <xsl:for-each select="verificatie_patient">
               <participant typeCode="VRF">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9173"/>
                  <!-- Item(s) :: verificatie_datum-->
                  <xsl:for-each select="verificatie_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="geverifieerd_met_patientq">
                     <associatedEntity classCode="PAT"/>
                  </xsl:for-each>
               </participant>
            </xsl:for-each>
            <xsl:for-each select="verificatie_zorgverlener">
               <participant typeCode="VRF">
                  <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9174"/>
                  <!-- Item(s) :: verificatie_datum-->
                  <xsl:for-each select="verificatie_datum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">time</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <xsl:for-each select="geverifieerd_met_zorgverlenerq | geverifieerd_met_zorgverlenerq">
                     <associatedEntity classCode="ASSIGNED"/>
                  </xsl:for-each>
               </participant>
            </xsl:for-each>
            <component>
               <structuredBody>
                  <component>
                     <section>
                        <text/>
                        <xsl:for-each select="medicatieafspraak | gebruiksinstructie">
                           <entry>
                              <!-- Template :: MP CDA Medicatieafspraak -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9148_20160725130413"/>
                           </entry>
                        </xsl:for-each>
                        <xsl:for-each select="toedieningsafspraak | gebruiksinstructie">
                           <entry>
                              <!-- Template :: MP CDA Toedieningsafspraak -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9152_20160726163318"/>
                           </entry>
                        </xsl:for-each>
                        <xsl:for-each select="gebruiksinstructie | aantal | medicatie_gebruik | informant | auteur">
                           <entry>
                              <!-- Template :: MP CDA Medicatiegebruik -->
                              <xsl:call-template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9190_20171025120141"/>
                           </entry>
                        </xsl:for-each>
                     </section>
                  </component>
               </structuredBody>
            </component>
         </ClinicalDocument>
      </xsl:for-each>
   </xsl:template>

   <!-- Kopie-indicator -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.20.77.10.9200_20180112101847">
      <observation xmlns="urn:hl7-org:v3" classCode="OBS" moodCode="EVN">
         <templateId root="2.16.840.1.113883.2.4.3.11.60.20.77.10.9200"/>
         <code code="16" codeSystem="2.16.840.1.113883.2.4.3.11.60.20.77.5.2" displayName=""/>
         <!-- Item(s) :: gebruik_indicator kopie_indicator kopie_indicator kopie_indicator-->
         <xsl:for-each select="gebruik_indicator | kopie_indicator | kopie_indicator | kopie_indicator">
            <xsl:call-template name="makeBLValue">
               <xsl:with-param name="xsiType" select="''"/>
               <xsl:with-param name="elemName">value</xsl:with-param>
            </xsl:call-template>
         </xsl:for-each>
      </observation>
   </xsl:template>

   <!-- name person NL - generic -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.3.10.1.100_20170602000000">
      <xsl:attribute name="use"/>
      <validTime xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- address NL - generic -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.3.10.1.101_20170602000000">
      <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
      <!-- Item(s) :: straat-->
      <xsl:for-each select="straat">
         <xsl:call-template name="makeSTValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">streetName</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: huisnummer-->
      <xsl:for-each select="huisnummer">
         <xsl:call-template name="makeSTValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">houseNumber</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
      <xsl:if test="huisnummerletter | huisnummertoevoeging">
         <buildingNumberSuffix xmlns="urn:hl7-org:v3">
            <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
         </buildingNumberSuffix>
      </xsl:if>
      <!-- Item(s) :: aanduiding_bij_nummer-->
      <xsl:for-each select="aanduiding_bij_nummer">
         <xsl:call-template name="makeSTValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: postcode-->
      <xsl:for-each select="postcode">
         <xsl:call-template name="makeADXPValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">postalCode</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: gemeente-->
      <xsl:for-each select="gemeente">
         <xsl:call-template name="makeADXPValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">county</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: woonplaats-->
      <xsl:for-each select="woonplaats">
         <xsl:call-template name="makeSTValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">city</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: land-->
      <xsl:for-each select="land">
         <xsl:call-template name="makeADXPValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">country</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <!-- Item(s) :: additionele_informatie-->
      <xsl:for-each select="additionele_informatie">
         <xsl:call-template name="makeSTValue">
            <xsl:with-param name="xsiType" select="''"/>
            <xsl:with-param name="elemName">unitID</xsl:with-param>
         </xsl:call-template>
      </xsl:for-each>
      <useablePeriod xmlns="urn:hl7-org:v3"/>
   </xsl:template>

   <!-- phone number - generic -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.3.10.1.103_20170602000000">
      <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
      <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
   </xsl:template>

   <!-- email address - generic -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.3.10.1.104_20170602000000">
      <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
      <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
   </xsl:template>

   <!-- CDA recordTarget SDTC NL BSN Contactible -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.3.10.3_20170602000000">
      <recordTarget xmlns="urn:hl7-org:v3">
         <xsl:for-each select="patient | contactgegevens">
            <patientRole>
               <!-- Item(s) :: patient_identificatienummer-->
               <xsl:for-each select="patient_identificatienummer">
                  <xsl:call-template name="makeII.NL.BSNValue">
                     <xsl:with-param name="xsiType" select="''"/>
                     <xsl:with-param name="elemName">id</xsl:with-param>
                  </xsl:call-template>
               </xsl:for-each>
               <xsl:for-each select="adresgegevens">
                  <addr>
                     <xsl:attribute name="use" select="adres_soort/(@code, @value)[1]"/>
                     <!-- Item(s) :: straat-->
                     <xsl:for-each select="straat">
                        <xsl:call-template name="makeSTValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">streetName</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: huisnummer-->
                     <xsl:for-each select="huisnummer">
                        <xsl:call-template name="makeSTValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">houseNumber</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: huisnummerletter huisnummertoevoeging-->
                     <xsl:if test="huisnummerletter | huisnummertoevoeging">
                        <buildingNumberSuffix>
                           <xsl:value-of select="string-join(huisnummerletter | huisnummertoevoeging, ' ')"/>
                        </buildingNumberSuffix>
                     </xsl:if>
                     <!-- Item(s) :: aanduiding_bij_nummer-->
                     <xsl:for-each select="aanduiding_bij_nummer">
                        <xsl:call-template name="makeSTValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">additionalLocator</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: postcode-->
                     <xsl:for-each select="postcode">
                        <xsl:call-template name="makeADXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">postalCode</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: gemeente-->
                     <xsl:for-each select="gemeente">
                        <xsl:call-template name="makeADXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">county</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: woonplaats-->
                     <xsl:for-each select="woonplaats">
                        <xsl:call-template name="makeSTValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">city</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: land-->
                     <xsl:for-each select="land">
                        <xsl:call-template name="makeADXPValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">country</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <!-- Item(s) :: additionele_informatie-->
                     <xsl:for-each select="additionele_informatie">
                        <xsl:call-template name="makeSTValue">
                           <xsl:with-param name="xsiType" select="''"/>
                           <xsl:with-param name="elemName">unitID</xsl:with-param>
                        </xsl:call-template>
                     </xsl:for-each>
                     <useablePeriod/>
                  </addr>
               </xsl:for-each>
               <xsl:for-each select="telefoonnummers">
                  <telecom>
                     <xsl:attribute name="use" select="nummer_soort/(@code, @value)[1]"/>
                     <xsl:attribute name="value" select="telefoonnummer/(@code, @value)[1]"/>
                  </telecom>
               </xsl:for-each>
               <xsl:for-each select="email_adressen">
                  <telecom>
                     <xsl:attribute name="use" select="email_soort/(@code, @value)[1]"/>
                     <xsl:attribute name="value" select="email_adres/(@code, @value)[1]"/>
                  </telecom>
               </xsl:for-each>
               <patient>
                  <!-- Item(s) :: naamgegevens naamgebruik-->
                  <xsl:for-each select="naamgebruik">
                     <xsl:call-template name="makePN.NLValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">name</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: geslacht-->
                  <xsl:for-each select="geslacht">
                     <xsl:call-template name="makeCEValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">administrativeGenderCode</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: geboortedatum-->
                  <xsl:for-each select="geboortedatum">
                     <xsl:call-template name="makeTSValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">birthTime</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
                  <!-- Item(s) :: meerling_indicator-->
                  <xsl:for-each select="meerling_indicator">
                     <xsl:call-template name="makeBLValue">
                        <xsl:with-param name="xsiType" select="''"/>
                        <xsl:with-param name="elemName">multipleBirthInd</xsl:with-param>
                     </xsl:call-template>
                  </xsl:for-each>
               </patient>
            </patientRole>
         </xsl:for-each>
      </recordTarget>
   </xsl:template>

   <!-- MP Afspraak Identificatie -->
   <xsl:template name="template_2.16.840.1.113883.2.4.3.11.60.77.10.9120_20160624130542"/>

   <!-- AssignedPartyNL -->
   <xsl:template name="template_2.16.840.1.113883.2.4.6.10.70.20_20111228000000">
      <templateId xmlns="urn:hl7-org:v3" root="2.16.840.1.113883.2.4.6.10.70.20"/>
      <code xmlns="urn:hl7-org:v3"/>
      <addr xmlns="urn:hl7-org:v3"/>
      <representedOrganization xmlns="urn:hl7-org:v3" classCode="ORG" determinerCode="INSTANCE">
         <id root="2.16.528.1.1007.3.3"/>
         <code/>
         <name/>
         <addr/>
      </representedOrganization>
   </xsl:template>
</stylesheet>
